2020-06-12 22:04:27,416 1445 DEBUG args: {'bool_property_list': None,
 'case_sensitive': True,
 'db': 'test_db',
 'debug': True,
 'distinct_id_from': 'user_id',
 'event_default': None,
 'event_from': 'action',
 'filename': None,
 'host': 'localhost',
 'is_login': False,
 'output_file': None,
 'password': 'pass',
 'port': 3307,
 'project': None,
 'quit_on_error': False,
 'skip_cnt': 0,
 'sql': 'select user_id, action, time, item_id, item_name from events order by '
        'time;',
 'subparser_name': 'mysql_event',
 'timestamp_default': None,
 'timestamp_format': '%Y-%m-%d %H:%M:%S',
 'timestamp_from': 'time',
 'url': 'http://localhost:8106/sa',
 'user': 'root'}
2020-06-12 22:05:41,669 1445 DEBUG args: {'bool_property_list': None,
 'case_sensitive': True,
 'db': 'test_db',
 'debug': True,
 'distinct_id_from': 'user_id',
 'event_default': None,
 'event_from': 'action',
 'filename': None,
 'host': 'localhost',
 'is_login': False,
 'output_file': None,
 'password': 'pass',
 'port': 3307,
 'project': None,
 'quit_on_error': False,
 'skip_cnt': 0,
 'sql': 'select user_id, action, time, item_id, item_name from events order by '
        'time;',
 'subparser_name': 'mysql_event',
 'timestamp_default': None,
 'timestamp_format': '%Y-%m-%d %H:%M:%S',
 'timestamp_from': 'time',
 'url': 'https://testsensorsapi.juhaolian.cn/sa?project=default&token=schemaLimited-xTvWlzDD',
 'user': 'root'}
2020-06-12 22:10:38,761 1445 DEBUG args: {'bool_property_list': None,
 'case_sensitive': True,
 'db': 'hisense',
 'debug': True,
 'distinct_id_from': 'user_id',
 'event_default': None,
 'event_from': 'action',
 'filename': None,
 'host': '127.0.0.1',
 'is_login': False,
 'output_file': None,
 'password': '123456',
 'port': 3306,
 'project': None,
 'quit_on_error': False,
 'skip_cnt': 0,
 'sql': 'select user_id, action, time, item_id, item_name from events order by '
        'time;',
 'subparser_name': 'mysql_event',
 'timestamp_default': None,
 'timestamp_format': '%Y-%m-%d %H:%M:%S',
 'timestamp_from': 'time',
 'url': 'https://testsensorsapi.juhaolian.cn/sa?project=default&token=schemaLimited-xTvWlzDD',
 'user': 'root'}
2020-06-12 22:11:53,582 1445 DEBUG args: {'bool_property_list': None,
 'case_sensitive': True,
 'db': 'hisense',
 'debug': True,
 'distinct_id_from': 'user_id',
 'event_default': None,
 'event_from': 'action',
 'filename': None,
 'host': '127.0.0.1',
 'is_login': False,
 'output_file': None,
 'password': '123456',
 'port': 3306,
 'project': None,
 'quit_on_error': False,
 'skip_cnt': 0,
 'sql': 'select user_id, action, time, item_id, item_name from goods_spu order '
        'by time;',
 'subparser_name': 'mysql_event',
 'timestamp_default': None,
 'timestamp_format': '%Y-%m-%d %H:%M:%S',
 'timestamp_from': 'time',
 'url': 'https://testsensorsapi.juhaolian.cn/sa?project=default&token=schemaLimited-xTvWlzDD',
 'user': 'root'}
2020-06-12 22:16:21,416 1445 DEBUG args: {'bool_property_list': None,
 'case_sensitive': True,
 'db': 'hisense',
 'debug': True,
 'distinct_id_from': 'user_id',
 'event_default': None,
 'event_from': 'action',
 'filename': None,
 'host': '127.0.0.1',
 'is_login': False,
 'output_file': None,
 'password': '123456',
 'port': 3306,
 'project': None,
 'quit_on_error': False,
 'skip_cnt': 0,
 'sql': 'select spu_code, spu_name, created_time, out_time from goods_spu '
        'order by created_time limit 20;',
 'subparser_name': 'mysql_event',
 'timestamp_default': None,
 'timestamp_format': '%Y-%m-%d %H:%M:%S',
 'timestamp_from': 'time',
 'url': 'https://testsensorsapi.juhaolian.cn/sa?project=default&token=schemaLimited-xTvWlzDD',
 'user': 'root'}
2020-06-12 22:16:21,649 1108 INFO start importing from mysql, sql=select spu_code, spu_name, created_time, out_time from goods_spu order by created_time limit 20;
2020-06-12 22:16:21,651 186 DEBUG debug url: https://testsensorsapi.juhaolian.cn/debug?project=default&token=schemaLimited-xTvWlzDD
2020-06-12 22:16:22,108 189 DEBUG response: Sensors Analytics is ready to receive your data!
2020-06-12 22:16:22,109 1456 INFO running debug mode
2020-06-12 22:16:22,110 1479 INFO progress 0.00% {'total_write': 0, 'total_read': 0, 'error': 0, 'skip': 0, 'total': 20}
2020-06-12 22:16:22,114 1491 WARNING failed to parse line 1
2020-06-12 22:16:22,123 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 464, in send_event
    event = self.get_event(record)
  File "format_importer.py", line 412, in __get_event_from_record
    raise Exception('cannot find event[%s] in record[%s]' % (self.args.event_from, record))
Exception: cannot find event[action] in record[{'spu_code': '367516301820481537', 'spu_name': '¿¨ÂüÊÖÌá´üËÖÆ¤µ°¾íÏÌµ°»ÆÎ¶258g/´ü', 'created_time': datetime.datetime(2019, 12, 19, 13, 45, 24), 'out_time': datetime.datetime(2019, 12, 27, 10, 50, 35)}]

2020-06-12 22:16:22,168 1493 WARNING cannot find event[action] in record[{'spu_code': '367516301820481537', 'spu_name': '¿¨ÂüÊÖÌá´üËÖÆ¤µ°¾íÏÌµ°»ÆÎ¶258g/´ü', 'created_time': datetime.datetime(2019, 12, 19, 13, 45, 24), 'out_time': datetime.datetime(2019, 12, 27, 10, 50, 35)}]
2020-06-12 22:16:22,177 1491 WARNING failed to parse line 2
2020-06-12 22:16:22,184 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 464, in send_event
    event = self.get_event(record)
  File "format_importer.py", line 412, in __get_event_from_record
    raise Exception('cannot find event[%s] in record[%s]' % (self.args.event_from, record))
Exception: cannot find event[action] in record[{'spu_code': '367516305716989953', 'spu_name': '¿¨ÂüÊÖÌá´üËÖÆ¤µ°¾íÁñÁ«Î¶258g/´ü', 'created_time': datetime.datetime(2019, 12, 19, 13, 45, 25)}]

2020-06-12 22:16:22,204 1493 WARNING cannot find event[action] in record[{'spu_code': '367516305716989953', 'spu_name': '¿¨ÂüÊÖÌá´üËÖÆ¤µ°¾íÁñÁ«Î¶258g/´ü', 'created_time': datetime.datetime(2019, 12, 19, 13, 45, 25)}]
2020-06-12 22:16:22,213 1491 WARNING failed to parse line 3
2020-06-12 22:16:22,217 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 464, in send_event
    event = self.get_event(record)
  File "format_importer.py", line 412, in __get_event_from_record
    raise Exception('cannot find event[%s] in record[%s]' % (self.args.event_from, record))
Exception: cannot find event[action] in record[{'spu_code': '367516307197579265', 'spu_name': '¿¨ÂüÊÖÌá´ü×°Íþ»¯Ö¥Ê¿Î¶258g/´ü', 'created_time': datetime.datetime(2019, 12, 19, 13, 45, 25)}]

2020-06-12 22:16:22,234 1493 WARNING cannot find event[action] in record[{'spu_code': '367516307197579265', 'spu_name': '¿¨ÂüÊÖÌá´ü×°Íþ»¯Ö¥Ê¿Î¶258g/´ü', 'created_time': datetime.datetime(2019, 12, 19, 13, 45, 25)}]
2020-06-12 22:16:22,241 1491 WARNING failed to parse line 4
2020-06-12 22:16:22,246 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 464, in send_event
    event = self.get_event(record)
  File "format_importer.py", line 412, in __get_event_from_record
    raise Exception('cannot find event[%s] in record[%s]' % (self.args.event_from, record))
Exception: cannot find event[action] in record[{'spu_code': '367516308833357825', 'spu_name': '¿¨ÂüÊÖÌá´ü×°Íþ»¯ÏÌµ°»ÆÎ¶258g/´ü', 'created_time': datetime.datetime(2019, 12, 19, 13, 45, 25)}]

2020-06-12 22:16:22,260 1493 WARNING cannot find event[action] in record[{'spu_code': '367516308833357825', 'spu_name': '¿¨ÂüÊÖÌá´ü×°Íþ»¯ÏÌµ°»ÆÎ¶258g/´ü', 'created_time': datetime.datetime(2019, 12, 19, 13, 45, 25)}]
2020-06-12 22:16:22,268 1491 WARNING failed to parse line 5
2020-06-12 22:16:22,273 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 464, in send_event
    event = self.get_event(record)
  File "format_importer.py", line 412, in __get_event_from_record
    raise Exception('cannot find event[%s] in record[%s]' % (self.args.event_from, record))
Exception: cannot find event[action] in record[{'spu_code': '367516310750154753', 'spu_name': '¿¨Âü´àÆ¤µ°¾íÇÉ¿ËÁ¦»¨ÉúÎ¶80g/´ü', 'created_time': datetime.datetime(2019, 12, 19, 13, 45, 26)}]

2020-06-12 22:16:22,290 1493 WARNING cannot find event[action] in record[{'spu_code': '367516310750154753', 'spu_name': '¿¨Âü´àÆ¤µ°¾íÇÉ¿ËÁ¦»¨ÉúÎ¶80g/´ü', 'created_time': datetime.datetime(2019, 12, 19, 13, 45, 26)}]
2020-06-12 22:16:22,298 1491 WARNING failed to parse line 6
2020-06-12 22:16:22,302 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 464, in send_event
    event = self.get_event(record)
  File "format_importer.py", line 412, in __get_event_from_record
    raise Exception('cannot find event[%s] in record[%s]' % (self.args.event_from, record))
Exception: cannot find event[action] in record[{'spu_code': '367516312109109249', 'spu_name': '¿¨Âü´àÆ¤µ°¾íÁñÁ«Î¶80g/´ü', 'created_time': datetime.datetime(2019, 12, 19, 13, 45, 26)}]

2020-06-12 22:16:22,318 1493 WARNING cannot find event[action] in record[{'spu_code': '367516312109109249', 'spu_name': '¿¨Âü´àÆ¤µ°¾íÁñÁ«Î¶80g/´ü', 'created_time': datetime.datetime(2019, 12, 19, 13, 45, 26)}]
2020-06-12 22:16:22,327 1491 WARNING failed to parse line 7
2020-06-12 22:16:22,332 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 464, in send_event
    event = self.get_event(record)
  File "format_importer.py", line 412, in __get_event_from_record
    raise Exception('cannot find event[%s] in record[%s]' % (self.args.event_from, record))
Exception: cannot find event[action] in record[{'spu_code': '367516313434509313', 'spu_name': '¿¨Âü´àÆ¤µ°¾íÏÌµ°»ÆÎ¶80g/´ü', 'created_time': datetime.datetime(2019, 12, 19, 13, 45, 27)}]

2020-06-12 22:16:22,347 1493 WARNING cannot find event[action] in record[{'spu_code': '367516313434509313', 'spu_name': '¿¨Âü´àÆ¤µ°¾íÏÌµ°»ÆÎ¶80g/´ü', 'created_time': datetime.datetime(2019, 12, 19, 13, 45, 27)}]
2020-06-12 22:16:22,353 1491 WARNING failed to parse line 8
2020-06-12 22:16:22,358 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 464, in send_event
    event = self.get_event(record)
  File "format_importer.py", line 412, in __get_event_from_record
    raise Exception('cannot find event[%s] in record[%s]' % (self.args.event_from, record))
Exception: cannot find event[action] in record[{'spu_code': '367516314730549249', 'spu_name': 'Ð¡ÖíÅåÆæÅ£ÄÌÇúÆæ100g/ºÐ', 'created_time': datetime.datetime(2019, 12, 19, 13, 45, 27)}]

2020-06-12 22:16:22,378 1493 WARNING cannot find event[action] in record[{'spu_code': '367516314730549249', 'spu_name': 'Ð¡ÖíÅåÆæÅ£ÄÌÇúÆæ100g/ºÐ', 'created_time': datetime.datetime(2019, 12, 19, 13, 45, 27)}]
2020-06-12 22:16:22,391 1491 WARNING failed to parse line 9
2020-06-12 22:16:22,394 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 464, in send_event
    event = self.get_event(record)
  File "format_importer.py", line 412, in __get_event_from_record
    raise Exception('cannot find event[%s] in record[%s]' % (self.args.event_from, record))
Exception: cannot find event[action] in record[{'spu_code': '367516316127252481', 'spu_name': 'Ð¡ÖíÅåÆæÕº½´±­ÇÉ¿ËÁ¦Î¶25g/±­', 'created_time': datetime.datetime(2019, 12, 19, 13, 45, 27)}]

2020-06-12 22:16:22,415 1493 WARNING cannot find event[action] in record[{'spu_code': '367516316127252481', 'spu_name': 'Ð¡ÖíÅåÆæÕº½´±­ÇÉ¿ËÁ¦Î¶25g/±­', 'created_time': datetime.datetime(2019, 12, 19, 13, 45, 27)}]
2020-06-12 22:16:22,427 1491 WARNING failed to parse line 10
2020-06-12 22:16:22,430 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 464, in send_event
    event = self.get_event(record)
  File "format_importer.py", line 412, in __get_event_from_record
    raise Exception('cannot find event[%s] in record[%s]' % (self.args.event_from, record))
Exception: cannot find event[action] in record[{'spu_code': '367516317490401281', 'spu_name': 'Ð¡ÖíÅåÆæÕº½´±­²ÝÝ®Î¶25g/±­', 'created_time': datetime.datetime(2019, 12, 19, 13, 45, 27)}]

2020-06-12 22:16:22,446 1493 WARNING cannot find event[action] in record[{'spu_code': '367516317490401281', 'spu_name': 'Ð¡ÖíÅåÆæÕº½´±­²ÝÝ®Î¶25g/±­', 'created_time': datetime.datetime(2019, 12, 19, 13, 45, 27)}]
2020-06-12 22:16:22,453 1491 WARNING failed to parse line 11
2020-06-12 22:16:22,458 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 464, in send_event
    event = self.get_event(record)
  File "format_importer.py", line 412, in __get_event_from_record
    raise Exception('cannot find event[%s] in record[%s]' % (self.args.event_from, record))
Exception: cannot find event[action] in record[{'spu_code': '367516318866132993', 'spu_name': 'Ð¡ÖíÅåÆæÇÉ¿ËÁ¦Î¶×¢ÐÄ±ý¸É160g/ºÐ', 'created_time': datetime.datetime(2019, 12, 19, 13, 45, 28)}]

2020-06-12 22:16:22,473 1493 WARNING cannot find event[action] in record[{'spu_code': '367516318866132993', 'spu_name': 'Ð¡ÖíÅåÆæÇÉ¿ËÁ¦Î¶×¢ÐÄ±ý¸É160g/ºÐ', 'created_time': datetime.datetime(2019, 12, 19, 13, 45, 28)}]
2020-06-12 22:16:22,481 1491 WARNING failed to parse line 12
2020-06-12 22:16:22,488 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 464, in send_event
    event = self.get_event(record)
  File "format_importer.py", line 412, in __get_event_from_record
    raise Exception('cannot find event[%s] in record[%s]' % (self.args.event_from, record))
Exception: cannot find event[action] in record[{'spu_code': '367516320283807745', 'spu_name': 'Ð¡ÖíÅåÆæ²ÝÝ®Î¶×¢ÐÄ±ý¸É160g/ºÐ', 'created_time': datetime.datetime(2019, 12, 19, 13, 45, 28)}]

2020-06-12 22:16:22,506 1493 WARNING cannot find event[action] in record[{'spu_code': '367516320283807745', 'spu_name': 'Ð¡ÖíÅåÆæ²ÝÝ®Î¶×¢ÐÄ±ý¸É160g/ºÐ', 'created_time': datetime.datetime(2019, 12, 19, 13, 45, 28)}]
2020-06-12 22:16:22,517 1491 WARNING failed to parse line 13
2020-06-12 22:16:22,526 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 464, in send_event
    event = self.get_event(record)
  File "format_importer.py", line 412, in __get_event_from_record
    raise Exception('cannot find event[%s] in record[%s]' % (self.args.event_from, record))
Exception: cannot find event[action] in record[{'spu_code': '367516321684705281', 'spu_name': 'Ð¡ÖíÅåÆæ°ô±ýÊß²ËÎ¶48g/ºÐ', 'created_time': datetime.datetime(2019, 12, 19, 13, 45, 28), 'out_time': datetime.datetime(2019, 12, 27, 10, 50, 35)}]

2020-06-12 22:16:22,543 1493 WARNING cannot find event[action] in record[{'spu_code': '367516321684705281', 'spu_name': 'Ð¡ÖíÅåÆæ°ô±ýÊß²ËÎ¶48g/ºÐ', 'created_time': datetime.datetime(2019, 12, 19, 13, 45, 28), 'out_time': datetime.datetime(2019, 12, 27, 10, 50, 35)}]
2020-06-12 22:16:22,557 1491 WARNING failed to parse line 14
2020-06-12 22:16:22,563 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 464, in send_event
    event = self.get_event(record)
  File "format_importer.py", line 412, in __get_event_from_record
    raise Exception('cannot find event[%s] in record[%s]' % (self.args.event_from, record))
Exception: cannot find event[action] in record[{'spu_code': '367516323005911041', 'spu_name': 'Ð¡ÖíÅåÆæ°ô±ý·¬ÇÑÎ¶48g/ºÐ', 'created_time': datetime.datetime(2019, 12, 19, 13, 45, 29)}]

2020-06-12 22:16:22,612 1493 WARNING cannot find event[action] in record[{'spu_code': '367516323005911041', 'spu_name': 'Ð¡ÖíÅåÆæ°ô±ý·¬ÇÑÎ¶48g/ºÐ', 'created_time': datetime.datetime(2019, 12, 19, 13, 45, 29)}]
2020-06-12 22:16:22,621 1491 WARNING failed to parse line 15
2020-06-12 22:16:22,624 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 464, in send_event
    event = self.get_event(record)
  File "format_importer.py", line 412, in __get_event_from_record
    raise Exception('cannot find event[%s] in record[%s]' % (self.args.event_from, record))
Exception: cannot find event[action] in record[{'spu_code': '367516324515860481', 'spu_name': 'Ð¡ÖíÅåÆæ°ô±ýÅ£ÄÌÎ¶48g/ºÐ', 'created_time': datetime.datetime(2019, 12, 19, 13, 45, 29)}]

2020-06-12 22:16:22,642 1493 WARNING cannot find event[action] in record[{'spu_code': '367516324515860481', 'spu_name': 'Ð¡ÖíÅåÆæ°ô±ýÅ£ÄÌÎ¶48g/ºÐ', 'created_time': datetime.datetime(2019, 12, 19, 13, 45, 29)}]
2020-06-12 22:16:22,648 1491 WARNING failed to parse line 16
2020-06-12 22:16:22,652 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 464, in send_event
    event = self.get_event(record)
  File "format_importer.py", line 412, in __get_event_from_record
    raise Exception('cannot find event[%s] in record[%s]' % (self.args.event_from, record))
Exception: cannot find event[action] in record[{'spu_code': '367516325853843457', 'spu_name': 'ÇàÊ³¾«ÖÆ±ý¸É240g/°ü', 'created_time': datetime.datetime(2019, 12, 19, 13, 45, 29)}]

2020-06-12 22:16:22,678 1493 WARNING cannot find event[action] in record[{'spu_code': '367516325853843457', 'spu_name': 'ÇàÊ³¾«ÖÆ±ý¸É240g/°ü', 'created_time': datetime.datetime(2019, 12, 19, 13, 45, 29)}]
2020-06-12 22:16:22,682 1491 WARNING failed to parse line 17
2020-06-12 22:16:22,685 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 464, in send_event
    event = self.get_event(record)
  File "format_importer.py", line 412, in __get_event_from_record
    raise Exception('cannot find event[%s] in record[%s]' % (self.args.event_from, record))
Exception: cannot find event[action] in record[{'spu_code': '367516327242158081', 'spu_name': 'ÇàÊ³ÌØÖÆ¸ÆÄÌ±ý¸É225g/°ü', 'created_time': datetime.datetime(2019, 12, 19, 13, 45, 30)}]

2020-06-12 22:16:22,708 1493 WARNING cannot find event[action] in record[{'spu_code': '367516327242158081', 'spu_name': 'ÇàÊ³ÌØÖÆ¸ÆÄÌ±ý¸É225g/°ü', 'created_time': datetime.datetime(2019, 12, 19, 13, 45, 30)}]
2020-06-12 22:16:22,714 1491 WARNING failed to parse line 18
2020-06-12 22:16:22,716 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 464, in send_event
    event = self.get_event(record)
  File "format_importer.py", line 412, in __get_event_from_record
    raise Exception('cannot find event[%s] in record[%s]' % (self.args.event_from, record))
Exception: cannot find event[action] in record[{'spu_code': '367516328815022081', 'spu_name': 'ÇàÊ³ÌúÐ¿¸ÆÄÌ±ý¸É225g/°ü', 'created_time': datetime.datetime(2019, 12, 19, 13, 45, 30)}]

2020-06-12 22:16:22,732 1493 WARNING cannot find event[action] in record[{'spu_code': '367516328815022081', 'spu_name': 'ÇàÊ³ÌúÐ¿¸ÆÄÌ±ý¸É225g/°ü', 'created_time': datetime.datetime(2019, 12, 19, 13, 45, 30)}]
2020-06-12 22:16:22,737 1491 WARNING failed to parse line 19
2020-06-12 22:16:22,741 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 464, in send_event
    event = self.get_event(record)
  File "format_importer.py", line 412, in __get_event_from_record
    raise Exception('cannot find event[%s] in record[%s]' % (self.args.event_from, record))
Exception: cannot find event[action] in record[{'spu_code': '367516330207531009', 'spu_name': 'ÇàÊ³ÀÏÄê¸ÆÄÌ±ý¸É225g/°ü', 'created_time': datetime.datetime(2019, 12, 19, 13, 45, 31)}]

2020-06-12 22:16:22,757 1493 WARNING cannot find event[action] in record[{'spu_code': '367516330207531009', 'spu_name': 'ÇàÊ³ÀÏÄê¸ÆÄÌ±ý¸É225g/°ü', 'created_time': datetime.datetime(2019, 12, 19, 13, 45, 31)}]
2020-06-12 22:16:22,764 1491 WARNING failed to parse line 20
2020-06-12 22:16:22,768 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 464, in send_event
    event = self.get_event(record)
  File "format_importer.py", line 412, in __get_event_from_record
    raise Exception('cannot find event[%s] in record[%s]' % (self.args.event_from, record))
Exception: cannot find event[action] in record[{'spu_code': '367516331587457025', 'spu_name': 'ÇàÊ³ÌØÖÆ¸ÆÄÌ±ý¸É£¨´óÀñ°ü£©1350g/°ü', 'created_time': datetime.datetime(2019, 12, 19, 13, 45, 31)}]

2020-06-12 22:16:22,782 1493 WARNING cannot find event[action] in record[{'spu_code': '367516331587457025', 'spu_name': 'ÇàÊ³ÌØÖÆ¸ÆÄÌ±ý¸É£¨´óÀñ°ü£©1350g/°ü', 'created_time': datetime.datetime(2019, 12, 19, 13, 45, 31)}]
2020-06-12 22:16:22,792 1195 INFO end import from mysql.
2020-06-12 22:16:22,793 1505 INFO counter = {'total_write': 0, 'total_read': 20, 'error': 20, 'skip': 0, 'total': 20}.
2020-06-12 22:16:22,795 1507 INFO --debug ²ÎÊýÊ±²»»áÕæÕýµ¼ÈëÊý¾Ý
2020-06-12 22:18:25,876 1445 DEBUG args: {'bool_property_list': None,
 'case_sensitive': True,
 'db': 'hisense',
 'debug': True,
 'distinct_id_from': 'spu_code',
 'event_default': None,
 'event_from': 'spu_name',
 'filename': None,
 'host': '127.0.0.1',
 'is_login': False,
 'output_file': None,
 'password': '123456',
 'port': 3306,
 'project': None,
 'quit_on_error': False,
 'skip_cnt': 0,
 'sql': 'select spu_code, spu_name, created_time, out_time from goods_spu '
        'order by created_time limit 20;',
 'subparser_name': 'mysql_event',
 'timestamp_default': None,
 'timestamp_format': '%Y-%m-%d %H:%M:%S',
 'timestamp_from': 'time',
 'url': 'https://testsensorsapi.juhaolian.cn/sa?project=default&token=schemaLimited-xTvWlzDD',
 'user': 'root'}
2020-06-12 22:18:26,118 1108 INFO start importing from mysql, sql=select spu_code, spu_name, created_time, out_time from goods_spu order by created_time limit 20;
2020-06-12 22:18:26,120 186 DEBUG debug url: https://testsensorsapi.juhaolian.cn/debug?project=default&token=schemaLimited-xTvWlzDD
2020-06-12 22:18:26,326 189 DEBUG response: Sensors Analytics is ready to receive your data!
2020-06-12 22:18:26,326 1456 INFO running debug mode
2020-06-12 22:18:26,328 1479 INFO progress 0.00% {'total_write': 0, 'total_read': 0, 'error': 0, 'skip': 0, 'total': 20}
2020-06-12 22:18:26,329 1491 WARNING failed to parse line 1
2020-06-12 22:18:26,340 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 466, in send_event
    timestamp = self.get_timestamp(record)
  File "format_importer.py", line 422, in __get_timestamp_from_record
    raise Exception('cannot find timestamp[%s] in record[%s]' % (self.args.timestamp_from, record))
Exception: cannot find timestamp[time] in record[{'spu_code': '367516301820481537', 'spu_name': '¿¨ÂüÊÖÌá´üËÖÆ¤µ°¾íÏÌµ°»ÆÎ¶258g/´ü', 'created_time': datetime.datetime(2019, 12, 19, 13, 45, 24), 'out_time': datetime.datetime(2019, 12, 27, 10, 50, 35)}]

2020-06-12 22:18:26,354 1493 WARNING cannot find timestamp[time] in record[{'spu_code': '367516301820481537', 'spu_name': '¿¨ÂüÊÖÌá´üËÖÆ¤µ°¾íÏÌµ°»ÆÎ¶258g/´ü', 'created_time': datetime.datetime(2019, 12, 19, 13, 45, 24), 'out_time': datetime.datetime(2019, 12, 27, 10, 50, 35)}]
2020-06-12 22:18:26,365 1491 WARNING failed to parse line 2
2020-06-12 22:18:26,369 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 466, in send_event
    timestamp = self.get_timestamp(record)
  File "format_importer.py", line 422, in __get_timestamp_from_record
    raise Exception('cannot find timestamp[%s] in record[%s]' % (self.args.timestamp_from, record))
Exception: cannot find timestamp[time] in record[{'spu_code': '367516305716989953', 'spu_name': '¿¨ÂüÊÖÌá´üËÖÆ¤µ°¾íÁñÁ«Î¶258g/´ü', 'created_time': datetime.datetime(2019, 12, 19, 13, 45, 25)}]

2020-06-12 22:18:26,383 1493 WARNING cannot find timestamp[time] in record[{'spu_code': '367516305716989953', 'spu_name': '¿¨ÂüÊÖÌá´üËÖÆ¤µ°¾íÁñÁ«Î¶258g/´ü', 'created_time': datetime.datetime(2019, 12, 19, 13, 45, 25)}]
2020-06-12 22:18:26,390 1491 WARNING failed to parse line 3
2020-06-12 22:18:26,394 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 466, in send_event
    timestamp = self.get_timestamp(record)
  File "format_importer.py", line 422, in __get_timestamp_from_record
    raise Exception('cannot find timestamp[%s] in record[%s]' % (self.args.timestamp_from, record))
Exception: cannot find timestamp[time] in record[{'spu_code': '367516307197579265', 'spu_name': '¿¨ÂüÊÖÌá´ü×°Íþ»¯Ö¥Ê¿Î¶258g/´ü', 'created_time': datetime.datetime(2019, 12, 19, 13, 45, 25)}]

2020-06-12 22:18:26,409 1493 WARNING cannot find timestamp[time] in record[{'spu_code': '367516307197579265', 'spu_name': '¿¨ÂüÊÖÌá´ü×°Íþ»¯Ö¥Ê¿Î¶258g/´ü', 'created_time': datetime.datetime(2019, 12, 19, 13, 45, 25)}]
2020-06-12 22:18:26,417 1491 WARNING failed to parse line 4
2020-06-12 22:18:26,421 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 466, in send_event
    timestamp = self.get_timestamp(record)
  File "format_importer.py", line 422, in __get_timestamp_from_record
    raise Exception('cannot find timestamp[%s] in record[%s]' % (self.args.timestamp_from, record))
Exception: cannot find timestamp[time] in record[{'spu_code': '367516308833357825', 'spu_name': '¿¨ÂüÊÖÌá´ü×°Íþ»¯ÏÌµ°»ÆÎ¶258g/´ü', 'created_time': datetime.datetime(2019, 12, 19, 13, 45, 25)}]

2020-06-12 22:18:26,436 1493 WARNING cannot find timestamp[time] in record[{'spu_code': '367516308833357825', 'spu_name': '¿¨ÂüÊÖÌá´ü×°Íþ»¯ÏÌµ°»ÆÎ¶258g/´ü', 'created_time': datetime.datetime(2019, 12, 19, 13, 45, 25)}]
2020-06-12 22:18:26,446 1491 WARNING failed to parse line 5
2020-06-12 22:18:26,451 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 466, in send_event
    timestamp = self.get_timestamp(record)
  File "format_importer.py", line 422, in __get_timestamp_from_record
    raise Exception('cannot find timestamp[%s] in record[%s]' % (self.args.timestamp_from, record))
Exception: cannot find timestamp[time] in record[{'spu_code': '367516310750154753', 'spu_name': '¿¨Âü´àÆ¤µ°¾íÇÉ¿ËÁ¦»¨ÉúÎ¶80g/´ü', 'created_time': datetime.datetime(2019, 12, 19, 13, 45, 26)}]

2020-06-12 22:18:26,467 1493 WARNING cannot find timestamp[time] in record[{'spu_code': '367516310750154753', 'spu_name': '¿¨Âü´àÆ¤µ°¾íÇÉ¿ËÁ¦»¨ÉúÎ¶80g/´ü', 'created_time': datetime.datetime(2019, 12, 19, 13, 45, 26)}]
2020-06-12 22:18:26,474 1491 WARNING failed to parse line 6
2020-06-12 22:18:26,480 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 466, in send_event
    timestamp = self.get_timestamp(record)
  File "format_importer.py", line 422, in __get_timestamp_from_record
    raise Exception('cannot find timestamp[%s] in record[%s]' % (self.args.timestamp_from, record))
Exception: cannot find timestamp[time] in record[{'spu_code': '367516312109109249', 'spu_name': '¿¨Âü´àÆ¤µ°¾íÁñÁ«Î¶80g/´ü', 'created_time': datetime.datetime(2019, 12, 19, 13, 45, 26)}]

2020-06-12 22:18:26,495 1493 WARNING cannot find timestamp[time] in record[{'spu_code': '367516312109109249', 'spu_name': '¿¨Âü´àÆ¤µ°¾íÁñÁ«Î¶80g/´ü', 'created_time': datetime.datetime(2019, 12, 19, 13, 45, 26)}]
2020-06-12 22:18:26,502 1491 WARNING failed to parse line 7
2020-06-12 22:18:26,507 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 466, in send_event
    timestamp = self.get_timestamp(record)
  File "format_importer.py", line 422, in __get_timestamp_from_record
    raise Exception('cannot find timestamp[%s] in record[%s]' % (self.args.timestamp_from, record))
Exception: cannot find timestamp[time] in record[{'spu_code': '367516313434509313', 'spu_name': '¿¨Âü´àÆ¤µ°¾íÏÌµ°»ÆÎ¶80g/´ü', 'created_time': datetime.datetime(2019, 12, 19, 13, 45, 27)}]

2020-06-12 22:18:26,522 1493 WARNING cannot find timestamp[time] in record[{'spu_code': '367516313434509313', 'spu_name': '¿¨Âü´àÆ¤µ°¾íÏÌµ°»ÆÎ¶80g/´ü', 'created_time': datetime.datetime(2019, 12, 19, 13, 45, 27)}]
2020-06-12 22:18:26,530 1491 WARNING failed to parse line 8
2020-06-12 22:18:26,535 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 466, in send_event
    timestamp = self.get_timestamp(record)
  File "format_importer.py", line 422, in __get_timestamp_from_record
    raise Exception('cannot find timestamp[%s] in record[%s]' % (self.args.timestamp_from, record))
Exception: cannot find timestamp[time] in record[{'spu_code': '367516314730549249', 'spu_name': 'Ð¡ÖíÅåÆæÅ£ÄÌÇúÆæ100g/ºÐ', 'created_time': datetime.datetime(2019, 12, 19, 13, 45, 27)}]

2020-06-12 22:18:26,549 1493 WARNING cannot find timestamp[time] in record[{'spu_code': '367516314730549249', 'spu_name': 'Ð¡ÖíÅåÆæÅ£ÄÌÇúÆæ100g/ºÐ', 'created_time': datetime.datetime(2019, 12, 19, 13, 45, 27)}]
2020-06-12 22:18:26,555 1491 WARNING failed to parse line 9
2020-06-12 22:18:26,559 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 466, in send_event
    timestamp = self.get_timestamp(record)
  File "format_importer.py", line 422, in __get_timestamp_from_record
    raise Exception('cannot find timestamp[%s] in record[%s]' % (self.args.timestamp_from, record))
Exception: cannot find timestamp[time] in record[{'spu_code': '367516316127252481', 'spu_name': 'Ð¡ÖíÅåÆæÕº½´±­ÇÉ¿ËÁ¦Î¶25g/±­', 'created_time': datetime.datetime(2019, 12, 19, 13, 45, 27)}]

2020-06-12 22:18:26,576 1493 WARNING cannot find timestamp[time] in record[{'spu_code': '367516316127252481', 'spu_name': 'Ð¡ÖíÅåÆæÕº½´±­ÇÉ¿ËÁ¦Î¶25g/±­', 'created_time': datetime.datetime(2019, 12, 19, 13, 45, 27)}]
2020-06-12 22:18:26,586 1491 WARNING failed to parse line 10
2020-06-12 22:18:26,588 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 466, in send_event
    timestamp = self.get_timestamp(record)
  File "format_importer.py", line 422, in __get_timestamp_from_record
    raise Exception('cannot find timestamp[%s] in record[%s]' % (self.args.timestamp_from, record))
Exception: cannot find timestamp[time] in record[{'spu_code': '367516317490401281', 'spu_name': 'Ð¡ÖíÅåÆæÕº½´±­²ÝÝ®Î¶25g/±­', 'created_time': datetime.datetime(2019, 12, 19, 13, 45, 27)}]

2020-06-12 22:18:26,602 1493 WARNING cannot find timestamp[time] in record[{'spu_code': '367516317490401281', 'spu_name': 'Ð¡ÖíÅåÆæÕº½´±­²ÝÝ®Î¶25g/±­', 'created_time': datetime.datetime(2019, 12, 19, 13, 45, 27)}]
2020-06-12 22:18:26,614 1491 WARNING failed to parse line 11
2020-06-12 22:18:26,620 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 466, in send_event
    timestamp = self.get_timestamp(record)
  File "format_importer.py", line 422, in __get_timestamp_from_record
    raise Exception('cannot find timestamp[%s] in record[%s]' % (self.args.timestamp_from, record))
Exception: cannot find timestamp[time] in record[{'spu_code': '367516318866132993', 'spu_name': 'Ð¡ÖíÅåÆæÇÉ¿ËÁ¦Î¶×¢ÐÄ±ý¸É160g/ºÐ', 'created_time': datetime.datetime(2019, 12, 19, 13, 45, 28)}]

2020-06-12 22:18:26,635 1493 WARNING cannot find timestamp[time] in record[{'spu_code': '367516318866132993', 'spu_name': 'Ð¡ÖíÅåÆæÇÉ¿ËÁ¦Î¶×¢ÐÄ±ý¸É160g/ºÐ', 'created_time': datetime.datetime(2019, 12, 19, 13, 45, 28)}]
2020-06-12 22:18:26,646 1491 WARNING failed to parse line 12
2020-06-12 22:18:26,650 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 466, in send_event
    timestamp = self.get_timestamp(record)
  File "format_importer.py", line 422, in __get_timestamp_from_record
    raise Exception('cannot find timestamp[%s] in record[%s]' % (self.args.timestamp_from, record))
Exception: cannot find timestamp[time] in record[{'spu_code': '367516320283807745', 'spu_name': 'Ð¡ÖíÅåÆæ²ÝÝ®Î¶×¢ÐÄ±ý¸É160g/ºÐ', 'created_time': datetime.datetime(2019, 12, 19, 13, 45, 28)}]

2020-06-12 22:18:26,669 1493 WARNING cannot find timestamp[time] in record[{'spu_code': '367516320283807745', 'spu_name': 'Ð¡ÖíÅåÆæ²ÝÝ®Î¶×¢ÐÄ±ý¸É160g/ºÐ', 'created_time': datetime.datetime(2019, 12, 19, 13, 45, 28)}]
2020-06-12 22:18:26,681 1491 WARNING failed to parse line 13
2020-06-12 22:18:26,685 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 466, in send_event
    timestamp = self.get_timestamp(record)
  File "format_importer.py", line 422, in __get_timestamp_from_record
    raise Exception('cannot find timestamp[%s] in record[%s]' % (self.args.timestamp_from, record))
Exception: cannot find timestamp[time] in record[{'spu_code': '367516321684705281', 'spu_name': 'Ð¡ÖíÅåÆæ°ô±ýÊß²ËÎ¶48g/ºÐ', 'created_time': datetime.datetime(2019, 12, 19, 13, 45, 28), 'out_time': datetime.datetime(2019, 12, 27, 10, 50, 35)}]

2020-06-12 22:18:26,704 1493 WARNING cannot find timestamp[time] in record[{'spu_code': '367516321684705281', 'spu_name': 'Ð¡ÖíÅåÆæ°ô±ýÊß²ËÎ¶48g/ºÐ', 'created_time': datetime.datetime(2019, 12, 19, 13, 45, 28), 'out_time': datetime.datetime(2019, 12, 27, 10, 50, 35)}]
2020-06-12 22:18:26,719 1491 WARNING failed to parse line 14
2020-06-12 22:18:26,724 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 466, in send_event
    timestamp = self.get_timestamp(record)
  File "format_importer.py", line 422, in __get_timestamp_from_record
    raise Exception('cannot find timestamp[%s] in record[%s]' % (self.args.timestamp_from, record))
Exception: cannot find timestamp[time] in record[{'spu_code': '367516323005911041', 'spu_name': 'Ð¡ÖíÅåÆæ°ô±ý·¬ÇÑÎ¶48g/ºÐ', 'created_time': datetime.datetime(2019, 12, 19, 13, 45, 29)}]

2020-06-12 22:18:26,738 1493 WARNING cannot find timestamp[time] in record[{'spu_code': '367516323005911041', 'spu_name': 'Ð¡ÖíÅåÆæ°ô±ý·¬ÇÑÎ¶48g/ºÐ', 'created_time': datetime.datetime(2019, 12, 19, 13, 45, 29)}]
2020-06-12 22:18:26,747 1491 WARNING failed to parse line 15
2020-06-12 22:18:26,751 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 466, in send_event
    timestamp = self.get_timestamp(record)
  File "format_importer.py", line 422, in __get_timestamp_from_record
    raise Exception('cannot find timestamp[%s] in record[%s]' % (self.args.timestamp_from, record))
Exception: cannot find timestamp[time] in record[{'spu_code': '367516324515860481', 'spu_name': 'Ð¡ÖíÅåÆæ°ô±ýÅ£ÄÌÎ¶48g/ºÐ', 'created_time': datetime.datetime(2019, 12, 19, 13, 45, 29)}]

2020-06-12 22:18:26,765 1493 WARNING cannot find timestamp[time] in record[{'spu_code': '367516324515860481', 'spu_name': 'Ð¡ÖíÅåÆæ°ô±ýÅ£ÄÌÎ¶48g/ºÐ', 'created_time': datetime.datetime(2019, 12, 19, 13, 45, 29)}]
2020-06-12 22:18:26,772 1491 WARNING failed to parse line 16
2020-06-12 22:18:26,776 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 466, in send_event
    timestamp = self.get_timestamp(record)
  File "format_importer.py", line 422, in __get_timestamp_from_record
    raise Exception('cannot find timestamp[%s] in record[%s]' % (self.args.timestamp_from, record))
Exception: cannot find timestamp[time] in record[{'spu_code': '367516325853843457', 'spu_name': 'ÇàÊ³¾«ÖÆ±ý¸É240g/°ü', 'created_time': datetime.datetime(2019, 12, 19, 13, 45, 29)}]

2020-06-12 22:18:26,791 1493 WARNING cannot find timestamp[time] in record[{'spu_code': '367516325853843457', 'spu_name': 'ÇàÊ³¾«ÖÆ±ý¸É240g/°ü', 'created_time': datetime.datetime(2019, 12, 19, 13, 45, 29)}]
2020-06-12 22:18:26,796 1491 WARNING failed to parse line 17
2020-06-12 22:18:26,802 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 466, in send_event
    timestamp = self.get_timestamp(record)
  File "format_importer.py", line 422, in __get_timestamp_from_record
    raise Exception('cannot find timestamp[%s] in record[%s]' % (self.args.timestamp_from, record))
Exception: cannot find timestamp[time] in record[{'spu_code': '367516327242158081', 'spu_name': 'ÇàÊ³ÌØÖÆ¸ÆÄÌ±ý¸É225g/°ü', 'created_time': datetime.datetime(2019, 12, 19, 13, 45, 30)}]

2020-06-12 22:18:26,816 1493 WARNING cannot find timestamp[time] in record[{'spu_code': '367516327242158081', 'spu_name': 'ÇàÊ³ÌØÖÆ¸ÆÄÌ±ý¸É225g/°ü', 'created_time': datetime.datetime(2019, 12, 19, 13, 45, 30)}]
2020-06-12 22:18:26,822 1491 WARNING failed to parse line 18
2020-06-12 22:18:26,827 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 466, in send_event
    timestamp = self.get_timestamp(record)
  File "format_importer.py", line 422, in __get_timestamp_from_record
    raise Exception('cannot find timestamp[%s] in record[%s]' % (self.args.timestamp_from, record))
Exception: cannot find timestamp[time] in record[{'spu_code': '367516328815022081', 'spu_name': 'ÇàÊ³ÌúÐ¿¸ÆÄÌ±ý¸É225g/°ü', 'created_time': datetime.datetime(2019, 12, 19, 13, 45, 30)}]

2020-06-12 22:18:26,841 1493 WARNING cannot find timestamp[time] in record[{'spu_code': '367516328815022081', 'spu_name': 'ÇàÊ³ÌúÐ¿¸ÆÄÌ±ý¸É225g/°ü', 'created_time': datetime.datetime(2019, 12, 19, 13, 45, 30)}]
2020-06-12 22:18:26,848 1491 WARNING failed to parse line 19
2020-06-12 22:18:26,852 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 466, in send_event
    timestamp = self.get_timestamp(record)
  File "format_importer.py", line 422, in __get_timestamp_from_record
    raise Exception('cannot find timestamp[%s] in record[%s]' % (self.args.timestamp_from, record))
Exception: cannot find timestamp[time] in record[{'spu_code': '367516330207531009', 'spu_name': 'ÇàÊ³ÀÏÄê¸ÆÄÌ±ý¸É225g/°ü', 'created_time': datetime.datetime(2019, 12, 19, 13, 45, 31)}]

2020-06-12 22:18:26,866 1493 WARNING cannot find timestamp[time] in record[{'spu_code': '367516330207531009', 'spu_name': 'ÇàÊ³ÀÏÄê¸ÆÄÌ±ý¸É225g/°ü', 'created_time': datetime.datetime(2019, 12, 19, 13, 45, 31)}]
2020-06-12 22:18:26,873 1491 WARNING failed to parse line 20
2020-06-12 22:18:26,878 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 466, in send_event
    timestamp = self.get_timestamp(record)
  File "format_importer.py", line 422, in __get_timestamp_from_record
    raise Exception('cannot find timestamp[%s] in record[%s]' % (self.args.timestamp_from, record))
Exception: cannot find timestamp[time] in record[{'spu_code': '367516331587457025', 'spu_name': 'ÇàÊ³ÌØÖÆ¸ÆÄÌ±ý¸É£¨´óÀñ°ü£©1350g/°ü', 'created_time': datetime.datetime(2019, 12, 19, 13, 45, 31)}]

2020-06-12 22:18:26,895 1493 WARNING cannot find timestamp[time] in record[{'spu_code': '367516331587457025', 'spu_name': 'ÇàÊ³ÌØÖÆ¸ÆÄÌ±ý¸É£¨´óÀñ°ü£©1350g/°ü', 'created_time': datetime.datetime(2019, 12, 19, 13, 45, 31)}]
2020-06-12 22:18:26,902 1195 INFO end import from mysql.
2020-06-12 22:18:26,904 1505 INFO counter = {'total_write': 0, 'total_read': 20, 'error': 20, 'skip': 0, 'total': 20}.
2020-06-12 22:18:26,910 1507 INFO --debug ²ÎÊýÊ±²»»áÕæÕýµ¼ÈëÊý¾Ý
2020-06-12 22:19:30,896 1445 DEBUG args: {'bool_property_list': None,
 'case_sensitive': True,
 'db': 'hisense',
 'debug': True,
 'distinct_id_from': 'spu_code',
 'event_default': None,
 'event_from': 'spu_name',
 'filename': None,
 'host': '127.0.0.1',
 'is_login': False,
 'output_file': None,
 'password': '123456',
 'port': 3306,
 'project': None,
 'quit_on_error': False,
 'skip_cnt': 0,
 'sql': 'select spu_code, spu_name, created_time, out_time from goods_spu '
        'order by created_time limit 20;',
 'subparser_name': 'mysql_event',
 'timestamp_default': None,
 'timestamp_format': '%Y-%m-%d %H:%M:%S',
 'timestamp_from': 'created_time',
 'url': 'https://testsensorsapi.juhaolian.cn/sa?project=default&token=schemaLimited-xTvWlzDD',
 'user': 'root'}
2020-06-12 22:19:31,353 1108 INFO start importing from mysql, sql=select spu_code, spu_name, created_time, out_time from goods_spu order by created_time limit 20;
2020-06-12 22:19:31,354 186 DEBUG debug url: https://testsensorsapi.juhaolian.cn/debug?project=default&token=schemaLimited-xTvWlzDD
2020-06-12 22:19:31,600 189 DEBUG response: Sensors Analytics is ready to receive your data!
2020-06-12 22:19:31,601 1456 INFO running debug mode
2020-06-12 22:19:31,602 1479 INFO progress 0.00% {'total_write': 0, 'total_read': 0, 'error': 0, 'skip': 0, 'total': 20}
2020-06-12 22:19:31,605 1491 WARNING failed to parse line 1
2020-06-12 22:19:31,617 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 469, in send_event
    self.sa.track(distinct_id, event, properties, is_login_id=self.args.is_login)
  File "E:\Document\python\school_study\information_entropy\format_importer_1_13_2\sensorsanalytics\sdk.py", line 231, in track
    self._track_event('track', event_name, distinct_id, None, all_properties, is_login_id)
  File "E:\Document\python\school_study\information_entropy\format_importer_1_13_2\sensorsanalytics\sdk.py", line 552, in _track_event
    data = self._normalize_data(data)
  File "E:\Document\python\school_study\information_entropy\format_importer_1_13_2\sensorsanalytics\sdk.py", line 307, in _normalize_data
    "event name must be a valid variable name. [name=%s]" % data['event'])
format_importer_1_13_2.sensorsanalytics.sdk.SensorsAnalyticsIllegalDataException: event name must be a valid variable name. [name=¿¨ÂüÊÖÌá´üËÖÆ¤µ°¾íÏÌµ°»ÆÎ¶258g/´ü]

2020-06-12 22:19:31,627 1493 WARNING event name must be a valid variable name. [name=¿¨ÂüÊÖÌá´üËÖÆ¤µ°¾íÏÌµ°»ÆÎ¶258g/´ü]
2020-06-12 22:19:31,636 1491 WARNING failed to parse line 2
2020-06-12 22:19:31,641 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 469, in send_event
    self.sa.track(distinct_id, event, properties, is_login_id=self.args.is_login)
  File "E:\Document\python\school_study\information_entropy\format_importer_1_13_2\sensorsanalytics\sdk.py", line 231, in track
    self._track_event('track', event_name, distinct_id, None, all_properties, is_login_id)
  File "E:\Document\python\school_study\information_entropy\format_importer_1_13_2\sensorsanalytics\sdk.py", line 552, in _track_event
    data = self._normalize_data(data)
  File "E:\Document\python\school_study\information_entropy\format_importer_1_13_2\sensorsanalytics\sdk.py", line 307, in _normalize_data
    "event name must be a valid variable name. [name=%s]" % data['event'])
format_importer_1_13_2.sensorsanalytics.sdk.SensorsAnalyticsIllegalDataException: event name must be a valid variable name. [name=¿¨ÂüÊÖÌá´üËÖÆ¤µ°¾íÁñÁ«Î¶258g/´ü]

2020-06-12 22:19:31,653 1493 WARNING event name must be a valid variable name. [name=¿¨ÂüÊÖÌá´üËÖÆ¤µ°¾íÁñÁ«Î¶258g/´ü]
2020-06-12 22:19:31,661 1491 WARNING failed to parse line 3
2020-06-12 22:19:31,664 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 469, in send_event
    self.sa.track(distinct_id, event, properties, is_login_id=self.args.is_login)
  File "E:\Document\python\school_study\information_entropy\format_importer_1_13_2\sensorsanalytics\sdk.py", line 231, in track
    self._track_event('track', event_name, distinct_id, None, all_properties, is_login_id)
  File "E:\Document\python\school_study\information_entropy\format_importer_1_13_2\sensorsanalytics\sdk.py", line 552, in _track_event
    data = self._normalize_data(data)
  File "E:\Document\python\school_study\information_entropy\format_importer_1_13_2\sensorsanalytics\sdk.py", line 307, in _normalize_data
    "event name must be a valid variable name. [name=%s]" % data['event'])
format_importer_1_13_2.sensorsanalytics.sdk.SensorsAnalyticsIllegalDataException: event name must be a valid variable name. [name=¿¨ÂüÊÖÌá´ü×°Íþ»¯Ö¥Ê¿Î¶258g/´ü]

2020-06-12 22:19:31,674 1493 WARNING event name must be a valid variable name. [name=¿¨ÂüÊÖÌá´ü×°Íþ»¯Ö¥Ê¿Î¶258g/´ü]
2020-06-12 22:19:31,684 1491 WARNING failed to parse line 4
2020-06-12 22:19:31,688 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 469, in send_event
    self.sa.track(distinct_id, event, properties, is_login_id=self.args.is_login)
  File "E:\Document\python\school_study\information_entropy\format_importer_1_13_2\sensorsanalytics\sdk.py", line 231, in track
    self._track_event('track', event_name, distinct_id, None, all_properties, is_login_id)
  File "E:\Document\python\school_study\information_entropy\format_importer_1_13_2\sensorsanalytics\sdk.py", line 552, in _track_event
    data = self._normalize_data(data)
  File "E:\Document\python\school_study\information_entropy\format_importer_1_13_2\sensorsanalytics\sdk.py", line 307, in _normalize_data
    "event name must be a valid variable name. [name=%s]" % data['event'])
format_importer_1_13_2.sensorsanalytics.sdk.SensorsAnalyticsIllegalDataException: event name must be a valid variable name. [name=¿¨ÂüÊÖÌá´ü×°Íþ»¯ÏÌµ°»ÆÎ¶258g/´ü]

2020-06-12 22:19:31,699 1493 WARNING event name must be a valid variable name. [name=¿¨ÂüÊÖÌá´ü×°Íþ»¯ÏÌµ°»ÆÎ¶258g/´ü]
2020-06-12 22:19:31,707 1491 WARNING failed to parse line 5
2020-06-12 22:19:31,713 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 469, in send_event
    self.sa.track(distinct_id, event, properties, is_login_id=self.args.is_login)
  File "E:\Document\python\school_study\information_entropy\format_importer_1_13_2\sensorsanalytics\sdk.py", line 231, in track
    self._track_event('track', event_name, distinct_id, None, all_properties, is_login_id)
  File "E:\Document\python\school_study\information_entropy\format_importer_1_13_2\sensorsanalytics\sdk.py", line 552, in _track_event
    data = self._normalize_data(data)
  File "E:\Document\python\school_study\information_entropy\format_importer_1_13_2\sensorsanalytics\sdk.py", line 307, in _normalize_data
    "event name must be a valid variable name. [name=%s]" % data['event'])
format_importer_1_13_2.sensorsanalytics.sdk.SensorsAnalyticsIllegalDataException: event name must be a valid variable name. [name=¿¨Âü´àÆ¤µ°¾íÇÉ¿ËÁ¦»¨ÉúÎ¶80g/´ü]

2020-06-12 22:19:31,724 1493 WARNING event name must be a valid variable name. [name=¿¨Âü´àÆ¤µ°¾íÇÉ¿ËÁ¦»¨ÉúÎ¶80g/´ü]
2020-06-12 22:19:31,734 1491 WARNING failed to parse line 6
2020-06-12 22:19:31,737 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 469, in send_event
    self.sa.track(distinct_id, event, properties, is_login_id=self.args.is_login)
  File "E:\Document\python\school_study\information_entropy\format_importer_1_13_2\sensorsanalytics\sdk.py", line 231, in track
    self._track_event('track', event_name, distinct_id, None, all_properties, is_login_id)
  File "E:\Document\python\school_study\information_entropy\format_importer_1_13_2\sensorsanalytics\sdk.py", line 552, in _track_event
    data = self._normalize_data(data)
  File "E:\Document\python\school_study\information_entropy\format_importer_1_13_2\sensorsanalytics\sdk.py", line 307, in _normalize_data
    "event name must be a valid variable name. [name=%s]" % data['event'])
format_importer_1_13_2.sensorsanalytics.sdk.SensorsAnalyticsIllegalDataException: event name must be a valid variable name. [name=¿¨Âü´àÆ¤µ°¾íÁñÁ«Î¶80g/´ü]

2020-06-12 22:19:31,748 1493 WARNING event name must be a valid variable name. [name=¿¨Âü´àÆ¤µ°¾íÁñÁ«Î¶80g/´ü]
2020-06-12 22:19:31,758 1491 WARNING failed to parse line 7
2020-06-12 22:19:31,762 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 469, in send_event
    self.sa.track(distinct_id, event, properties, is_login_id=self.args.is_login)
  File "E:\Document\python\school_study\information_entropy\format_importer_1_13_2\sensorsanalytics\sdk.py", line 231, in track
    self._track_event('track', event_name, distinct_id, None, all_properties, is_login_id)
  File "E:\Document\python\school_study\information_entropy\format_importer_1_13_2\sensorsanalytics\sdk.py", line 552, in _track_event
    data = self._normalize_data(data)
  File "E:\Document\python\school_study\information_entropy\format_importer_1_13_2\sensorsanalytics\sdk.py", line 307, in _normalize_data
    "event name must be a valid variable name. [name=%s]" % data['event'])
format_importer_1_13_2.sensorsanalytics.sdk.SensorsAnalyticsIllegalDataException: event name must be a valid variable name. [name=¿¨Âü´àÆ¤µ°¾íÏÌµ°»ÆÎ¶80g/´ü]

2020-06-12 22:19:31,775 1493 WARNING event name must be a valid variable name. [name=¿¨Âü´àÆ¤µ°¾íÏÌµ°»ÆÎ¶80g/´ü]
2020-06-12 22:19:31,783 1491 WARNING failed to parse line 8
2020-06-12 22:19:31,787 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 469, in send_event
    self.sa.track(distinct_id, event, properties, is_login_id=self.args.is_login)
  File "E:\Document\python\school_study\information_entropy\format_importer_1_13_2\sensorsanalytics\sdk.py", line 231, in track
    self._track_event('track', event_name, distinct_id, None, all_properties, is_login_id)
  File "E:\Document\python\school_study\information_entropy\format_importer_1_13_2\sensorsanalytics\sdk.py", line 552, in _track_event
    data = self._normalize_data(data)
  File "E:\Document\python\school_study\information_entropy\format_importer_1_13_2\sensorsanalytics\sdk.py", line 307, in _normalize_data
    "event name must be a valid variable name. [name=%s]" % data['event'])
format_importer_1_13_2.sensorsanalytics.sdk.SensorsAnalyticsIllegalDataException: event name must be a valid variable name. [name=Ð¡ÖíÅåÆæÅ£ÄÌÇúÆæ100g/ºÐ]

2020-06-12 22:19:31,798 1493 WARNING event name must be a valid variable name. [name=Ð¡ÖíÅåÆæÅ£ÄÌÇúÆæ100g/ºÐ]
2020-06-12 22:19:31,806 1491 WARNING failed to parse line 9
2020-06-12 22:19:31,811 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 469, in send_event
    self.sa.track(distinct_id, event, properties, is_login_id=self.args.is_login)
  File "E:\Document\python\school_study\information_entropy\format_importer_1_13_2\sensorsanalytics\sdk.py", line 231, in track
    self._track_event('track', event_name, distinct_id, None, all_properties, is_login_id)
  File "E:\Document\python\school_study\information_entropy\format_importer_1_13_2\sensorsanalytics\sdk.py", line 552, in _track_event
    data = self._normalize_data(data)
  File "E:\Document\python\school_study\information_entropy\format_importer_1_13_2\sensorsanalytics\sdk.py", line 307, in _normalize_data
    "event name must be a valid variable name. [name=%s]" % data['event'])
format_importer_1_13_2.sensorsanalytics.sdk.SensorsAnalyticsIllegalDataException: event name must be a valid variable name. [name=Ð¡ÖíÅåÆæÕº½´±­ÇÉ¿ËÁ¦Î¶25g/±­]

2020-06-12 22:19:31,822 1493 WARNING event name must be a valid variable name. [name=Ð¡ÖíÅåÆæÕº½´±­ÇÉ¿ËÁ¦Î¶25g/±­]
2020-06-12 22:19:31,832 1491 WARNING failed to parse line 10
2020-06-12 22:19:31,836 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 469, in send_event
    self.sa.track(distinct_id, event, properties, is_login_id=self.args.is_login)
  File "E:\Document\python\school_study\information_entropy\format_importer_1_13_2\sensorsanalytics\sdk.py", line 231, in track
    self._track_event('track', event_name, distinct_id, None, all_properties, is_login_id)
  File "E:\Document\python\school_study\information_entropy\format_importer_1_13_2\sensorsanalytics\sdk.py", line 552, in _track_event
    data = self._normalize_data(data)
  File "E:\Document\python\school_study\information_entropy\format_importer_1_13_2\sensorsanalytics\sdk.py", line 307, in _normalize_data
    "event name must be a valid variable name. [name=%s]" % data['event'])
format_importer_1_13_2.sensorsanalytics.sdk.SensorsAnalyticsIllegalDataException: event name must be a valid variable name. [name=Ð¡ÖíÅåÆæÕº½´±­²ÝÝ®Î¶25g/±­]

2020-06-12 22:19:31,845 1493 WARNING event name must be a valid variable name. [name=Ð¡ÖíÅåÆæÕº½´±­²ÝÝ®Î¶25g/±­]
2020-06-12 22:19:31,853 1491 WARNING failed to parse line 11
2020-06-12 22:19:31,858 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 469, in send_event
    self.sa.track(distinct_id, event, properties, is_login_id=self.args.is_login)
  File "E:\Document\python\school_study\information_entropy\format_importer_1_13_2\sensorsanalytics\sdk.py", line 231, in track
    self._track_event('track', event_name, distinct_id, None, all_properties, is_login_id)
  File "E:\Document\python\school_study\information_entropy\format_importer_1_13_2\sensorsanalytics\sdk.py", line 552, in _track_event
    data = self._normalize_data(data)
  File "E:\Document\python\school_study\information_entropy\format_importer_1_13_2\sensorsanalytics\sdk.py", line 307, in _normalize_data
    "event name must be a valid variable name. [name=%s]" % data['event'])
format_importer_1_13_2.sensorsanalytics.sdk.SensorsAnalyticsIllegalDataException: event name must be a valid variable name. [name=Ð¡ÖíÅåÆæÇÉ¿ËÁ¦Î¶×¢ÐÄ±ý¸É160g/ºÐ]

2020-06-12 22:19:31,868 1493 WARNING event name must be a valid variable name. [name=Ð¡ÖíÅåÆæÇÉ¿ËÁ¦Î¶×¢ÐÄ±ý¸É160g/ºÐ]
2020-06-12 22:19:31,877 1491 WARNING failed to parse line 12
2020-06-12 22:19:31,882 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 469, in send_event
    self.sa.track(distinct_id, event, properties, is_login_id=self.args.is_login)
  File "E:\Document\python\school_study\information_entropy\format_importer_1_13_2\sensorsanalytics\sdk.py", line 231, in track
    self._track_event('track', event_name, distinct_id, None, all_properties, is_login_id)
  File "E:\Document\python\school_study\information_entropy\format_importer_1_13_2\sensorsanalytics\sdk.py", line 552, in _track_event
    data = self._normalize_data(data)
  File "E:\Document\python\school_study\information_entropy\format_importer_1_13_2\sensorsanalytics\sdk.py", line 307, in _normalize_data
    "event name must be a valid variable name. [name=%s]" % data['event'])
format_importer_1_13_2.sensorsanalytics.sdk.SensorsAnalyticsIllegalDataException: event name must be a valid variable name. [name=Ð¡ÖíÅåÆæ²ÝÝ®Î¶×¢ÐÄ±ý¸É160g/ºÐ]

2020-06-12 22:19:31,892 1493 WARNING event name must be a valid variable name. [name=Ð¡ÖíÅåÆæ²ÝÝ®Î¶×¢ÐÄ±ý¸É160g/ºÐ]
2020-06-12 22:19:31,902 1491 WARNING failed to parse line 13
2020-06-12 22:19:31,906 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 469, in send_event
    self.sa.track(distinct_id, event, properties, is_login_id=self.args.is_login)
  File "E:\Document\python\school_study\information_entropy\format_importer_1_13_2\sensorsanalytics\sdk.py", line 231, in track
    self._track_event('track', event_name, distinct_id, None, all_properties, is_login_id)
  File "E:\Document\python\school_study\information_entropy\format_importer_1_13_2\sensorsanalytics\sdk.py", line 552, in _track_event
    data = self._normalize_data(data)
  File "E:\Document\python\school_study\information_entropy\format_importer_1_13_2\sensorsanalytics\sdk.py", line 307, in _normalize_data
    "event name must be a valid variable name. [name=%s]" % data['event'])
format_importer_1_13_2.sensorsanalytics.sdk.SensorsAnalyticsIllegalDataException: event name must be a valid variable name. [name=Ð¡ÖíÅåÆæ°ô±ýÊß²ËÎ¶48g/ºÐ]

2020-06-12 22:19:31,916 1493 WARNING event name must be a valid variable name. [name=Ð¡ÖíÅåÆæ°ô±ýÊß²ËÎ¶48g/ºÐ]
2020-06-12 22:19:31,925 1491 WARNING failed to parse line 14
2020-06-12 22:19:31,929 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 469, in send_event
    self.sa.track(distinct_id, event, properties, is_login_id=self.args.is_login)
  File "E:\Document\python\school_study\information_entropy\format_importer_1_13_2\sensorsanalytics\sdk.py", line 231, in track
    self._track_event('track', event_name, distinct_id, None, all_properties, is_login_id)
  File "E:\Document\python\school_study\information_entropy\format_importer_1_13_2\sensorsanalytics\sdk.py", line 552, in _track_event
    data = self._normalize_data(data)
  File "E:\Document\python\school_study\information_entropy\format_importer_1_13_2\sensorsanalytics\sdk.py", line 307, in _normalize_data
    "event name must be a valid variable name. [name=%s]" % data['event'])
format_importer_1_13_2.sensorsanalytics.sdk.SensorsAnalyticsIllegalDataException: event name must be a valid variable name. [name=Ð¡ÖíÅåÆæ°ô±ý·¬ÇÑÎ¶48g/ºÐ]

2020-06-12 22:19:31,940 1493 WARNING event name must be a valid variable name. [name=Ð¡ÖíÅåÆæ°ô±ý·¬ÇÑÎ¶48g/ºÐ]
2020-06-12 22:19:31,947 1491 WARNING failed to parse line 15
2020-06-12 22:19:31,952 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 469, in send_event
    self.sa.track(distinct_id, event, properties, is_login_id=self.args.is_login)
  File "E:\Document\python\school_study\information_entropy\format_importer_1_13_2\sensorsanalytics\sdk.py", line 231, in track
    self._track_event('track', event_name, distinct_id, None, all_properties, is_login_id)
  File "E:\Document\python\school_study\information_entropy\format_importer_1_13_2\sensorsanalytics\sdk.py", line 552, in _track_event
    data = self._normalize_data(data)
  File "E:\Document\python\school_study\information_entropy\format_importer_1_13_2\sensorsanalytics\sdk.py", line 307, in _normalize_data
    "event name must be a valid variable name. [name=%s]" % data['event'])
format_importer_1_13_2.sensorsanalytics.sdk.SensorsAnalyticsIllegalDataException: event name must be a valid variable name. [name=Ð¡ÖíÅåÆæ°ô±ýÅ£ÄÌÎ¶48g/ºÐ]

2020-06-12 22:19:31,961 1493 WARNING event name must be a valid variable name. [name=Ð¡ÖíÅåÆæ°ô±ýÅ£ÄÌÎ¶48g/ºÐ]
2020-06-12 22:19:31,970 1491 WARNING failed to parse line 16
2020-06-12 22:19:31,974 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 469, in send_event
    self.sa.track(distinct_id, event, properties, is_login_id=self.args.is_login)
  File "E:\Document\python\school_study\information_entropy\format_importer_1_13_2\sensorsanalytics\sdk.py", line 231, in track
    self._track_event('track', event_name, distinct_id, None, all_properties, is_login_id)
  File "E:\Document\python\school_study\information_entropy\format_importer_1_13_2\sensorsanalytics\sdk.py", line 552, in _track_event
    data = self._normalize_data(data)
  File "E:\Document\python\school_study\information_entropy\format_importer_1_13_2\sensorsanalytics\sdk.py", line 307, in _normalize_data
    "event name must be a valid variable name. [name=%s]" % data['event'])
format_importer_1_13_2.sensorsanalytics.sdk.SensorsAnalyticsIllegalDataException: event name must be a valid variable name. [name=ÇàÊ³¾«ÖÆ±ý¸É240g/°ü]

2020-06-12 22:19:31,984 1493 WARNING event name must be a valid variable name. [name=ÇàÊ³¾«ÖÆ±ý¸É240g/°ü]
2020-06-12 22:19:31,993 1491 WARNING failed to parse line 17
2020-06-12 22:19:31,997 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 469, in send_event
    self.sa.track(distinct_id, event, properties, is_login_id=self.args.is_login)
  File "E:\Document\python\school_study\information_entropy\format_importer_1_13_2\sensorsanalytics\sdk.py", line 231, in track
    self._track_event('track', event_name, distinct_id, None, all_properties, is_login_id)
  File "E:\Document\python\school_study\information_entropy\format_importer_1_13_2\sensorsanalytics\sdk.py", line 552, in _track_event
    data = self._normalize_data(data)
  File "E:\Document\python\school_study\information_entropy\format_importer_1_13_2\sensorsanalytics\sdk.py", line 307, in _normalize_data
    "event name must be a valid variable name. [name=%s]" % data['event'])
format_importer_1_13_2.sensorsanalytics.sdk.SensorsAnalyticsIllegalDataException: event name must be a valid variable name. [name=ÇàÊ³ÌØÖÆ¸ÆÄÌ±ý¸É225g/°ü]

2020-06-12 22:19:32,008 1493 WARNING event name must be a valid variable name. [name=ÇàÊ³ÌØÖÆ¸ÆÄÌ±ý¸É225g/°ü]
2020-06-12 22:19:32,015 1491 WARNING failed to parse line 18
2020-06-12 22:19:32,019 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 469, in send_event
    self.sa.track(distinct_id, event, properties, is_login_id=self.args.is_login)
  File "E:\Document\python\school_study\information_entropy\format_importer_1_13_2\sensorsanalytics\sdk.py", line 231, in track
    self._track_event('track', event_name, distinct_id, None, all_properties, is_login_id)
  File "E:\Document\python\school_study\information_entropy\format_importer_1_13_2\sensorsanalytics\sdk.py", line 552, in _track_event
    data = self._normalize_data(data)
  File "E:\Document\python\school_study\information_entropy\format_importer_1_13_2\sensorsanalytics\sdk.py", line 307, in _normalize_data
    "event name must be a valid variable name. [name=%s]" % data['event'])
format_importer_1_13_2.sensorsanalytics.sdk.SensorsAnalyticsIllegalDataException: event name must be a valid variable name. [name=ÇàÊ³ÌúÐ¿¸ÆÄÌ±ý¸É225g/°ü]

2020-06-12 22:19:32,030 1493 WARNING event name must be a valid variable name. [name=ÇàÊ³ÌúÐ¿¸ÆÄÌ±ý¸É225g/°ü]
2020-06-12 22:19:32,040 1491 WARNING failed to parse line 19
2020-06-12 22:19:32,044 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 469, in send_event
    self.sa.track(distinct_id, event, properties, is_login_id=self.args.is_login)
  File "E:\Document\python\school_study\information_entropy\format_importer_1_13_2\sensorsanalytics\sdk.py", line 231, in track
    self._track_event('track', event_name, distinct_id, None, all_properties, is_login_id)
  File "E:\Document\python\school_study\information_entropy\format_importer_1_13_2\sensorsanalytics\sdk.py", line 552, in _track_event
    data = self._normalize_data(data)
  File "E:\Document\python\school_study\information_entropy\format_importer_1_13_2\sensorsanalytics\sdk.py", line 307, in _normalize_data
    "event name must be a valid variable name. [name=%s]" % data['event'])
format_importer_1_13_2.sensorsanalytics.sdk.SensorsAnalyticsIllegalDataException: event name must be a valid variable name. [name=ÇàÊ³ÀÏÄê¸ÆÄÌ±ý¸É225g/°ü]

2020-06-12 22:19:32,055 1493 WARNING event name must be a valid variable name. [name=ÇàÊ³ÀÏÄê¸ÆÄÌ±ý¸É225g/°ü]
2020-06-12 22:19:32,063 1491 WARNING failed to parse line 20
2020-06-12 22:19:32,067 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 469, in send_event
    self.sa.track(distinct_id, event, properties, is_login_id=self.args.is_login)
  File "E:\Document\python\school_study\information_entropy\format_importer_1_13_2\sensorsanalytics\sdk.py", line 231, in track
    self._track_event('track', event_name, distinct_id, None, all_properties, is_login_id)
  File "E:\Document\python\school_study\information_entropy\format_importer_1_13_2\sensorsanalytics\sdk.py", line 552, in _track_event
    data = self._normalize_data(data)
  File "E:\Document\python\school_study\information_entropy\format_importer_1_13_2\sensorsanalytics\sdk.py", line 307, in _normalize_data
    "event name must be a valid variable name. [name=%s]" % data['event'])
format_importer_1_13_2.sensorsanalytics.sdk.SensorsAnalyticsIllegalDataException: event name must be a valid variable name. [name=ÇàÊ³ÌØÖÆ¸ÆÄÌ±ý¸É£¨´óÀñ°ü£©1350g/°ü]

2020-06-12 22:19:32,078 1493 WARNING event name must be a valid variable name. [name=ÇàÊ³ÌØÖÆ¸ÆÄÌ±ý¸É£¨´óÀñ°ü£©1350g/°ü]
2020-06-12 22:19:32,087 1195 INFO end import from mysql.
2020-06-12 22:19:32,088 1505 INFO counter = {'total_write': 0, 'total_read': 20, 'error': 20, 'skip': 0, 'total': 20}.
2020-06-12 22:19:32,091 1507 INFO --debug ²ÎÊýÊ±²»»áÕæÕýµ¼ÈëÊý¾Ý
2020-06-12 22:20:33,888 1445 DEBUG args: {'bool_property_list': None,
 'case_sensitive': True,
 'db': 'hisense',
 'debug': True,
 'distinct_id_from': 'spu_code',
 'event_default': None,
 'event_from': 'goods_sale',
 'filename': None,
 'host': '127.0.0.1',
 'is_login': False,
 'output_file': None,
 'password': '123456',
 'port': 3306,
 'project': None,
 'quit_on_error': False,
 'skip_cnt': 0,
 'sql': 'select spu_code, spu_name, created_time, out_time from goods_spu '
        'order by created_time limit 20;',
 'subparser_name': 'mysql_event',
 'timestamp_default': None,
 'timestamp_format': '%Y-%m-%d %H:%M:%S',
 'timestamp_from': 'created_time',
 'url': 'https://testsensorsapi.juhaolian.cn/sa?project=default&token=schemaLimited-xTvWlzDD',
 'user': 'root'}
2020-06-12 22:20:34,066 1108 INFO start importing from mysql, sql=select spu_code, spu_name, created_time, out_time from goods_spu order by created_time limit 20;
2020-06-12 22:20:34,068 186 DEBUG debug url: https://testsensorsapi.juhaolian.cn/debug?project=default&token=schemaLimited-xTvWlzDD
2020-06-12 22:20:34,257 189 DEBUG response: Sensors Analytics is ready to receive your data!
2020-06-12 22:20:34,258 1456 INFO running debug mode
2020-06-12 22:20:34,259 1479 INFO progress 0.00% {'total_write': 0, 'total_read': 0, 'error': 0, 'skip': 0, 'total': 20}
2020-06-12 22:20:34,261 1491 WARNING failed to parse line 1
2020-06-12 22:20:34,272 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 464, in send_event
    event = self.get_event(record)
  File "format_importer.py", line 412, in __get_event_from_record
    raise Exception('cannot find event[%s] in record[%s]' % (self.args.event_from, record))
Exception: cannot find event[goods_sale] in record[{'spu_code': '367516301820481537', 'spu_name': '¿¨ÂüÊÖÌá´üËÖÆ¤µ°¾íÏÌµ°»ÆÎ¶258g/´ü', 'created_time': datetime.datetime(2019, 12, 19, 13, 45, 24), 'out_time': datetime.datetime(2019, 12, 27, 10, 50, 35)}]

2020-06-12 22:20:34,279 1493 WARNING cannot find event[goods_sale] in record[{'spu_code': '367516301820481537', 'spu_name': '¿¨ÂüÊÖÌá´üËÖÆ¤µ°¾íÏÌµ°»ÆÎ¶258g/´ü', 'created_time': datetime.datetime(2019, 12, 19, 13, 45, 24), 'out_time': datetime.datetime(2019, 12, 27, 10, 50, 35)}]
2020-06-12 22:20:34,290 1491 WARNING failed to parse line 2
2020-06-12 22:20:34,294 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 464, in send_event
    event = self.get_event(record)
  File "format_importer.py", line 412, in __get_event_from_record
    raise Exception('cannot find event[%s] in record[%s]' % (self.args.event_from, record))
Exception: cannot find event[goods_sale] in record[{'spu_code': '367516305716989953', 'spu_name': '¿¨ÂüÊÖÌá´üËÖÆ¤µ°¾íÁñÁ«Î¶258g/´ü', 'created_time': datetime.datetime(2019, 12, 19, 13, 45, 25)}]

2020-06-12 22:20:34,303 1493 WARNING cannot find event[goods_sale] in record[{'spu_code': '367516305716989953', 'spu_name': '¿¨ÂüÊÖÌá´üËÖÆ¤µ°¾íÁñÁ«Î¶258g/´ü', 'created_time': datetime.datetime(2019, 12, 19, 13, 45, 25)}]
2020-06-12 22:20:34,313 1491 WARNING failed to parse line 3
2020-06-12 22:20:34,317 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 464, in send_event
    event = self.get_event(record)
  File "format_importer.py", line 412, in __get_event_from_record
    raise Exception('cannot find event[%s] in record[%s]' % (self.args.event_from, record))
Exception: cannot find event[goods_sale] in record[{'spu_code': '367516307197579265', 'spu_name': '¿¨ÂüÊÖÌá´ü×°Íþ»¯Ö¥Ê¿Î¶258g/´ü', 'created_time': datetime.datetime(2019, 12, 19, 13, 45, 25)}]

2020-06-12 22:20:34,325 1493 WARNING cannot find event[goods_sale] in record[{'spu_code': '367516307197579265', 'spu_name': '¿¨ÂüÊÖÌá´ü×°Íþ»¯Ö¥Ê¿Î¶258g/´ü', 'created_time': datetime.datetime(2019, 12, 19, 13, 45, 25)}]
2020-06-12 22:20:34,332 1491 WARNING failed to parse line 4
2020-06-12 22:20:34,336 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 464, in send_event
    event = self.get_event(record)
  File "format_importer.py", line 412, in __get_event_from_record
    raise Exception('cannot find event[%s] in record[%s]' % (self.args.event_from, record))
Exception: cannot find event[goods_sale] in record[{'spu_code': '367516308833357825', 'spu_name': '¿¨ÂüÊÖÌá´ü×°Íþ»¯ÏÌµ°»ÆÎ¶258g/´ü', 'created_time': datetime.datetime(2019, 12, 19, 13, 45, 25)}]

2020-06-12 22:20:34,344 1493 WARNING cannot find event[goods_sale] in record[{'spu_code': '367516308833357825', 'spu_name': '¿¨ÂüÊÖÌá´ü×°Íþ»¯ÏÌµ°»ÆÎ¶258g/´ü', 'created_time': datetime.datetime(2019, 12, 19, 13, 45, 25)}]
2020-06-12 22:20:34,354 1491 WARNING failed to parse line 5
2020-06-12 22:20:34,358 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 464, in send_event
    event = self.get_event(record)
  File "format_importer.py", line 412, in __get_event_from_record
    raise Exception('cannot find event[%s] in record[%s]' % (self.args.event_from, record))
Exception: cannot find event[goods_sale] in record[{'spu_code': '367516310750154753', 'spu_name': '¿¨Âü´àÆ¤µ°¾íÇÉ¿ËÁ¦»¨ÉúÎ¶80g/´ü', 'created_time': datetime.datetime(2019, 12, 19, 13, 45, 26)}]

2020-06-12 22:20:34,366 1493 WARNING cannot find event[goods_sale] in record[{'spu_code': '367516310750154753', 'spu_name': '¿¨Âü´àÆ¤µ°¾íÇÉ¿ËÁ¦»¨ÉúÎ¶80g/´ü', 'created_time': datetime.datetime(2019, 12, 19, 13, 45, 26)}]
2020-06-12 22:20:34,373 1491 WARNING failed to parse line 6
2020-06-12 22:20:34,377 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 464, in send_event
    event = self.get_event(record)
  File "format_importer.py", line 412, in __get_event_from_record
    raise Exception('cannot find event[%s] in record[%s]' % (self.args.event_from, record))
Exception: cannot find event[goods_sale] in record[{'spu_code': '367516312109109249', 'spu_name': '¿¨Âü´àÆ¤µ°¾íÁñÁ«Î¶80g/´ü', 'created_time': datetime.datetime(2019, 12, 19, 13, 45, 26)}]

2020-06-12 22:20:34,386 1493 WARNING cannot find event[goods_sale] in record[{'spu_code': '367516312109109249', 'spu_name': '¿¨Âü´àÆ¤µ°¾íÁñÁ«Î¶80g/´ü', 'created_time': datetime.datetime(2019, 12, 19, 13, 45, 26)}]
2020-06-12 22:20:34,393 1491 WARNING failed to parse line 7
2020-06-12 22:20:34,397 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 464, in send_event
    event = self.get_event(record)
  File "format_importer.py", line 412, in __get_event_from_record
    raise Exception('cannot find event[%s] in record[%s]' % (self.args.event_from, record))
Exception: cannot find event[goods_sale] in record[{'spu_code': '367516313434509313', 'spu_name': '¿¨Âü´àÆ¤µ°¾íÏÌµ°»ÆÎ¶80g/´ü', 'created_time': datetime.datetime(2019, 12, 19, 13, 45, 27)}]

2020-06-12 22:20:34,407 1493 WARNING cannot find event[goods_sale] in record[{'spu_code': '367516313434509313', 'spu_name': '¿¨Âü´àÆ¤µ°¾íÏÌµ°»ÆÎ¶80g/´ü', 'created_time': datetime.datetime(2019, 12, 19, 13, 45, 27)}]
2020-06-12 22:20:34,414 1491 WARNING failed to parse line 8
2020-06-12 22:20:34,418 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 464, in send_event
    event = self.get_event(record)
  File "format_importer.py", line 412, in __get_event_from_record
    raise Exception('cannot find event[%s] in record[%s]' % (self.args.event_from, record))
Exception: cannot find event[goods_sale] in record[{'spu_code': '367516314730549249', 'spu_name': 'Ð¡ÖíÅåÆæÅ£ÄÌÇúÆæ100g/ºÐ', 'created_time': datetime.datetime(2019, 12, 19, 13, 45, 27)}]

2020-06-12 22:20:34,426 1493 WARNING cannot find event[goods_sale] in record[{'spu_code': '367516314730549249', 'spu_name': 'Ð¡ÖíÅåÆæÅ£ÄÌÇúÆæ100g/ºÐ', 'created_time': datetime.datetime(2019, 12, 19, 13, 45, 27)}]
2020-06-12 22:20:34,435 1491 WARNING failed to parse line 9
2020-06-12 22:20:34,441 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 464, in send_event
    event = self.get_event(record)
  File "format_importer.py", line 412, in __get_event_from_record
    raise Exception('cannot find event[%s] in record[%s]' % (self.args.event_from, record))
Exception: cannot find event[goods_sale] in record[{'spu_code': '367516316127252481', 'spu_name': 'Ð¡ÖíÅåÆæÕº½´±­ÇÉ¿ËÁ¦Î¶25g/±­', 'created_time': datetime.datetime(2019, 12, 19, 13, 45, 27)}]

2020-06-12 22:20:34,449 1493 WARNING cannot find event[goods_sale] in record[{'spu_code': '367516316127252481', 'spu_name': 'Ð¡ÖíÅåÆæÕº½´±­ÇÉ¿ËÁ¦Î¶25g/±­', 'created_time': datetime.datetime(2019, 12, 19, 13, 45, 27)}]
2020-06-12 22:20:34,459 1491 WARNING failed to parse line 10
2020-06-12 22:20:34,462 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 464, in send_event
    event = self.get_event(record)
  File "format_importer.py", line 412, in __get_event_from_record
    raise Exception('cannot find event[%s] in record[%s]' % (self.args.event_from, record))
Exception: cannot find event[goods_sale] in record[{'spu_code': '367516317490401281', 'spu_name': 'Ð¡ÖíÅåÆæÕº½´±­²ÝÝ®Î¶25g/±­', 'created_time': datetime.datetime(2019, 12, 19, 13, 45, 27)}]

2020-06-12 22:20:34,472 1493 WARNING cannot find event[goods_sale] in record[{'spu_code': '367516317490401281', 'spu_name': 'Ð¡ÖíÅåÆæÕº½´±­²ÝÝ®Î¶25g/±­', 'created_time': datetime.datetime(2019, 12, 19, 13, 45, 27)}]
2020-06-12 22:20:34,479 1491 WARNING failed to parse line 11
2020-06-12 22:20:34,484 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 464, in send_event
    event = self.get_event(record)
  File "format_importer.py", line 412, in __get_event_from_record
    raise Exception('cannot find event[%s] in record[%s]' % (self.args.event_from, record))
Exception: cannot find event[goods_sale] in record[{'spu_code': '367516318866132993', 'spu_name': 'Ð¡ÖíÅåÆæÇÉ¿ËÁ¦Î¶×¢ÐÄ±ý¸É160g/ºÐ', 'created_time': datetime.datetime(2019, 12, 19, 13, 45, 28)}]

2020-06-12 22:20:34,493 1493 WARNING cannot find event[goods_sale] in record[{'spu_code': '367516318866132993', 'spu_name': 'Ð¡ÖíÅåÆæÇÉ¿ËÁ¦Î¶×¢ÐÄ±ý¸É160g/ºÐ', 'created_time': datetime.datetime(2019, 12, 19, 13, 45, 28)}]
2020-06-12 22:20:34,502 1491 WARNING failed to parse line 12
2020-06-12 22:20:34,508 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 464, in send_event
    event = self.get_event(record)
  File "format_importer.py", line 412, in __get_event_from_record
    raise Exception('cannot find event[%s] in record[%s]' % (self.args.event_from, record))
Exception: cannot find event[goods_sale] in record[{'spu_code': '367516320283807745', 'spu_name': 'Ð¡ÖíÅåÆæ²ÝÝ®Î¶×¢ÐÄ±ý¸É160g/ºÐ', 'created_time': datetime.datetime(2019, 12, 19, 13, 45, 28)}]

2020-06-12 22:20:34,514 1493 WARNING cannot find event[goods_sale] in record[{'spu_code': '367516320283807745', 'spu_name': 'Ð¡ÖíÅåÆæ²ÝÝ®Î¶×¢ÐÄ±ý¸É160g/ºÐ', 'created_time': datetime.datetime(2019, 12, 19, 13, 45, 28)}]
2020-06-12 22:20:34,522 1491 WARNING failed to parse line 13
2020-06-12 22:20:34,526 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 464, in send_event
    event = self.get_event(record)
  File "format_importer.py", line 412, in __get_event_from_record
    raise Exception('cannot find event[%s] in record[%s]' % (self.args.event_from, record))
Exception: cannot find event[goods_sale] in record[{'spu_code': '367516321684705281', 'spu_name': 'Ð¡ÖíÅåÆæ°ô±ýÊß²ËÎ¶48g/ºÐ', 'created_time': datetime.datetime(2019, 12, 19, 13, 45, 28), 'out_time': datetime.datetime(2019, 12, 27, 10, 50, 35)}]

2020-06-12 22:20:34,534 1493 WARNING cannot find event[goods_sale] in record[{'spu_code': '367516321684705281', 'spu_name': 'Ð¡ÖíÅåÆæ°ô±ýÊß²ËÎ¶48g/ºÐ', 'created_time': datetime.datetime(2019, 12, 19, 13, 45, 28), 'out_time': datetime.datetime(2019, 12, 27, 10, 50, 35)}]
2020-06-12 22:20:34,544 1491 WARNING failed to parse line 14
2020-06-12 22:20:34,547 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 464, in send_event
    event = self.get_event(record)
  File "format_importer.py", line 412, in __get_event_from_record
    raise Exception('cannot find event[%s] in record[%s]' % (self.args.event_from, record))
Exception: cannot find event[goods_sale] in record[{'spu_code': '367516323005911041', 'spu_name': 'Ð¡ÖíÅåÆæ°ô±ý·¬ÇÑÎ¶48g/ºÐ', 'created_time': datetime.datetime(2019, 12, 19, 13, 45, 29)}]

2020-06-12 22:20:34,556 1493 WARNING cannot find event[goods_sale] in record[{'spu_code': '367516323005911041', 'spu_name': 'Ð¡ÖíÅåÆæ°ô±ý·¬ÇÑÎ¶48g/ºÐ', 'created_time': datetime.datetime(2019, 12, 19, 13, 45, 29)}]
2020-06-12 22:20:34,567 1491 WARNING failed to parse line 15
2020-06-12 22:20:34,571 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 464, in send_event
    event = self.get_event(record)
  File "format_importer.py", line 412, in __get_event_from_record
    raise Exception('cannot find event[%s] in record[%s]' % (self.args.event_from, record))
Exception: cannot find event[goods_sale] in record[{'spu_code': '367516324515860481', 'spu_name': 'Ð¡ÖíÅåÆæ°ô±ýÅ£ÄÌÎ¶48g/ºÐ', 'created_time': datetime.datetime(2019, 12, 19, 13, 45, 29)}]

2020-06-12 22:20:34,579 1493 WARNING cannot find event[goods_sale] in record[{'spu_code': '367516324515860481', 'spu_name': 'Ð¡ÖíÅåÆæ°ô±ýÅ£ÄÌÎ¶48g/ºÐ', 'created_time': datetime.datetime(2019, 12, 19, 13, 45, 29)}]
2020-06-12 22:20:34,587 1491 WARNING failed to parse line 16
2020-06-12 22:20:34,594 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 464, in send_event
    event = self.get_event(record)
  File "format_importer.py", line 412, in __get_event_from_record
    raise Exception('cannot find event[%s] in record[%s]' % (self.args.event_from, record))
Exception: cannot find event[goods_sale] in record[{'spu_code': '367516325853843457', 'spu_name': 'ÇàÊ³¾«ÖÆ±ý¸É240g/°ü', 'created_time': datetime.datetime(2019, 12, 19, 13, 45, 29)}]

2020-06-12 22:20:34,601 1493 WARNING cannot find event[goods_sale] in record[{'spu_code': '367516325853843457', 'spu_name': 'ÇàÊ³¾«ÖÆ±ý¸É240g/°ü', 'created_time': datetime.datetime(2019, 12, 19, 13, 45, 29)}]
2020-06-12 22:20:34,607 1491 WARNING failed to parse line 17
2020-06-12 22:20:34,611 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 464, in send_event
    event = self.get_event(record)
  File "format_importer.py", line 412, in __get_event_from_record
    raise Exception('cannot find event[%s] in record[%s]' % (self.args.event_from, record))
Exception: cannot find event[goods_sale] in record[{'spu_code': '367516327242158081', 'spu_name': 'ÇàÊ³ÌØÖÆ¸ÆÄÌ±ý¸É225g/°ü', 'created_time': datetime.datetime(2019, 12, 19, 13, 45, 30)}]

2020-06-12 22:20:34,620 1493 WARNING cannot find event[goods_sale] in record[{'spu_code': '367516327242158081', 'spu_name': 'ÇàÊ³ÌØÖÆ¸ÆÄÌ±ý¸É225g/°ü', 'created_time': datetime.datetime(2019, 12, 19, 13, 45, 30)}]
2020-06-12 22:20:34,627 1491 WARNING failed to parse line 18
2020-06-12 22:20:34,631 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 464, in send_event
    event = self.get_event(record)
  File "format_importer.py", line 412, in __get_event_from_record
    raise Exception('cannot find event[%s] in record[%s]' % (self.args.event_from, record))
Exception: cannot find event[goods_sale] in record[{'spu_code': '367516328815022081', 'spu_name': 'ÇàÊ³ÌúÐ¿¸ÆÄÌ±ý¸É225g/°ü', 'created_time': datetime.datetime(2019, 12, 19, 13, 45, 30)}]

2020-06-12 22:20:34,642 1493 WARNING cannot find event[goods_sale] in record[{'spu_code': '367516328815022081', 'spu_name': 'ÇàÊ³ÌúÐ¿¸ÆÄÌ±ý¸É225g/°ü', 'created_time': datetime.datetime(2019, 12, 19, 13, 45, 30)}]
2020-06-12 22:20:34,650 1491 WARNING failed to parse line 19
2020-06-12 22:20:34,654 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 464, in send_event
    event = self.get_event(record)
  File "format_importer.py", line 412, in __get_event_from_record
    raise Exception('cannot find event[%s] in record[%s]' % (self.args.event_from, record))
Exception: cannot find event[goods_sale] in record[{'spu_code': '367516330207531009', 'spu_name': 'ÇàÊ³ÀÏÄê¸ÆÄÌ±ý¸É225g/°ü', 'created_time': datetime.datetime(2019, 12, 19, 13, 45, 31)}]

2020-06-12 22:20:34,662 1493 WARNING cannot find event[goods_sale] in record[{'spu_code': '367516330207531009', 'spu_name': 'ÇàÊ³ÀÏÄê¸ÆÄÌ±ý¸É225g/°ü', 'created_time': datetime.datetime(2019, 12, 19, 13, 45, 31)}]
2020-06-12 22:20:34,669 1491 WARNING failed to parse line 20
2020-06-12 22:20:34,677 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 464, in send_event
    event = self.get_event(record)
  File "format_importer.py", line 412, in __get_event_from_record
    raise Exception('cannot find event[%s] in record[%s]' % (self.args.event_from, record))
Exception: cannot find event[goods_sale] in record[{'spu_code': '367516331587457025', 'spu_name': 'ÇàÊ³ÌØÖÆ¸ÆÄÌ±ý¸É£¨´óÀñ°ü£©1350g/°ü', 'created_time': datetime.datetime(2019, 12, 19, 13, 45, 31)}]

2020-06-12 22:20:34,689 1493 WARNING cannot find event[goods_sale] in record[{'spu_code': '367516331587457025', 'spu_name': 'ÇàÊ³ÌØÖÆ¸ÆÄÌ±ý¸É£¨´óÀñ°ü£©1350g/°ü', 'created_time': datetime.datetime(2019, 12, 19, 13, 45, 31)}]
2020-06-12 22:20:34,700 1195 INFO end import from mysql.
2020-06-12 22:20:34,704 1505 INFO counter = {'total_write': 0, 'total_read': 20, 'error': 20, 'skip': 0, 'total': 20}.
2020-06-12 22:20:34,712 1507 INFO --debug ²ÎÊýÊ±²»»áÕæÕýµ¼ÈëÊý¾Ý
2020-06-12 22:21:24,650 1445 DEBUG args: {'bool_property_list': None,
 'case_sensitive': True,
 'db': 'hisense',
 'debug': True,
 'distinct_id_from': 'spu_code',
 'event_default': None,
 'event_from': 'spu_name',
 'filename': None,
 'host': '127.0.0.1',
 'is_login': False,
 'output_file': None,
 'password': '123456',
 'port': 3306,
 'project': None,
 'quit_on_error': False,
 'skip_cnt': 0,
 'sql': 'select spu_code, spu_name, created_time, out_time from goods_spu '
        'order by created_time limit 20;',
 'subparser_name': 'mysql_event',
 'timestamp_default': None,
 'timestamp_format': '%Y-%m-%d %H:%M:%S',
 'timestamp_from': 'created_time',
 'url': 'https://testsensorsapi.juhaolian.cn/sa?project=default&token=schemaLimited-xTvWlzDD',
 'user': 'root'}
2020-06-12 22:21:24,837 1108 INFO start importing from mysql, sql=select spu_code, spu_name, created_time, out_time from goods_spu order by created_time limit 20;
2020-06-12 22:21:24,839 186 DEBUG debug url: https://testsensorsapi.juhaolian.cn/debug?project=default&token=schemaLimited-xTvWlzDD
2020-06-12 22:21:25,089 189 DEBUG response: Sensors Analytics is ready to receive your data!
2020-06-12 22:21:25,090 1456 INFO running debug mode
2020-06-12 22:21:25,091 1479 INFO progress 0.00% {'total_write': 0, 'total_read': 0, 'error': 0, 'skip': 0, 'total': 20}
2020-06-12 22:21:25,094 1491 WARNING failed to parse line 1
2020-06-12 22:21:25,106 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 469, in send_event
    self.sa.track(distinct_id, event, properties, is_login_id=self.args.is_login)
  File "E:\Document\python\school_study\information_entropy\format_importer_1_13_2\sensorsanalytics\sdk.py", line 231, in track
    self._track_event('track', event_name, distinct_id, None, all_properties, is_login_id)
  File "E:\Document\python\school_study\information_entropy\format_importer_1_13_2\sensorsanalytics\sdk.py", line 552, in _track_event
    data = self._normalize_data(data)
  File "E:\Document\python\school_study\information_entropy\format_importer_1_13_2\sensorsanalytics\sdk.py", line 307, in _normalize_data
    "event name must be a valid variable name. [name=%s]" % data['event'])
format_importer_1_13_2.sensorsanalytics.sdk.SensorsAnalyticsIllegalDataException: event name must be a valid variable name. [name=¿¨ÂüÊÖÌá´üËÖÆ¤µ°¾íÏÌµ°»ÆÎ¶258g/´ü]

2020-06-12 22:21:25,115 1493 WARNING event name must be a valid variable name. [name=¿¨ÂüÊÖÌá´üËÖÆ¤µ°¾íÏÌµ°»ÆÎ¶258g/´ü]
2020-06-12 22:21:25,125 1491 WARNING failed to parse line 2
2020-06-12 22:21:25,132 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 469, in send_event
    self.sa.track(distinct_id, event, properties, is_login_id=self.args.is_login)
  File "E:\Document\python\school_study\information_entropy\format_importer_1_13_2\sensorsanalytics\sdk.py", line 231, in track
    self._track_event('track', event_name, distinct_id, None, all_properties, is_login_id)
  File "E:\Document\python\school_study\information_entropy\format_importer_1_13_2\sensorsanalytics\sdk.py", line 552, in _track_event
    data = self._normalize_data(data)
  File "E:\Document\python\school_study\information_entropy\format_importer_1_13_2\sensorsanalytics\sdk.py", line 307, in _normalize_data
    "event name must be a valid variable name. [name=%s]" % data['event'])
format_importer_1_13_2.sensorsanalytics.sdk.SensorsAnalyticsIllegalDataException: event name must be a valid variable name. [name=¿¨ÂüÊÖÌá´üËÖÆ¤µ°¾íÁñÁ«Î¶258g/´ü]

2020-06-12 22:21:25,145 1493 WARNING event name must be a valid variable name. [name=¿¨ÂüÊÖÌá´üËÖÆ¤µ°¾íÁñÁ«Î¶258g/´ü]
2020-06-12 22:21:25,153 1491 WARNING failed to parse line 3
2020-06-12 22:21:25,157 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 469, in send_event
    self.sa.track(distinct_id, event, properties, is_login_id=self.args.is_login)
  File "E:\Document\python\school_study\information_entropy\format_importer_1_13_2\sensorsanalytics\sdk.py", line 231, in track
    self._track_event('track', event_name, distinct_id, None, all_properties, is_login_id)
  File "E:\Document\python\school_study\information_entropy\format_importer_1_13_2\sensorsanalytics\sdk.py", line 552, in _track_event
    data = self._normalize_data(data)
  File "E:\Document\python\school_study\information_entropy\format_importer_1_13_2\sensorsanalytics\sdk.py", line 307, in _normalize_data
    "event name must be a valid variable name. [name=%s]" % data['event'])
format_importer_1_13_2.sensorsanalytics.sdk.SensorsAnalyticsIllegalDataException: event name must be a valid variable name. [name=¿¨ÂüÊÖÌá´ü×°Íþ»¯Ö¥Ê¿Î¶258g/´ü]

2020-06-12 22:21:25,168 1493 WARNING event name must be a valid variable name. [name=¿¨ÂüÊÖÌá´ü×°Íþ»¯Ö¥Ê¿Î¶258g/´ü]
2020-06-12 22:21:25,178 1491 WARNING failed to parse line 4
2020-06-12 22:21:25,185 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 469, in send_event
    self.sa.track(distinct_id, event, properties, is_login_id=self.args.is_login)
  File "E:\Document\python\school_study\information_entropy\format_importer_1_13_2\sensorsanalytics\sdk.py", line 231, in track
    self._track_event('track', event_name, distinct_id, None, all_properties, is_login_id)
  File "E:\Document\python\school_study\information_entropy\format_importer_1_13_2\sensorsanalytics\sdk.py", line 552, in _track_event
    data = self._normalize_data(data)
  File "E:\Document\python\school_study\information_entropy\format_importer_1_13_2\sensorsanalytics\sdk.py", line 307, in _normalize_data
    "event name must be a valid variable name. [name=%s]" % data['event'])
format_importer_1_13_2.sensorsanalytics.sdk.SensorsAnalyticsIllegalDataException: event name must be a valid variable name. [name=¿¨ÂüÊÖÌá´ü×°Íþ»¯ÏÌµ°»ÆÎ¶258g/´ü]

2020-06-12 22:21:25,197 1493 WARNING event name must be a valid variable name. [name=¿¨ÂüÊÖÌá´ü×°Íþ»¯ÏÌµ°»ÆÎ¶258g/´ü]
2020-06-12 22:21:25,206 1491 WARNING failed to parse line 5
2020-06-12 22:21:25,212 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 469, in send_event
    self.sa.track(distinct_id, event, properties, is_login_id=self.args.is_login)
  File "E:\Document\python\school_study\information_entropy\format_importer_1_13_2\sensorsanalytics\sdk.py", line 231, in track
    self._track_event('track', event_name, distinct_id, None, all_properties, is_login_id)
  File "E:\Document\python\school_study\information_entropy\format_importer_1_13_2\sensorsanalytics\sdk.py", line 552, in _track_event
    data = self._normalize_data(data)
  File "E:\Document\python\school_study\information_entropy\format_importer_1_13_2\sensorsanalytics\sdk.py", line 307, in _normalize_data
    "event name must be a valid variable name. [name=%s]" % data['event'])
format_importer_1_13_2.sensorsanalytics.sdk.SensorsAnalyticsIllegalDataException: event name must be a valid variable name. [name=¿¨Âü´àÆ¤µ°¾íÇÉ¿ËÁ¦»¨ÉúÎ¶80g/´ü]

2020-06-12 22:21:25,222 1493 WARNING event name must be a valid variable name. [name=¿¨Âü´àÆ¤µ°¾íÇÉ¿ËÁ¦»¨ÉúÎ¶80g/´ü]
2020-06-12 22:21:25,233 1491 WARNING failed to parse line 6
2020-06-12 22:21:25,236 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 469, in send_event
    self.sa.track(distinct_id, event, properties, is_login_id=self.args.is_login)
  File "E:\Document\python\school_study\information_entropy\format_importer_1_13_2\sensorsanalytics\sdk.py", line 231, in track
    self._track_event('track', event_name, distinct_id, None, all_properties, is_login_id)
  File "E:\Document\python\school_study\information_entropy\format_importer_1_13_2\sensorsanalytics\sdk.py", line 552, in _track_event
    data = self._normalize_data(data)
  File "E:\Document\python\school_study\information_entropy\format_importer_1_13_2\sensorsanalytics\sdk.py", line 307, in _normalize_data
    "event name must be a valid variable name. [name=%s]" % data['event'])
format_importer_1_13_2.sensorsanalytics.sdk.SensorsAnalyticsIllegalDataException: event name must be a valid variable name. [name=¿¨Âü´àÆ¤µ°¾íÁñÁ«Î¶80g/´ü]

2020-06-12 22:21:25,247 1493 WARNING event name must be a valid variable name. [name=¿¨Âü´àÆ¤µ°¾íÁñÁ«Î¶80g/´ü]
2020-06-12 22:21:25,257 1491 WARNING failed to parse line 7
2020-06-12 22:21:25,263 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 469, in send_event
    self.sa.track(distinct_id, event, properties, is_login_id=self.args.is_login)
  File "E:\Document\python\school_study\information_entropy\format_importer_1_13_2\sensorsanalytics\sdk.py", line 231, in track
    self._track_event('track', event_name, distinct_id, None, all_properties, is_login_id)
  File "E:\Document\python\school_study\information_entropy\format_importer_1_13_2\sensorsanalytics\sdk.py", line 552, in _track_event
    data = self._normalize_data(data)
  File "E:\Document\python\school_study\information_entropy\format_importer_1_13_2\sensorsanalytics\sdk.py", line 307, in _normalize_data
    "event name must be a valid variable name. [name=%s]" % data['event'])
format_importer_1_13_2.sensorsanalytics.sdk.SensorsAnalyticsIllegalDataException: event name must be a valid variable name. [name=¿¨Âü´àÆ¤µ°¾íÏÌµ°»ÆÎ¶80g/´ü]

2020-06-12 22:21:25,274 1493 WARNING event name must be a valid variable name. [name=¿¨Âü´àÆ¤µ°¾íÏÌµ°»ÆÎ¶80g/´ü]
2020-06-12 22:21:25,283 1491 WARNING failed to parse line 8
2020-06-12 22:21:25,286 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 469, in send_event
    self.sa.track(distinct_id, event, properties, is_login_id=self.args.is_login)
  File "E:\Document\python\school_study\information_entropy\format_importer_1_13_2\sensorsanalytics\sdk.py", line 231, in track
    self._track_event('track', event_name, distinct_id, None, all_properties, is_login_id)
  File "E:\Document\python\school_study\information_entropy\format_importer_1_13_2\sensorsanalytics\sdk.py", line 552, in _track_event
    data = self._normalize_data(data)
  File "E:\Document\python\school_study\information_entropy\format_importer_1_13_2\sensorsanalytics\sdk.py", line 307, in _normalize_data
    "event name must be a valid variable name. [name=%s]" % data['event'])
format_importer_1_13_2.sensorsanalytics.sdk.SensorsAnalyticsIllegalDataException: event name must be a valid variable name. [name=Ð¡ÖíÅåÆæÅ£ÄÌÇúÆæ100g/ºÐ]

2020-06-12 22:21:25,299 1493 WARNING event name must be a valid variable name. [name=Ð¡ÖíÅåÆæÅ£ÄÌÇúÆæ100g/ºÐ]
2020-06-12 22:21:25,308 1491 WARNING failed to parse line 9
2020-06-12 22:21:25,315 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 469, in send_event
    self.sa.track(distinct_id, event, properties, is_login_id=self.args.is_login)
  File "E:\Document\python\school_study\information_entropy\format_importer_1_13_2\sensorsanalytics\sdk.py", line 231, in track
    self._track_event('track', event_name, distinct_id, None, all_properties, is_login_id)
  File "E:\Document\python\school_study\information_entropy\format_importer_1_13_2\sensorsanalytics\sdk.py", line 552, in _track_event
    data = self._normalize_data(data)
  File "E:\Document\python\school_study\information_entropy\format_importer_1_13_2\sensorsanalytics\sdk.py", line 307, in _normalize_data
    "event name must be a valid variable name. [name=%s]" % data['event'])
format_importer_1_13_2.sensorsanalytics.sdk.SensorsAnalyticsIllegalDataException: event name must be a valid variable name. [name=Ð¡ÖíÅåÆæÕº½´±­ÇÉ¿ËÁ¦Î¶25g/±­]

2020-06-12 22:21:25,335 1493 WARNING event name must be a valid variable name. [name=Ð¡ÖíÅåÆæÕº½´±­ÇÉ¿ËÁ¦Î¶25g/±­]
2020-06-12 22:21:25,348 1491 WARNING failed to parse line 10
2020-06-12 22:21:25,357 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 469, in send_event
    self.sa.track(distinct_id, event, properties, is_login_id=self.args.is_login)
  File "E:\Document\python\school_study\information_entropy\format_importer_1_13_2\sensorsanalytics\sdk.py", line 231, in track
    self._track_event('track', event_name, distinct_id, None, all_properties, is_login_id)
  File "E:\Document\python\school_study\information_entropy\format_importer_1_13_2\sensorsanalytics\sdk.py", line 552, in _track_event
    data = self._normalize_data(data)
  File "E:\Document\python\school_study\information_entropy\format_importer_1_13_2\sensorsanalytics\sdk.py", line 307, in _normalize_data
    "event name must be a valid variable name. [name=%s]" % data['event'])
format_importer_1_13_2.sensorsanalytics.sdk.SensorsAnalyticsIllegalDataException: event name must be a valid variable name. [name=Ð¡ÖíÅåÆæÕº½´±­²ÝÝ®Î¶25g/±­]

2020-06-12 22:21:25,368 1493 WARNING event name must be a valid variable name. [name=Ð¡ÖíÅåÆæÕº½´±­²ÝÝ®Î¶25g/±­]
2020-06-12 22:21:25,382 1491 WARNING failed to parse line 11
2020-06-12 22:21:25,387 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 469, in send_event
    self.sa.track(distinct_id, event, properties, is_login_id=self.args.is_login)
  File "E:\Document\python\school_study\information_entropy\format_importer_1_13_2\sensorsanalytics\sdk.py", line 231, in track
    self._track_event('track', event_name, distinct_id, None, all_properties, is_login_id)
  File "E:\Document\python\school_study\information_entropy\format_importer_1_13_2\sensorsanalytics\sdk.py", line 552, in _track_event
    data = self._normalize_data(data)
  File "E:\Document\python\school_study\information_entropy\format_importer_1_13_2\sensorsanalytics\sdk.py", line 307, in _normalize_data
    "event name must be a valid variable name. [name=%s]" % data['event'])
format_importer_1_13_2.sensorsanalytics.sdk.SensorsAnalyticsIllegalDataException: event name must be a valid variable name. [name=Ð¡ÖíÅåÆæÇÉ¿ËÁ¦Î¶×¢ÐÄ±ý¸É160g/ºÐ]

2020-06-12 22:21:25,405 1493 WARNING event name must be a valid variable name. [name=Ð¡ÖíÅåÆæÇÉ¿ËÁ¦Î¶×¢ÐÄ±ý¸É160g/ºÐ]
2020-06-12 22:21:25,431 1491 WARNING failed to parse line 12
2020-06-12 22:21:25,437 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 469, in send_event
    self.sa.track(distinct_id, event, properties, is_login_id=self.args.is_login)
  File "E:\Document\python\school_study\information_entropy\format_importer_1_13_2\sensorsanalytics\sdk.py", line 231, in track
    self._track_event('track', event_name, distinct_id, None, all_properties, is_login_id)
  File "E:\Document\python\school_study\information_entropy\format_importer_1_13_2\sensorsanalytics\sdk.py", line 552, in _track_event
    data = self._normalize_data(data)
  File "E:\Document\python\school_study\information_entropy\format_importer_1_13_2\sensorsanalytics\sdk.py", line 307, in _normalize_data
    "event name must be a valid variable name. [name=%s]" % data['event'])
format_importer_1_13_2.sensorsanalytics.sdk.SensorsAnalyticsIllegalDataException: event name must be a valid variable name. [name=Ð¡ÖíÅåÆæ²ÝÝ®Î¶×¢ÐÄ±ý¸É160g/ºÐ]

2020-06-12 22:21:25,449 1493 WARNING event name must be a valid variable name. [name=Ð¡ÖíÅåÆæ²ÝÝ®Î¶×¢ÐÄ±ý¸É160g/ºÐ]
2020-06-12 22:21:25,458 1491 WARNING failed to parse line 13
2020-06-12 22:21:25,464 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 469, in send_event
    self.sa.track(distinct_id, event, properties, is_login_id=self.args.is_login)
  File "E:\Document\python\school_study\information_entropy\format_importer_1_13_2\sensorsanalytics\sdk.py", line 231, in track
    self._track_event('track', event_name, distinct_id, None, all_properties, is_login_id)
  File "E:\Document\python\school_study\information_entropy\format_importer_1_13_2\sensorsanalytics\sdk.py", line 552, in _track_event
    data = self._normalize_data(data)
  File "E:\Document\python\school_study\information_entropy\format_importer_1_13_2\sensorsanalytics\sdk.py", line 307, in _normalize_data
    "event name must be a valid variable name. [name=%s]" % data['event'])
format_importer_1_13_2.sensorsanalytics.sdk.SensorsAnalyticsIllegalDataException: event name must be a valid variable name. [name=Ð¡ÖíÅåÆæ°ô±ýÊß²ËÎ¶48g/ºÐ]

2020-06-12 22:21:25,473 1493 WARNING event name must be a valid variable name. [name=Ð¡ÖíÅåÆæ°ô±ýÊß²ËÎ¶48g/ºÐ]
2020-06-12 22:21:25,482 1491 WARNING failed to parse line 14
2020-06-12 22:21:25,485 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 469, in send_event
    self.sa.track(distinct_id, event, properties, is_login_id=self.args.is_login)
  File "E:\Document\python\school_study\information_entropy\format_importer_1_13_2\sensorsanalytics\sdk.py", line 231, in track
    self._track_event('track', event_name, distinct_id, None, all_properties, is_login_id)
  File "E:\Document\python\school_study\information_entropy\format_importer_1_13_2\sensorsanalytics\sdk.py", line 552, in _track_event
    data = self._normalize_data(data)
  File "E:\Document\python\school_study\information_entropy\format_importer_1_13_2\sensorsanalytics\sdk.py", line 307, in _normalize_data
    "event name must be a valid variable name. [name=%s]" % data['event'])
format_importer_1_13_2.sensorsanalytics.sdk.SensorsAnalyticsIllegalDataException: event name must be a valid variable name. [name=Ð¡ÖíÅåÆæ°ô±ý·¬ÇÑÎ¶48g/ºÐ]

2020-06-12 22:21:25,496 1493 WARNING event name must be a valid variable name. [name=Ð¡ÖíÅåÆæ°ô±ý·¬ÇÑÎ¶48g/ºÐ]
2020-06-12 22:21:25,505 1491 WARNING failed to parse line 15
2020-06-12 22:21:25,509 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 469, in send_event
    self.sa.track(distinct_id, event, properties, is_login_id=self.args.is_login)
  File "E:\Document\python\school_study\information_entropy\format_importer_1_13_2\sensorsanalytics\sdk.py", line 231, in track
    self._track_event('track', event_name, distinct_id, None, all_properties, is_login_id)
  File "E:\Document\python\school_study\information_entropy\format_importer_1_13_2\sensorsanalytics\sdk.py", line 552, in _track_event
    data = self._normalize_data(data)
  File "E:\Document\python\school_study\information_entropy\format_importer_1_13_2\sensorsanalytics\sdk.py", line 307, in _normalize_data
    "event name must be a valid variable name. [name=%s]" % data['event'])
format_importer_1_13_2.sensorsanalytics.sdk.SensorsAnalyticsIllegalDataException: event name must be a valid variable name. [name=Ð¡ÖíÅåÆæ°ô±ýÅ£ÄÌÎ¶48g/ºÐ]

2020-06-12 22:21:25,521 1493 WARNING event name must be a valid variable name. [name=Ð¡ÖíÅåÆæ°ô±ýÅ£ÄÌÎ¶48g/ºÐ]
2020-06-12 22:21:25,532 1491 WARNING failed to parse line 16
2020-06-12 22:21:25,536 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 469, in send_event
    self.sa.track(distinct_id, event, properties, is_login_id=self.args.is_login)
  File "E:\Document\python\school_study\information_entropy\format_importer_1_13_2\sensorsanalytics\sdk.py", line 231, in track
    self._track_event('track', event_name, distinct_id, None, all_properties, is_login_id)
  File "E:\Document\python\school_study\information_entropy\format_importer_1_13_2\sensorsanalytics\sdk.py", line 552, in _track_event
    data = self._normalize_data(data)
  File "E:\Document\python\school_study\information_entropy\format_importer_1_13_2\sensorsanalytics\sdk.py", line 307, in _normalize_data
    "event name must be a valid variable name. [name=%s]" % data['event'])
format_importer_1_13_2.sensorsanalytics.sdk.SensorsAnalyticsIllegalDataException: event name must be a valid variable name. [name=ÇàÊ³¾«ÖÆ±ý¸É240g/°ü]

2020-06-12 22:21:25,548 1493 WARNING event name must be a valid variable name. [name=ÇàÊ³¾«ÖÆ±ý¸É240g/°ü]
2020-06-12 22:21:25,557 1491 WARNING failed to parse line 17
2020-06-12 22:21:25,562 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 469, in send_event
    self.sa.track(distinct_id, event, properties, is_login_id=self.args.is_login)
  File "E:\Document\python\school_study\information_entropy\format_importer_1_13_2\sensorsanalytics\sdk.py", line 231, in track
    self._track_event('track', event_name, distinct_id, None, all_properties, is_login_id)
  File "E:\Document\python\school_study\information_entropy\format_importer_1_13_2\sensorsanalytics\sdk.py", line 552, in _track_event
    data = self._normalize_data(data)
  File "E:\Document\python\school_study\information_entropy\format_importer_1_13_2\sensorsanalytics\sdk.py", line 307, in _normalize_data
    "event name must be a valid variable name. [name=%s]" % data['event'])
format_importer_1_13_2.sensorsanalytics.sdk.SensorsAnalyticsIllegalDataException: event name must be a valid variable name. [name=ÇàÊ³ÌØÖÆ¸ÆÄÌ±ý¸É225g/°ü]

2020-06-12 22:21:25,573 1493 WARNING event name must be a valid variable name. [name=ÇàÊ³ÌØÖÆ¸ÆÄÌ±ý¸É225g/°ü]
2020-06-12 22:21:25,582 1491 WARNING failed to parse line 18
2020-06-12 22:21:25,586 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 469, in send_event
    self.sa.track(distinct_id, event, properties, is_login_id=self.args.is_login)
  File "E:\Document\python\school_study\information_entropy\format_importer_1_13_2\sensorsanalytics\sdk.py", line 231, in track
    self._track_event('track', event_name, distinct_id, None, all_properties, is_login_id)
  File "E:\Document\python\school_study\information_entropy\format_importer_1_13_2\sensorsanalytics\sdk.py", line 552, in _track_event
    data = self._normalize_data(data)
  File "E:\Document\python\school_study\information_entropy\format_importer_1_13_2\sensorsanalytics\sdk.py", line 307, in _normalize_data
    "event name must be a valid variable name. [name=%s]" % data['event'])
format_importer_1_13_2.sensorsanalytics.sdk.SensorsAnalyticsIllegalDataException: event name must be a valid variable name. [name=ÇàÊ³ÌúÐ¿¸ÆÄÌ±ý¸É225g/°ü]

2020-06-12 22:21:25,596 1493 WARNING event name must be a valid variable name. [name=ÇàÊ³ÌúÐ¿¸ÆÄÌ±ý¸É225g/°ü]
2020-06-12 22:21:25,605 1491 WARNING failed to parse line 19
2020-06-12 22:21:25,608 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 469, in send_event
    self.sa.track(distinct_id, event, properties, is_login_id=self.args.is_login)
  File "E:\Document\python\school_study\information_entropy\format_importer_1_13_2\sensorsanalytics\sdk.py", line 231, in track
    self._track_event('track', event_name, distinct_id, None, all_properties, is_login_id)
  File "E:\Document\python\school_study\information_entropy\format_importer_1_13_2\sensorsanalytics\sdk.py", line 552, in _track_event
    data = self._normalize_data(data)
  File "E:\Document\python\school_study\information_entropy\format_importer_1_13_2\sensorsanalytics\sdk.py", line 307, in _normalize_data
    "event name must be a valid variable name. [name=%s]" % data['event'])
format_importer_1_13_2.sensorsanalytics.sdk.SensorsAnalyticsIllegalDataException: event name must be a valid variable name. [name=ÇàÊ³ÀÏÄê¸ÆÄÌ±ý¸É225g/°ü]

2020-06-12 22:21:25,619 1493 WARNING event name must be a valid variable name. [name=ÇàÊ³ÀÏÄê¸ÆÄÌ±ý¸É225g/°ü]
2020-06-12 22:21:25,630 1491 WARNING failed to parse line 20
2020-06-12 22:21:25,636 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 469, in send_event
    self.sa.track(distinct_id, event, properties, is_login_id=self.args.is_login)
  File "E:\Document\python\school_study\information_entropy\format_importer_1_13_2\sensorsanalytics\sdk.py", line 231, in track
    self._track_event('track', event_name, distinct_id, None, all_properties, is_login_id)
  File "E:\Document\python\school_study\information_entropy\format_importer_1_13_2\sensorsanalytics\sdk.py", line 552, in _track_event
    data = self._normalize_data(data)
  File "E:\Document\python\school_study\information_entropy\format_importer_1_13_2\sensorsanalytics\sdk.py", line 307, in _normalize_data
    "event name must be a valid variable name. [name=%s]" % data['event'])
format_importer_1_13_2.sensorsanalytics.sdk.SensorsAnalyticsIllegalDataException: event name must be a valid variable name. [name=ÇàÊ³ÌØÖÆ¸ÆÄÌ±ý¸É£¨´óÀñ°ü£©1350g/°ü]

2020-06-12 22:21:25,647 1493 WARNING event name must be a valid variable name. [name=ÇàÊ³ÌØÖÆ¸ÆÄÌ±ý¸É£¨´óÀñ°ü£©1350g/°ü]
2020-06-12 22:21:25,658 1195 INFO end import from mysql.
2020-06-12 22:21:25,660 1505 INFO counter = {'total_write': 0, 'total_read': 20, 'error': 20, 'skip': 0, 'total': 20}.
2020-06-12 22:21:25,663 1507 INFO --debug ²ÎÊýÊ±²»»áÕæÕýµ¼ÈëÊý¾Ý
2020-06-12 22:29:01,427 1445 DEBUG args: {'bool_property_list': None,
 'case_sensitive': True,
 'db': 'hisense',
 'debug': True,
 'distinct_id_from': 'spu_code',
 'event_default': None,
 'event_from': 'goods_spu',
 'filename': None,
 'host': '127.0.0.1',
 'is_login': False,
 'output_file': None,
 'password': '123456',
 'port': 3306,
 'project': None,
 'quit_on_error': False,
 'skip_cnt': 0,
 'sql': 'select spu_code, spu_name, created_time, out_time from goods_spu '
        'order by created_time limit 20;',
 'subparser_name': 'mysql_event',
 'timestamp_default': None,
 'timestamp_format': '%Y-%m-%d %H:%M:%S',
 'timestamp_from': 'created_time',
 'url': 'https://testsensorsapi.juhaolian.cn/sa?project=default&token=schemaLimited-xTvWlzDD',
 'user': 'root'}
2020-06-12 22:29:01,606 1108 INFO start importing from mysql, sql=select spu_code, spu_name, created_time, out_time from goods_spu order by created_time limit 20;
2020-06-12 22:29:01,607 186 DEBUG debug url: https://testsensorsapi.juhaolian.cn/debug?project=default&token=schemaLimited-xTvWlzDD
2020-06-12 22:29:01,955 189 DEBUG response: Sensors Analytics is ready to receive your data!
2020-06-12 22:29:01,955 1456 INFO running debug mode
2020-06-12 22:29:01,957 1479 INFO progress 0.00% {'total_write': 0, 'total_read': 0, 'error': 0, 'skip': 0, 'total': 20}
2020-06-12 22:29:01,960 1491 WARNING failed to parse line 1
2020-06-12 22:29:01,969 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 464, in send_event
    event = self.get_event(record)
  File "format_importer.py", line 412, in __get_event_from_record
    raise Exception('cannot find event[%s] in record[%s]' % (self.args.event_from, record))
Exception: cannot find event[goods_spu] in record[{'spu_code': '367516301820481537', 'spu_name': '¿¨ÂüÊÖÌá´üËÖÆ¤µ°¾íÏÌµ°»ÆÎ¶258g/´ü', 'created_time': datetime.datetime(2019, 12, 19, 13, 45, 24), 'out_time': datetime.datetime(2019, 12, 27, 10, 50, 35)}]

2020-06-12 22:29:01,982 1493 WARNING cannot find event[goods_spu] in record[{'spu_code': '367516301820481537', 'spu_name': '¿¨ÂüÊÖÌá´üËÖÆ¤µ°¾íÏÌµ°»ÆÎ¶258g/´ü', 'created_time': datetime.datetime(2019, 12, 19, 13, 45, 24), 'out_time': datetime.datetime(2019, 12, 27, 10, 50, 35)}]
2020-06-12 22:29:01,992 1491 WARNING failed to parse line 2
2020-06-12 22:29:01,996 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 464, in send_event
    event = self.get_event(record)
  File "format_importer.py", line 412, in __get_event_from_record
    raise Exception('cannot find event[%s] in record[%s]' % (self.args.event_from, record))
Exception: cannot find event[goods_spu] in record[{'spu_code': '367516305716989953', 'spu_name': '¿¨ÂüÊÖÌá´üËÖÆ¤µ°¾íÁñÁ«Î¶258g/´ü', 'created_time': datetime.datetime(2019, 12, 19, 13, 45, 25)}]

2020-06-12 22:29:02,128 1493 WARNING cannot find event[goods_spu] in record[{'spu_code': '367516305716989953', 'spu_name': '¿¨ÂüÊÖÌá´üËÖÆ¤µ°¾íÁñÁ«Î¶258g/´ü', 'created_time': datetime.datetime(2019, 12, 19, 13, 45, 25)}]
2020-06-12 22:29:02,135 1491 WARNING failed to parse line 3
2020-06-12 22:29:02,140 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 464, in send_event
    event = self.get_event(record)
  File "format_importer.py", line 412, in __get_event_from_record
    raise Exception('cannot find event[%s] in record[%s]' % (self.args.event_from, record))
Exception: cannot find event[goods_spu] in record[{'spu_code': '367516307197579265', 'spu_name': '¿¨ÂüÊÖÌá´ü×°Íþ»¯Ö¥Ê¿Î¶258g/´ü', 'created_time': datetime.datetime(2019, 12, 19, 13, 45, 25)}]

2020-06-12 22:29:02,156 1493 WARNING cannot find event[goods_spu] in record[{'spu_code': '367516307197579265', 'spu_name': '¿¨ÂüÊÖÌá´ü×°Íþ»¯Ö¥Ê¿Î¶258g/´ü', 'created_time': datetime.datetime(2019, 12, 19, 13, 45, 25)}]
2020-06-12 22:29:02,161 1491 WARNING failed to parse line 4
2020-06-12 22:29:02,166 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 464, in send_event
    event = self.get_event(record)
  File "format_importer.py", line 412, in __get_event_from_record
    raise Exception('cannot find event[%s] in record[%s]' % (self.args.event_from, record))
Exception: cannot find event[goods_spu] in record[{'spu_code': '367516308833357825', 'spu_name': '¿¨ÂüÊÖÌá´ü×°Íþ»¯ÏÌµ°»ÆÎ¶258g/´ü', 'created_time': datetime.datetime(2019, 12, 19, 13, 45, 25)}]

2020-06-12 22:29:02,180 1493 WARNING cannot find event[goods_spu] in record[{'spu_code': '367516308833357825', 'spu_name': '¿¨ÂüÊÖÌá´ü×°Íþ»¯ÏÌµ°»ÆÎ¶258g/´ü', 'created_time': datetime.datetime(2019, 12, 19, 13, 45, 25)}]
2020-06-12 22:29:02,188 1491 WARNING failed to parse line 5
2020-06-12 22:29:02,191 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 464, in send_event
    event = self.get_event(record)
  File "format_importer.py", line 412, in __get_event_from_record
    raise Exception('cannot find event[%s] in record[%s]' % (self.args.event_from, record))
Exception: cannot find event[goods_spu] in record[{'spu_code': '367516310750154753', 'spu_name': '¿¨Âü´àÆ¤µ°¾íÇÉ¿ËÁ¦»¨ÉúÎ¶80g/´ü', 'created_time': datetime.datetime(2019, 12, 19, 13, 45, 26)}]

2020-06-12 22:29:02,222 1493 WARNING cannot find event[goods_spu] in record[{'spu_code': '367516310750154753', 'spu_name': '¿¨Âü´àÆ¤µ°¾íÇÉ¿ËÁ¦»¨ÉúÎ¶80g/´ü', 'created_time': datetime.datetime(2019, 12, 19, 13, 45, 26)}]
2020-06-12 22:29:02,229 1491 WARNING failed to parse line 6
2020-06-12 22:29:02,233 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 464, in send_event
    event = self.get_event(record)
  File "format_importer.py", line 412, in __get_event_from_record
    raise Exception('cannot find event[%s] in record[%s]' % (self.args.event_from, record))
Exception: cannot find event[goods_spu] in record[{'spu_code': '367516312109109249', 'spu_name': '¿¨Âü´àÆ¤µ°¾íÁñÁ«Î¶80g/´ü', 'created_time': datetime.datetime(2019, 12, 19, 13, 45, 26)}]

2020-06-12 22:29:02,246 1493 WARNING cannot find event[goods_spu] in record[{'spu_code': '367516312109109249', 'spu_name': '¿¨Âü´àÆ¤µ°¾íÁñÁ«Î¶80g/´ü', 'created_time': datetime.datetime(2019, 12, 19, 13, 45, 26)}]
2020-06-12 22:29:02,253 1491 WARNING failed to parse line 7
2020-06-12 22:29:02,258 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 464, in send_event
    event = self.get_event(record)
  File "format_importer.py", line 412, in __get_event_from_record
    raise Exception('cannot find event[%s] in record[%s]' % (self.args.event_from, record))
Exception: cannot find event[goods_spu] in record[{'spu_code': '367516313434509313', 'spu_name': '¿¨Âü´àÆ¤µ°¾íÏÌµ°»ÆÎ¶80g/´ü', 'created_time': datetime.datetime(2019, 12, 19, 13, 45, 27)}]

2020-06-12 22:29:02,273 1493 WARNING cannot find event[goods_spu] in record[{'spu_code': '367516313434509313', 'spu_name': '¿¨Âü´àÆ¤µ°¾íÏÌµ°»ÆÎ¶80g/´ü', 'created_time': datetime.datetime(2019, 12, 19, 13, 45, 27)}]
2020-06-12 22:29:02,280 1491 WARNING failed to parse line 8
2020-06-12 22:29:02,285 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 464, in send_event
    event = self.get_event(record)
  File "format_importer.py", line 412, in __get_event_from_record
    raise Exception('cannot find event[%s] in record[%s]' % (self.args.event_from, record))
Exception: cannot find event[goods_spu] in record[{'spu_code': '367516314730549249', 'spu_name': 'Ð¡ÖíÅåÆæÅ£ÄÌÇúÆæ100g/ºÐ', 'created_time': datetime.datetime(2019, 12, 19, 13, 45, 27)}]

2020-06-12 22:29:02,299 1493 WARNING cannot find event[goods_spu] in record[{'spu_code': '367516314730549249', 'spu_name': 'Ð¡ÖíÅåÆæÅ£ÄÌÇúÆæ100g/ºÐ', 'created_time': datetime.datetime(2019, 12, 19, 13, 45, 27)}]
2020-06-12 22:29:02,306 1491 WARNING failed to parse line 9
2020-06-12 22:29:02,310 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 464, in send_event
    event = self.get_event(record)
  File "format_importer.py", line 412, in __get_event_from_record
    raise Exception('cannot find event[%s] in record[%s]' % (self.args.event_from, record))
Exception: cannot find event[goods_spu] in record[{'spu_code': '367516316127252481', 'spu_name': 'Ð¡ÖíÅåÆæÕº½´±­ÇÉ¿ËÁ¦Î¶25g/±­', 'created_time': datetime.datetime(2019, 12, 19, 13, 45, 27)}]

2020-06-12 22:29:02,324 1493 WARNING cannot find event[goods_spu] in record[{'spu_code': '367516316127252481', 'spu_name': 'Ð¡ÖíÅåÆæÕº½´±­ÇÉ¿ËÁ¦Î¶25g/±­', 'created_time': datetime.datetime(2019, 12, 19, 13, 45, 27)}]
2020-06-12 22:29:02,332 1491 WARNING failed to parse line 10
2020-06-12 22:29:02,337 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 464, in send_event
    event = self.get_event(record)
  File "format_importer.py", line 412, in __get_event_from_record
    raise Exception('cannot find event[%s] in record[%s]' % (self.args.event_from, record))
Exception: cannot find event[goods_spu] in record[{'spu_code': '367516317490401281', 'spu_name': 'Ð¡ÖíÅåÆæÕº½´±­²ÝÝ®Î¶25g/±­', 'created_time': datetime.datetime(2019, 12, 19, 13, 45, 27)}]

2020-06-12 22:29:02,351 1493 WARNING cannot find event[goods_spu] in record[{'spu_code': '367516317490401281', 'spu_name': 'Ð¡ÖíÅåÆæÕº½´±­²ÝÝ®Î¶25g/±­', 'created_time': datetime.datetime(2019, 12, 19, 13, 45, 27)}]
2020-06-12 22:29:02,357 1491 WARNING failed to parse line 11
2020-06-12 22:29:02,363 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 464, in send_event
    event = self.get_event(record)
  File "format_importer.py", line 412, in __get_event_from_record
    raise Exception('cannot find event[%s] in record[%s]' % (self.args.event_from, record))
Exception: cannot find event[goods_spu] in record[{'spu_code': '367516318866132993', 'spu_name': 'Ð¡ÖíÅåÆæÇÉ¿ËÁ¦Î¶×¢ÐÄ±ý¸É160g/ºÐ', 'created_time': datetime.datetime(2019, 12, 19, 13, 45, 28)}]

2020-06-12 22:29:02,378 1493 WARNING cannot find event[goods_spu] in record[{'spu_code': '367516318866132993', 'spu_name': 'Ð¡ÖíÅåÆæÇÉ¿ËÁ¦Î¶×¢ÐÄ±ý¸É160g/ºÐ', 'created_time': datetime.datetime(2019, 12, 19, 13, 45, 28)}]
2020-06-12 22:29:02,385 1491 WARNING failed to parse line 12
2020-06-12 22:29:02,391 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 464, in send_event
    event = self.get_event(record)
  File "format_importer.py", line 412, in __get_event_from_record
    raise Exception('cannot find event[%s] in record[%s]' % (self.args.event_from, record))
Exception: cannot find event[goods_spu] in record[{'spu_code': '367516320283807745', 'spu_name': 'Ð¡ÖíÅåÆæ²ÝÝ®Î¶×¢ÐÄ±ý¸É160g/ºÐ', 'created_time': datetime.datetime(2019, 12, 19, 13, 45, 28)}]

2020-06-12 22:29:02,405 1493 WARNING cannot find event[goods_spu] in record[{'spu_code': '367516320283807745', 'spu_name': 'Ð¡ÖíÅåÆæ²ÝÝ®Î¶×¢ÐÄ±ý¸É160g/ºÐ', 'created_time': datetime.datetime(2019, 12, 19, 13, 45, 28)}]
2020-06-12 22:29:02,412 1491 WARNING failed to parse line 13
2020-06-12 22:29:02,416 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 464, in send_event
    event = self.get_event(record)
  File "format_importer.py", line 412, in __get_event_from_record
    raise Exception('cannot find event[%s] in record[%s]' % (self.args.event_from, record))
Exception: cannot find event[goods_spu] in record[{'spu_code': '367516321684705281', 'spu_name': 'Ð¡ÖíÅåÆæ°ô±ýÊß²ËÎ¶48g/ºÐ', 'created_time': datetime.datetime(2019, 12, 19, 13, 45, 28), 'out_time': datetime.datetime(2019, 12, 27, 10, 50, 35)}]

2020-06-12 22:29:02,430 1493 WARNING cannot find event[goods_spu] in record[{'spu_code': '367516321684705281', 'spu_name': 'Ð¡ÖíÅåÆæ°ô±ýÊß²ËÎ¶48g/ºÐ', 'created_time': datetime.datetime(2019, 12, 19, 13, 45, 28), 'out_time': datetime.datetime(2019, 12, 27, 10, 50, 35)}]
2020-06-12 22:29:02,440 1491 WARNING failed to parse line 14
2020-06-12 22:29:02,445 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 464, in send_event
    event = self.get_event(record)
  File "format_importer.py", line 412, in __get_event_from_record
    raise Exception('cannot find event[%s] in record[%s]' % (self.args.event_from, record))
Exception: cannot find event[goods_spu] in record[{'spu_code': '367516323005911041', 'spu_name': 'Ð¡ÖíÅåÆæ°ô±ý·¬ÇÑÎ¶48g/ºÐ', 'created_time': datetime.datetime(2019, 12, 19, 13, 45, 29)}]

2020-06-12 22:29:02,459 1493 WARNING cannot find event[goods_spu] in record[{'spu_code': '367516323005911041', 'spu_name': 'Ð¡ÖíÅåÆæ°ô±ý·¬ÇÑÎ¶48g/ºÐ', 'created_time': datetime.datetime(2019, 12, 19, 13, 45, 29)}]
2020-06-12 22:29:02,466 1491 WARNING failed to parse line 15
2020-06-12 22:29:02,470 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 464, in send_event
    event = self.get_event(record)
  File "format_importer.py", line 412, in __get_event_from_record
    raise Exception('cannot find event[%s] in record[%s]' % (self.args.event_from, record))
Exception: cannot find event[goods_spu] in record[{'spu_code': '367516324515860481', 'spu_name': 'Ð¡ÖíÅåÆæ°ô±ýÅ£ÄÌÎ¶48g/ºÐ', 'created_time': datetime.datetime(2019, 12, 19, 13, 45, 29)}]

2020-06-12 22:29:02,483 1493 WARNING cannot find event[goods_spu] in record[{'spu_code': '367516324515860481', 'spu_name': 'Ð¡ÖíÅåÆæ°ô±ýÅ£ÄÌÎ¶48g/ºÐ', 'created_time': datetime.datetime(2019, 12, 19, 13, 45, 29)}]
2020-06-12 22:29:02,490 1491 WARNING failed to parse line 16
2020-06-12 22:29:02,494 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 464, in send_event
    event = self.get_event(record)
  File "format_importer.py", line 412, in __get_event_from_record
    raise Exception('cannot find event[%s] in record[%s]' % (self.args.event_from, record))
Exception: cannot find event[goods_spu] in record[{'spu_code': '367516325853843457', 'spu_name': 'ÇàÊ³¾«ÖÆ±ý¸É240g/°ü', 'created_time': datetime.datetime(2019, 12, 19, 13, 45, 29)}]

2020-06-12 22:29:02,508 1493 WARNING cannot find event[goods_spu] in record[{'spu_code': '367516325853843457', 'spu_name': 'ÇàÊ³¾«ÖÆ±ý¸É240g/°ü', 'created_time': datetime.datetime(2019, 12, 19, 13, 45, 29)}]
2020-06-12 22:29:02,513 1491 WARNING failed to parse line 17
2020-06-12 22:29:02,517 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 464, in send_event
    event = self.get_event(record)
  File "format_importer.py", line 412, in __get_event_from_record
    raise Exception('cannot find event[%s] in record[%s]' % (self.args.event_from, record))
Exception: cannot find event[goods_spu] in record[{'spu_code': '367516327242158081', 'spu_name': 'ÇàÊ³ÌØÖÆ¸ÆÄÌ±ý¸É225g/°ü', 'created_time': datetime.datetime(2019, 12, 19, 13, 45, 30)}]

2020-06-12 22:29:02,531 1493 WARNING cannot find event[goods_spu] in record[{'spu_code': '367516327242158081', 'spu_name': 'ÇàÊ³ÌØÖÆ¸ÆÄÌ±ý¸É225g/°ü', 'created_time': datetime.datetime(2019, 12, 19, 13, 45, 30)}]
2020-06-12 22:29:02,538 1491 WARNING failed to parse line 18
2020-06-12 22:29:02,542 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 464, in send_event
    event = self.get_event(record)
  File "format_importer.py", line 412, in __get_event_from_record
    raise Exception('cannot find event[%s] in record[%s]' % (self.args.event_from, record))
Exception: cannot find event[goods_spu] in record[{'spu_code': '367516328815022081', 'spu_name': 'ÇàÊ³ÌúÐ¿¸ÆÄÌ±ý¸É225g/°ü', 'created_time': datetime.datetime(2019, 12, 19, 13, 45, 30)}]

2020-06-12 22:29:02,555 1493 WARNING cannot find event[goods_spu] in record[{'spu_code': '367516328815022081', 'spu_name': 'ÇàÊ³ÌúÐ¿¸ÆÄÌ±ý¸É225g/°ü', 'created_time': datetime.datetime(2019, 12, 19, 13, 45, 30)}]
2020-06-12 22:29:02,562 1491 WARNING failed to parse line 19
2020-06-12 22:29:02,566 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 464, in send_event
    event = self.get_event(record)
  File "format_importer.py", line 412, in __get_event_from_record
    raise Exception('cannot find event[%s] in record[%s]' % (self.args.event_from, record))
Exception: cannot find event[goods_spu] in record[{'spu_code': '367516330207531009', 'spu_name': 'ÇàÊ³ÀÏÄê¸ÆÄÌ±ý¸É225g/°ü', 'created_time': datetime.datetime(2019, 12, 19, 13, 45, 31)}]

2020-06-12 22:29:02,580 1493 WARNING cannot find event[goods_spu] in record[{'spu_code': '367516330207531009', 'spu_name': 'ÇàÊ³ÀÏÄê¸ÆÄÌ±ý¸É225g/°ü', 'created_time': datetime.datetime(2019, 12, 19, 13, 45, 31)}]
2020-06-12 22:29:02,589 1491 WARNING failed to parse line 20
2020-06-12 22:29:02,593 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 464, in send_event
    event = self.get_event(record)
  File "format_importer.py", line 412, in __get_event_from_record
    raise Exception('cannot find event[%s] in record[%s]' % (self.args.event_from, record))
Exception: cannot find event[goods_spu] in record[{'spu_code': '367516331587457025', 'spu_name': 'ÇàÊ³ÌØÖÆ¸ÆÄÌ±ý¸É£¨´óÀñ°ü£©1350g/°ü', 'created_time': datetime.datetime(2019, 12, 19, 13, 45, 31)}]

2020-06-12 22:29:02,650 1493 WARNING cannot find event[goods_spu] in record[{'spu_code': '367516331587457025', 'spu_name': 'ÇàÊ³ÌØÖÆ¸ÆÄÌ±ý¸É£¨´óÀñ°ü£©1350g/°ü', 'created_time': datetime.datetime(2019, 12, 19, 13, 45, 31)}]
2020-06-12 22:29:02,659 1195 INFO end import from mysql.
2020-06-12 22:29:02,662 1505 INFO counter = {'total_write': 0, 'total_read': 20, 'error': 20, 'skip': 0, 'total': 20}.
2020-06-12 22:29:02,665 1507 INFO --debug ²ÎÊýÊ±²»»áÕæÕýµ¼ÈëÊý¾Ý
2020-06-12 22:30:20,191 1445 DEBUG args: {'bool_property_list': None,
 'case_sensitive': True,
 'db': 'hisense',
 'debug': True,
 'distinct_id_from': 'spu_code',
 'event_default': 'goods_spu',
 'event_from': None,
 'filename': None,
 'host': '127.0.0.1',
 'is_login': False,
 'output_file': None,
 'password': '123456',
 'port': 3306,
 'project': None,
 'quit_on_error': False,
 'skip_cnt': 0,
 'sql': 'select spu_code, spu_name, created_time, out_time from goods_spu '
        'order by created_time limit 20;',
 'subparser_name': 'mysql_event',
 'timestamp_default': None,
 'timestamp_format': '%Y-%m-%d %H:%M:%S',
 'timestamp_from': 'created_time',
 'url': 'https://testsensorsapi.juhaolian.cn/sa?project=default&token=schemaLimited-xTvWlzDD',
 'user': 'root'}
2020-06-12 22:30:20,529 1108 INFO start importing from mysql, sql=select spu_code, spu_name, created_time, out_time from goods_spu order by created_time limit 20;
2020-06-12 22:30:20,531 186 DEBUG debug url: https://testsensorsapi.juhaolian.cn/debug?project=default&token=schemaLimited-xTvWlzDD
2020-06-12 22:30:20,770 189 DEBUG response: Sensors Analytics is ready to receive your data!
2020-06-12 22:30:20,771 1456 INFO running debug mode
2020-06-12 22:30:20,772 1479 INFO progress 0.00% {'total_write': 0, 'total_read': 0, 'error': 0, 'skip': 0, 'total': 20}
2020-06-12 22:30:25,336 1195 INFO end import from mysql.
2020-06-12 22:30:25,340 1505 INFO counter = {'total_write': 20, 'total_read': 20, 'error': 0, 'skip': 0, 'total': 20}.
2020-06-12 22:30:25,344 1507 INFO --debug ²ÎÊýÊ±²»»áÕæÕýµ¼ÈëÊý¾Ý
2020-06-12 22:36:53,113 1445 DEBUG args: {'bool_property_list': None,
 'case_sensitive': True,
 'db': 'hisense',
 'debug': True,
 'distinct_id_from': 'spu_code',
 'event_default': 'goods_spu',
 'event_from': None,
 'filename': None,
 'host': '127.0.0.1',
 'is_login': False,
 'output_file': None,
 'password': '123456',
 'port': 3306,
 'project': None,
 'quit_on_error': False,
 'skip_cnt': 0,
 'sql': 'select spu_code, spu_name, created_time, out_time from goods_spu '
        'order by created_time limit 5;',
 'subparser_name': 'mysql_event',
 'timestamp_default': None,
 'timestamp_format': '%Y-%m-%d %H:%M:%S',
 'timestamp_from': 'created_time',
 'url': 'https://testsensorsapi.juhaolian.cn/sa?project=default&token=schemaLimited-xTvWlzDD',
 'user': 'root'}
2020-06-12 22:36:53,317 1108 INFO start importing from mysql, sql=select spu_code, spu_name, created_time, out_time from goods_spu order by created_time limit 5;
2020-06-12 22:36:53,318 186 DEBUG debug url: https://testsensorsapi.juhaolian.cn/debug?project=default&token=schemaLimited-xTvWlzDD
2020-06-12 22:36:53,538 189 DEBUG response: Sensors Analytics is ready to receive your data!
2020-06-12 22:36:53,538 1456 INFO running debug mode
2020-06-12 22:36:53,539 1479 INFO progress 0.00% {'total_write': 0, 'total_read': 0, 'error': 0, 'skip': 0, 'total': 5}
2020-06-12 22:36:54,499 1195 INFO end import from mysql.
2020-06-12 22:36:54,501 1505 INFO counter = {'total_write': 5, 'total_read': 5, 'error': 0, 'skip': 0, 'total': 5}.
2020-06-12 22:36:54,506 1507 INFO --debug ²ÎÊýÊ±²»»áÕæÕýµ¼ÈëÊý¾Ý
2020-06-12 22:36:56,777 1445 DEBUG args: {'bool_property_list': None,
 'case_sensitive': True,
 'db': 'sale_order',
 'debug': True,
 'distinct_id_from': 'owner_code',
 'event_default': 'sale_order',
 'event_from': None,
 'filename': None,
 'host': '127.0.0.1',
 'is_login': False,
 'output_file': None,
 'password': '123456',
 'port': 3306,
 'project': None,
 'quit_on_error': False,
 'skip_cnt': 0,
 'sql': 'select owner_code, owner_name, paid_time, room_code from sale_order '
        'order by paid_time limit 5;',
 'subparser_name': 'mysql_event',
 'timestamp_default': None,
 'timestamp_format': '%Y-%m-%d %H:%M:%S',
 'timestamp_from': 'paid_time',
 'url': 'https://testsensorsapi.juhaolian.cn/sa?project=default&token=schemaLimited-xTvWlzDD',
 'user': 'root'}
2020-06-12 22:38:08,440 1445 DEBUG args: {'bool_property_list': None,
 'case_sensitive': True,
 'db': 'sale_order',
 'debug': True,
 'distinct_id_from': 'owner_code',
 'event_default': 'sale_order',
 'event_from': None,
 'filename': None,
 'host': '127.0.0.1',
 'is_login': False,
 'output_file': None,
 'password': '123456',
 'port': 3306,
 'project': None,
 'quit_on_error': False,
 'skip_cnt': 0,
 'sql': 'select owner_code, owner_name, paid_time, room_code from sale_order '
        'order by paid_time limit 5;',
 'subparser_name': 'mysql_event',
 'timestamp_default': None,
 'timestamp_format': '%Y-%m-%d %H:%M:%S',
 'timestamp_from': 'paid_time',
 'url': 'https://testsensorsapi.juhaolian.cn/sa?project=default&token=schemaLimited-xTvWlzDD',
 'user': 'root'}
2020-06-12 22:38:11,423 1445 DEBUG args: {'bool_property_list': None,
 'case_sensitive': True,
 'db': 'hisense',
 'debug': True,
 'distinct_id_from': 'spu_code',
 'event_default': 'goods_spu',
 'event_from': None,
 'filename': None,
 'host': '127.0.0.1',
 'is_login': False,
 'output_file': None,
 'password': '123456',
 'port': 3306,
 'project': None,
 'quit_on_error': False,
 'skip_cnt': 0,
 'sql': 'select spu_code, spu_name, created_time, out_time from goods_spu '
        'order by created_time limit 5;',
 'subparser_name': 'mysql_event',
 'timestamp_default': None,
 'timestamp_format': '%Y-%m-%d %H:%M:%S',
 'timestamp_from': 'created_time',
 'url': 'https://testsensorsapi.juhaolian.cn/sa?project=default&token=schemaLimited-xTvWlzDD',
 'user': 'root'}
2020-06-12 22:38:11,674 1108 INFO start importing from mysql, sql=select spu_code, spu_name, created_time, out_time from goods_spu order by created_time limit 5;
2020-06-12 22:38:11,676 186 DEBUG debug url: https://testsensorsapi.juhaolian.cn/debug?project=default&token=schemaLimited-xTvWlzDD
2020-06-12 22:38:11,869 189 DEBUG response: Sensors Analytics is ready to receive your data!
2020-06-12 22:38:11,870 1456 INFO running debug mode
2020-06-12 22:38:11,871 1479 INFO progress 0.00% {'total_write': 0, 'total_read': 0, 'error': 0, 'skip': 0, 'total': 5}
2020-06-12 22:38:12,997 1195 INFO end import from mysql.
2020-06-12 22:38:12,999 1505 INFO counter = {'total_write': 5, 'total_read': 5, 'error': 0, 'skip': 0, 'total': 5}.
2020-06-12 22:38:13,003 1507 INFO --debug ²ÎÊýÊ±²»»áÕæÕýµ¼ÈëÊý¾Ý
2020-06-12 22:41:28,051 1445 DEBUG args: {'bool_property_list': None,
 'case_sensitive': True,
 'db': 'hisense',
 'debug': True,
 'distinct_id_from': 'owner_code',
 'event_default': 'sale_order',
 'event_from': None,
 'filename': None,
 'host': '127.0.0.1',
 'is_login': False,
 'output_file': None,
 'password': '123456',
 'port': 3306,
 'project': None,
 'quit_on_error': False,
 'skip_cnt': 0,
 'sql': 'select owner_code, owner_name, paid_time, room_code from sale_order '
        'order by paid_time limit 5;',
 'subparser_name': 'mysql_event',
 'timestamp_default': None,
 'timestamp_format': '%Y-%m-%d %H:%M:%S',
 'timestamp_from': 'paid_time',
 'url': 'https://testsensorsapi.juhaolian.cn/sa?project=default&token=schemaLimited-xTvWlzDD',
 'user': 'root'}
2020-06-12 22:41:28,276 1108 INFO start importing from mysql, sql=select owner_code, owner_name, paid_time, room_code from sale_order order by paid_time limit 5;
2020-06-12 22:41:28,277 186 DEBUG debug url: https://testsensorsapi.juhaolian.cn/debug?project=default&token=schemaLimited-xTvWlzDD
2020-06-12 22:41:28,597 189 DEBUG response: Sensors Analytics is ready to receive your data!
2020-06-12 22:41:28,597 1456 INFO running debug mode
2020-06-12 22:41:28,598 1479 INFO progress 0.00% {'total_write': 0, 'total_read': 0, 'error': 0, 'skip': 0, 'total': 5}
2020-06-12 22:41:28,600 1491 WARNING failed to parse line 1
2020-06-12 22:41:28,610 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 466, in send_event
    timestamp = self.get_timestamp(record)
  File "format_importer.py", line 422, in __get_timestamp_from_record
    raise Exception('cannot find timestamp[%s] in record[%s]' % (self.args.timestamp_from, record))
Exception: cannot find timestamp[paid_time] in record[{'owner_code': '*2019061916231142038', 'owner_name': '7502_yz', 'room_code': '20180124008775'}]

2020-06-12 22:41:28,613 1493 WARNING cannot find timestamp[paid_time] in record[{'owner_code': '*2019061916231142038', 'owner_name': '7502_yz', 'room_code': '20180124008775'}]
2020-06-12 22:41:28,616 1491 WARNING failed to parse line 2
2020-06-12 22:41:28,624 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 466, in send_event
    timestamp = self.get_timestamp(record)
  File "format_importer.py", line 422, in __get_timestamp_from_record
    raise Exception('cannot find timestamp[%s] in record[%s]' % (self.args.timestamp_from, record))
Exception: cannot find timestamp[paid_time] in record[{'owner_code': '*2019052011454260295', 'owner_name': '3408_yz', 'room_code': '123355'}]

2020-06-12 22:41:28,629 1493 WARNING cannot find timestamp[paid_time] in record[{'owner_code': '*2019052011454260295', 'owner_name': '3408_yz', 'room_code': '123355'}]
2020-06-12 22:41:28,632 1491 WARNING failed to parse line 3
2020-06-12 22:41:28,640 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 466, in send_event
    timestamp = self.get_timestamp(record)
  File "format_importer.py", line 422, in __get_timestamp_from_record
    raise Exception('cannot find timestamp[%s] in record[%s]' % (self.args.timestamp_from, record))
Exception: cannot find timestamp[paid_time] in record[{'owner_code': '*2018122909483465412', 'owner_name': '5460_yz', 'room_code': '123355'}]

2020-06-12 22:41:28,646 1493 WARNING cannot find timestamp[paid_time] in record[{'owner_code': '*2018122909483465412', 'owner_name': '5460_yz', 'room_code': '123355'}]
2020-06-12 22:41:28,649 1491 WARNING failed to parse line 4
2020-06-12 22:41:28,656 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 466, in send_event
    timestamp = self.get_timestamp(record)
  File "format_importer.py", line 422, in __get_timestamp_from_record
    raise Exception('cannot find timestamp[%s] in record[%s]' % (self.args.timestamp_from, record))
Exception: cannot find timestamp[paid_time] in record[{'owner_code': '*2018122909483465412', 'owner_name': '5460_yz', 'room_code': '123355'}]

2020-06-12 22:41:28,662 1493 WARNING cannot find timestamp[paid_time] in record[{'owner_code': '*2018122909483465412', 'owner_name': '5460_yz', 'room_code': '123355'}]
2020-06-12 22:41:28,666 1491 WARNING failed to parse line 5
2020-06-12 22:41:28,674 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 466, in send_event
    timestamp = self.get_timestamp(record)
  File "format_importer.py", line 422, in __get_timestamp_from_record
    raise Exception('cannot find timestamp[%s] in record[%s]' % (self.args.timestamp_from, record))
Exception: cannot find timestamp[paid_time] in record[{'owner_code': '*2019052011454260295', 'owner_name': '3408_yz', 'room_code': '123355'}]

2020-06-12 22:41:28,679 1493 WARNING cannot find timestamp[paid_time] in record[{'owner_code': '*2019052011454260295', 'owner_name': '3408_yz', 'room_code': '123355'}]
2020-06-12 22:41:28,684 1195 INFO end import from mysql.
2020-06-12 22:41:28,687 1505 INFO counter = {'total_write': 0, 'total_read': 5, 'error': 5, 'skip': 0, 'total': 5}.
2020-06-12 22:41:28,693 1507 INFO --debug ²ÎÊýÊ±²»»áÕæÕýµ¼ÈëÊý¾Ý
2020-06-12 22:41:31,102 1445 DEBUG args: {'bool_property_list': None,
 'case_sensitive': True,
 'db': 'hisense',
 'debug': True,
 'distinct_id_from': 'spu_code',
 'event_default': 'goods_spu',
 'event_from': None,
 'filename': None,
 'host': '127.0.0.1',
 'is_login': False,
 'output_file': None,
 'password': '123456',
 'port': 3306,
 'project': None,
 'quit_on_error': False,
 'skip_cnt': 0,
 'sql': 'select spu_code, spu_name, created_time, out_time from goods_spu '
        'order by created_time limit 5;',
 'subparser_name': 'mysql_event',
 'timestamp_default': None,
 'timestamp_format': '%Y-%m-%d %H:%M:%S',
 'timestamp_from': 'created_time',
 'url': 'https://testsensorsapi.juhaolian.cn/sa?project=default&token=schemaLimited-xTvWlzDD',
 'user': 'root'}
2020-06-12 22:41:31,302 1108 INFO start importing from mysql, sql=select spu_code, spu_name, created_time, out_time from goods_spu order by created_time limit 5;
2020-06-12 22:41:31,303 186 DEBUG debug url: https://testsensorsapi.juhaolian.cn/debug?project=default&token=schemaLimited-xTvWlzDD
2020-06-12 22:41:31,540 189 DEBUG response: Sensors Analytics is ready to receive your data!
2020-06-12 22:41:31,541 1456 INFO running debug mode
2020-06-12 22:41:31,542 1479 INFO progress 0.00% {'total_write': 0, 'total_read': 0, 'error': 0, 'skip': 0, 'total': 5}
2020-06-12 22:41:32,858 1195 INFO end import from mysql.
2020-06-12 22:41:32,862 1505 INFO counter = {'total_write': 5, 'total_read': 5, 'error': 0, 'skip': 0, 'total': 5}.
2020-06-12 22:41:32,864 1507 INFO --debug ²ÎÊýÊ±²»»áÕæÕýµ¼ÈëÊý¾Ý
2020-06-12 22:46:05,168 1445 DEBUG args: {'bool_property_list': None,
 'case_sensitive': True,
 'db': 'hisense',
 'debug': True,
 'distinct_id_from': 'owner_code',
 'event_default': 'sale_order',
 'event_from': None,
 'filename': None,
 'host': '127.0.0.1',
 'is_login': False,
 'output_file': None,
 'password': '123456',
 'port': 3306,
 'project': None,
 'quit_on_error': False,
 'skip_cnt': 0,
 'sql': 'select owner_code, owner_name, paid_time, room_code from sale_order '
        "where date_format(paid_time, '%%Y-%%m-%%d')= "
        "date_format('2019-07-25', '%%Y-%%m-%%d') order by paid_time limit 5;",
 'subparser_name': 'mysql_event',
 'timestamp_default': None,
 'timestamp_format': '%Y-%m-%d %H:%M:%S',
 'timestamp_from': 'paid_time',
 'url': 'https://testsensorsapi.juhaolian.cn/sa?project=default&token=schemaLimited-xTvWlzDD',
 'user': 'root'}
2020-06-12 22:46:05,397 1108 INFO start importing from mysql, sql=select owner_code, owner_name, paid_time, room_code from sale_order where date_format(paid_time, '%%Y-%%m-%%d')= date_format('2019-07-25', '%%Y-%%m-%%d') order by paid_time limit 5;
2020-06-12 22:46:05,401 186 DEBUG debug url: https://testsensorsapi.juhaolian.cn/debug?project=default&token=schemaLimited-xTvWlzDD
2020-06-12 22:46:05,585 189 DEBUG response: Sensors Analytics is ready to receive your data!
2020-06-12 22:46:05,585 1456 INFO running debug mode
2020-06-12 22:46:05,588 1479 INFO progress 0.00% {'total_write': 0, 'total_read': 0, 'error': 0, 'skip': 0, 'total': 5}
2020-06-12 22:46:06,708 1195 INFO end import from mysql.
2020-06-12 22:46:06,711 1505 INFO counter = {'total_write': 5, 'total_read': 5, 'error': 0, 'skip': 0, 'total': 5}.
2020-06-12 22:46:06,715 1507 INFO --debug ²ÎÊýÊ±²»»áÕæÕýµ¼ÈëÊý¾Ý
2020-06-12 22:46:09,302 1445 DEBUG args: {'bool_property_list': None,
 'case_sensitive': True,
 'db': 'hisense',
 'debug': True,
 'distinct_id_from': 'spu_code',
 'event_default': 'goods_spu',
 'event_from': None,
 'filename': None,
 'host': '127.0.0.1',
 'is_login': False,
 'output_file': None,
 'password': '123456',
 'port': 3306,
 'project': None,
 'quit_on_error': False,
 'skip_cnt': 0,
 'sql': 'select spu_code, spu_name, created_time, out_time from goods_spu '
        'order by created_time limit 5;',
 'subparser_name': 'mysql_event',
 'timestamp_default': None,
 'timestamp_format': '%Y-%m-%d %H:%M:%S',
 'timestamp_from': 'created_time',
 'url': 'https://testsensorsapi.juhaolian.cn/sa?project=default&token=schemaLimited-xTvWlzDD',
 'user': 'root'}
2020-06-12 22:46:09,511 1108 INFO start importing from mysql, sql=select spu_code, spu_name, created_time, out_time from goods_spu order by created_time limit 5;
2020-06-12 22:46:09,513 186 DEBUG debug url: https://testsensorsapi.juhaolian.cn/debug?project=default&token=schemaLimited-xTvWlzDD
2020-06-12 22:46:09,722 189 DEBUG response: Sensors Analytics is ready to receive your data!
2020-06-12 22:46:09,723 1456 INFO running debug mode
2020-06-12 22:46:09,724 1479 INFO progress 0.00% {'total_write': 0, 'total_read': 0, 'error': 0, 'skip': 0, 'total': 5}
2020-06-12 22:46:10,831 1195 INFO end import from mysql.
2020-06-12 22:46:10,835 1505 INFO counter = {'total_write': 5, 'total_read': 5, 'error': 0, 'skip': 0, 'total': 5}.
2020-06-12 22:46:10,841 1507 INFO --debug ²ÎÊýÊ±²»»áÕæÕýµ¼ÈëÊý¾Ý
2020-06-12 22:56:43,587 1445 DEBUG args: {'bool_property_list': None,
 'case_sensitive': True,
 'db': 'hisense',
 'debug': True,
 'distinct_id_from': 'owner_code',
 'event_default': 'sale_order',
 'event_from': None,
 'filename': None,
 'host': '127.0.0.1',
 'is_login': False,
 'output_file': None,
 'password': '123456',
 'port': 3306,
 'project': None,
 'quit_on_error': False,
 'skip_cnt': 0,
 'sql': 'SELECT owner_code, owner_name, paid_time, room_code FROM sale_order '
        "WHERE DATE(paid_time)= DATE_SUB('2019-10-20', INTERVAL 1 DAY) ORDER "
        'BY paid_time LIMIT 5;',
 'subparser_name': 'mysql_event',
 'timestamp_default': None,
 'timestamp_format': '%Y-%m-%d %H:%M:%S',
 'timestamp_from': 'paid_time',
 'url': 'https://testsensorsapi.juhaolian.cn/sa?project=default&token=schemaLimited-xTvWlzDD',
 'user': 'root'}
2020-06-12 22:56:43,861 1108 INFO start importing from mysql, sql=SELECT owner_code, owner_name, paid_time, room_code FROM sale_order WHERE DATE(paid_time)= DATE_SUB('2019-10-20', INTERVAL 1 DAY) ORDER BY paid_time LIMIT 5;
2020-06-12 22:56:43,862 186 DEBUG debug url: https://testsensorsapi.juhaolian.cn/debug?project=default&token=schemaLimited-xTvWlzDD
2020-06-12 22:56:44,152 189 DEBUG response: Sensors Analytics is ready to receive your data!
2020-06-12 22:56:44,152 1456 INFO running debug mode
2020-06-12 22:56:44,154 1479 INFO progress 0.00% {'total_write': 0, 'total_read': 0, 'error': 0, 'skip': 0, 'total': 5}
2020-06-12 22:56:45,491 1195 INFO end import from mysql.
2020-06-12 22:56:45,493 1505 INFO counter = {'total_write': 5, 'total_read': 5, 'error': 0, 'skip': 0, 'total': 5}.
2020-06-12 22:56:45,496 1507 INFO --debug ²ÎÊýÊ±²»»áÕæÕýµ¼ÈëÊý¾Ý
2020-06-12 22:56:47,893 1445 DEBUG args: {'bool_property_list': None,
 'case_sensitive': True,
 'db': 'hisense',
 'debug': True,
 'distinct_id_from': 'spu_code',
 'event_default': 'goods_spu',
 'event_from': None,
 'filename': None,
 'host': '127.0.0.1',
 'is_login': False,
 'output_file': None,
 'password': '123456',
 'port': 3306,
 'project': None,
 'quit_on_error': False,
 'skip_cnt': 0,
 'sql': 'select spu_code, spu_name, created_time, out_time from goods_spu '
        'order by created_time limit 5;',
 'subparser_name': 'mysql_event',
 'timestamp_default': None,
 'timestamp_format': '%Y-%m-%d %H:%M:%S',
 'timestamp_from': 'created_time',
 'url': 'https://testsensorsapi.juhaolian.cn/sa?project=default&token=schemaLimited-xTvWlzDD',
 'user': 'root'}
2020-06-12 22:56:48,253 1108 INFO start importing from mysql, sql=select spu_code, spu_name, created_time, out_time from goods_spu order by created_time limit 5;
2020-06-12 22:56:48,255 186 DEBUG debug url: https://testsensorsapi.juhaolian.cn/debug?project=default&token=schemaLimited-xTvWlzDD
2020-06-12 22:56:48,476 189 DEBUG response: Sensors Analytics is ready to receive your data!
2020-06-12 22:56:48,477 1456 INFO running debug mode
2020-06-12 22:56:48,478 1479 INFO progress 0.00% {'total_write': 0, 'total_read': 0, 'error': 0, 'skip': 0, 'total': 5}
2020-06-12 22:56:49,689 1195 INFO end import from mysql.
2020-06-12 22:56:49,692 1505 INFO counter = {'total_write': 5, 'total_read': 5, 'error': 0, 'skip': 0, 'total': 5}.
2020-06-12 22:56:49,696 1507 INFO --debug ²ÎÊýÊ±²»»áÕæÕýµ¼ÈëÊý¾Ý
2020-06-13 09:42:51,297 1445 DEBUG args: {'bool_property_list': None,
 'case_sensitive': True,
 'db': 'sqyn_sc',
 'debug': True,
 'distinct_id_from': 'owner_code',
 'event_default': None,
 'event_from': 'cb_sc_sale_orde',
 'filename': None,
 'host': '10.18.226.58',
 'is_login': False,
 'output_file': None,
 'password': 'Hisense,123',
 'port': 3100,
 'project': None,
 'quit_on_error': False,
 'skip_cnt': 0,
 'sql': 'SELECT '
        'bill_no,bill_status,owner_code,owner_name,should_pay_total,discount_total,real_pay_total,spu_count,created_time,pay_click_time,paid_time,is_point_used,used_point,pay_type,cancelled_time,coupon_total,delivery_type,area_code,area_name,room_code,room_full_name,act_total '
        'FROM cb_sc_sale_order WHERE '
        "DATE_FORMAT(paid_time,'%%Y-%%m-%%d')=DATE_SUB(CURDATE(),INTERVAL 1 "
        'DAY) ORDER BY paid_time limit 5;',
 'subparser_name': 'mysql_event',
 'timestamp_default': None,
 'timestamp_format': '%Y-%m-%d %H:%M:%S',
 'timestamp_from': 'paid_time',
 'url': 'https://testsensorsapi.juhaolian.cn/sa?project=default&token=schemaLimited-xTvWlzDD',
 'user': 'root'}
2020-06-13 09:42:52,691 1108 INFO start importing from mysql, sql=SELECT bill_no,bill_status,owner_code,owner_name,should_pay_total,discount_total,real_pay_total,spu_count,created_time,pay_click_time,paid_time,is_point_used,used_point,pay_type,cancelled_time,coupon_total,delivery_type,area_code,area_name,room_code,room_full_name,act_total FROM cb_sc_sale_order WHERE DATE_FORMAT(paid_time,'%%Y-%%m-%%d')=DATE_SUB(CURDATE(),INTERVAL 1 DAY) ORDER BY paid_time limit 5;
2020-06-13 09:42:52,693 186 DEBUG debug url: https://testsensorsapi.juhaolian.cn/debug?project=default&token=schemaLimited-xTvWlzDD
2020-06-13 09:42:52,780 189 DEBUG response: Sensors Analytics is ready to receive your data!
2020-06-13 09:42:52,781 1456 INFO running debug mode
2020-06-13 09:42:53,500 1445 DEBUG args: {'bool_property_list': None,
 'case_sensitive': True,
 'db': 'sqyn_sc',
 'debug': True,
 'distinct_id_from': 'owner_code',
 'event_default': 'cb_sc_sale_return_sku',
 'event_from': None,
 'filename': None,
 'host': '10.18.226.58',
 'is_login': False,
 'output_file': None,
 'password': 'Hisense,123',
 'port': 3100,
 'project': None,
 'quit_on_error': False,
 'skip_cnt': 0,
 'sql': 'SELECT '
        'bill_no_return,sku_no,bill_no,sub_bill_no,bill_status_return,owner_code,owner_name,shop_code,shop_name,spu_code,spu_name,sku_price,return_count,return_real_total,return_total,return_time,created_time,real_return_count,created_user,updated_user,audit_time,order_area_code,order_area_name '
        'FROM cb_sc_sale_return_sku ORDER BY return_time limit 5;',
 'subparser_name': 'mysql_event',
 'timestamp_default': None,
 'timestamp_format': '%Y-%m-%d %H:%M:%S',
 'timestamp_from': 'return_time',
 'url': 'https://testsensorsapi.juhaolian.cn/sa?project=default&token=schemaLimited-xTvWlzDD',
 'user': 'root'}
2020-06-13 09:42:53,756 1108 INFO start importing from mysql, sql=SELECT bill_no_return,sku_no,bill_no,sub_bill_no,bill_status_return,owner_code,owner_name,shop_code,shop_name,spu_code,spu_name,sku_price,return_count,return_real_total,return_total,return_time,created_time,real_return_count,created_user,updated_user,audit_time,order_area_code,order_area_name FROM cb_sc_sale_return_sku ORDER BY return_time limit 5;
2020-06-13 09:42:53,758 186 DEBUG debug url: https://testsensorsapi.juhaolian.cn/debug?project=default&token=schemaLimited-xTvWlzDD
2020-06-13 09:42:53,851 189 DEBUG response: Sensors Analytics is ready to receive your data!
2020-06-13 09:42:53,851 1456 INFO running debug mode
2020-06-13 09:42:53,852 1479 INFO progress 0.00% {'total_write': 0, 'total_read': 0, 'error': 0, 'skip': 0, 'total': 5}
2020-06-13 09:42:53,852 1491 WARNING failed to parse line 1
2020-06-13 09:42:53,854 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 466, in send_event
    timestamp = self.get_timestamp(record)
  File "format_importer.py", line 422, in __get_timestamp_from_record
    raise Exception('cannot find timestamp[%s] in record[%s]' % (self.args.timestamp_from, record))
Exception: cannot find timestamp[return_time] in record[{'bill_no_return': '314386926905831424C3', 'sku_no': '314377770010648576', 'bill_no': '314386705928925184C1', 'sub_bill_no': '314386737688195072C2', 'bill_status_return': '06', 'owner_code': '*2019052011454260295', 'owner_name': '3408_yz', 'shop_code': '314373898500284416', 'shop_name': 'ÐÅÎÒ¼Ò¶«ÀéµêÆÌ', 'spu_code': '314377769717047296', 'spu_name': '²ÝÝ®', 'sku_price': 0.01, 'return_count': 1, 'return_real_total': 0.01, 'return_total': 0.01, 'created_time': datetime.datetime(2019, 7, 25, 23, 8, 15), 'real_return_count': 0, 'created_user': '*2019052011454260295', 'updated_user': '2019052011454260295', 'order_area_code': 'A2018012300015', 'order_area_name': '¶«ÀéCSS'}]

2020-06-13 09:42:53,854 1493 WARNING cannot find timestamp[return_time] in record[{'bill_no_return': '314386926905831424C3', 'sku_no': '314377770010648576', 'bill_no': '314386705928925184C1', 'sub_bill_no': '314386737688195072C2', 'bill_status_return': '06', 'owner_code': '*2019052011454260295', 'owner_name': '3408_yz', 'shop_code': '314373898500284416', 'shop_name': 'ÐÅÎÒ¼Ò¶«ÀéµêÆÌ', 'spu_code': '314377769717047296', 'spu_name': '²ÝÝ®', 'sku_price': 0.01, 'return_count': 1, 'return_real_total': 0.01, 'return_total': 0.01, 'created_time': datetime.datetime(2019, 7, 25, 23, 8, 15), 'real_return_count': 0, 'created_user': '*2019052011454260295', 'updated_user': '2019052011454260295', 'order_area_code': 'A2018012300015', 'order_area_name': '¶«ÀéCSS'}]
2020-06-13 09:42:53,855 1491 WARNING failed to parse line 2
2020-06-13 09:42:53,855 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 466, in send_event
    timestamp = self.get_timestamp(record)
  File "format_importer.py", line 422, in __get_timestamp_from_record
    raise Exception('cannot find timestamp[%s] in record[%s]' % (self.args.timestamp_from, record))
Exception: cannot find timestamp[return_time] in record[{'bill_no_return': '314386971839410176C3', 'sku_no': '314377770010648576', 'bill_no': '314386705928925184C1', 'sub_bill_no': '314386737688195072C2', 'bill_status_return': '06', 'owner_code': '*2019052011454260295', 'owner_name': '3408_yz', 'shop_code': '314373898500284416', 'shop_name': 'ÐÅÎÒ¼Ò¶«ÀéµêÆÌ', 'spu_code': '314377769717047296', 'spu_name': '²ÝÝ®', 'sku_price': 0.01, 'return_count': 1, 'return_real_total': 0.01, 'return_total': 0.01, 'created_time': datetime.datetime(2019, 7, 25, 23, 8, 25), 'real_return_count': 0, 'created_user': '*2019052011454260295', 'updated_user': '2019052011454260295', 'order_area_code': 'A2018012300015', 'order_area_name': '¶«ÀéCSS'}]

2020-06-13 09:42:53,856 1493 WARNING cannot find timestamp[return_time] in record[{'bill_no_return': '314386971839410176C3', 'sku_no': '314377770010648576', 'bill_no': '314386705928925184C1', 'sub_bill_no': '314386737688195072C2', 'bill_status_return': '06', 'owner_code': '*2019052011454260295', 'owner_name': '3408_yz', 'shop_code': '314373898500284416', 'shop_name': 'ÐÅÎÒ¼Ò¶«ÀéµêÆÌ', 'spu_code': '314377769717047296', 'spu_name': '²ÝÝ®', 'sku_price': 0.01, 'return_count': 1, 'return_real_total': 0.01, 'return_total': 0.01, 'created_time': datetime.datetime(2019, 7, 25, 23, 8, 25), 'real_return_count': 0, 'created_user': '*2019052011454260295', 'updated_user': '2019052011454260295', 'order_area_code': 'A2018012300015', 'order_area_name': '¶«ÀéCSS'}]
2020-06-13 09:42:53,857 1491 WARNING failed to parse line 3
2020-06-13 09:42:53,858 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 466, in send_event
    timestamp = self.get_timestamp(record)
  File "format_importer.py", line 422, in __get_timestamp_from_record
    raise Exception('cannot find timestamp[%s] in record[%s]' % (self.args.timestamp_from, record))
Exception: cannot find timestamp[return_time] in record[{'bill_no_return': '314387075375804416C3', 'sku_no': '314377770010648576', 'bill_no': '314386705928925184C1', 'sub_bill_no': '314386737688195072C2', 'bill_status_return': '02', 'owner_code': '*2019052011454260295', 'owner_name': '3408_yz', 'shop_code': '314373898500284416', 'shop_name': 'ÐÅÎÒ¼Ò¶«ÀéµêÆÌ', 'spu_code': '314377769717047296', 'spu_name': '²ÝÝ®', 'sku_price': 0.01, 'return_count': 1, 'return_real_total': 0.01, 'return_total': 0.01, 'created_time': datetime.datetime(2019, 7, 25, 23, 8, 50), 'real_return_count': 0, 'created_user': '*2019052011454260295', 'updated_user': '2019052011454260295', 'order_area_code': 'A2018012300015', 'order_area_name': '¶«ÀéCSS'}]

2020-06-13 09:42:53,860 1493 WARNING cannot find timestamp[return_time] in record[{'bill_no_return': '314387075375804416C3', 'sku_no': '314377770010648576', 'bill_no': '314386705928925184C1', 'sub_bill_no': '314386737688195072C2', 'bill_status_return': '02', 'owner_code': '*2019052011454260295', 'owner_name': '3408_yz', 'shop_code': '314373898500284416', 'shop_name': 'ÐÅÎÒ¼Ò¶«ÀéµêÆÌ', 'spu_code': '314377769717047296', 'spu_name': '²ÝÝ®', 'sku_price': 0.01, 'return_count': 1, 'return_real_total': 0.01, 'return_total': 0.01, 'created_time': datetime.datetime(2019, 7, 25, 23, 8, 50), 'real_return_count': 0, 'created_user': '*2019052011454260295', 'updated_user': '2019052011454260295', 'order_area_code': 'A2018012300015', 'order_area_name': '¶«ÀéCSS'}]
2020-06-13 09:42:53,866 1491 WARNING failed to parse line 4
2020-06-13 09:42:53,867 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 466, in send_event
    timestamp = self.get_timestamp(record)
  File "format_importer.py", line 422, in __get_timestamp_from_record
    raise Exception('cannot find timestamp[%s] in record[%s]' % (self.args.timestamp_from, record))
Exception: cannot find timestamp[return_time] in record[{'bill_no_return': '314389145671675904C3', 'sku_no': '314377770010648576', 'bill_no': '314386617882095616C1', 'sub_bill_no': '314386661465108480C2', 'bill_status_return': '02', 'owner_code': '*2019052011454260295', 'owner_name': '3408_yz', 'shop_code': '314373898500284416', 'shop_name': 'ÐÅÎÒ¼Ò¶«ÀéµêÆÌ', 'spu_code': '314377769717047296', 'spu_name': '²ÝÝ®', 'sku_price': 0.01, 'return_count': 1, 'return_real_total': 0.01, 'return_total': 0.01, 'created_time': datetime.datetime(2019, 7, 25, 23, 17, 4), 'real_return_count': 0, 'created_user': '*2019052011454260295', 'updated_user': '2019052011454260295', 'order_area_code': 'A2018012300015', 'order_area_name': '¶«ÀéCSS'}]

2020-06-13 09:42:53,874 1493 WARNING cannot find timestamp[return_time] in record[{'bill_no_return': '314389145671675904C3', 'sku_no': '314377770010648576', 'bill_no': '314386617882095616C1', 'sub_bill_no': '314386661465108480C2', 'bill_status_return': '02', 'owner_code': '*2019052011454260295', 'owner_name': '3408_yz', 'shop_code': '314373898500284416', 'shop_name': 'ÐÅÎÒ¼Ò¶«ÀéµêÆÌ', 'spu_code': '314377769717047296', 'spu_name': '²ÝÝ®', 'sku_price': 0.01, 'return_count': 1, 'return_real_total': 0.01, 'return_total': 0.01, 'created_time': datetime.datetime(2019, 7, 25, 23, 17, 4), 'real_return_count': 0, 'created_user': '*2019052011454260295', 'updated_user': '2019052011454260295', 'order_area_code': 'A2018012300015', 'order_area_name': '¶«ÀéCSS'}]
2020-06-13 09:42:53,875 1491 WARNING failed to parse line 5
2020-06-13 09:42:53,880 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 466, in send_event
    timestamp = self.get_timestamp(record)
  File "format_importer.py", line 422, in __get_timestamp_from_record
    raise Exception('cannot find timestamp[%s] in record[%s]' % (self.args.timestamp_from, record))
Exception: cannot find timestamp[return_time] in record[{'bill_no_return': '314614044780638208C3', 'sku_no': '314377770010648576', 'bill_no': '314609056725577728C1', 'sub_bill_no': '314609146638872576C2', 'bill_status_return': '02', 'owner_code': '*2019072613223338962', 'owner_name': '7660_yz', 'shop_code': '314373898500284416', 'shop_name': 'ÐÅÎÒ¼Ò¶«ÀéµêÆÌ', 'spu_code': '314377769717047296', 'spu_name': '²ÝÝ®', 'sku_price': 0.01, 'return_count': 1, 'return_real_total': 0.01, 'return_total': 0.01, 'created_time': datetime.datetime(2019, 7, 26, 14, 10, 44), 'real_return_count': 0, 'created_user': '*2019072613223338962', 'updated_user': '2019072613223338962', 'order_area_code': 'A20190121', 'order_area_name': 'ÐÂÑÐ·¢ÖÐÐÄ'}]

2020-06-13 09:42:53,882 1493 WARNING cannot find timestamp[return_time] in record[{'bill_no_return': '314614044780638208C3', 'sku_no': '314377770010648576', 'bill_no': '314609056725577728C1', 'sub_bill_no': '314609146638872576C2', 'bill_status_return': '02', 'owner_code': '*2019072613223338962', 'owner_name': '7660_yz', 'shop_code': '314373898500284416', 'shop_name': 'ÐÅÎÒ¼Ò¶«ÀéµêÆÌ', 'spu_code': '314377769717047296', 'spu_name': '²ÝÝ®', 'sku_price': 0.01, 'return_count': 1, 'return_real_total': 0.01, 'return_total': 0.01, 'created_time': datetime.datetime(2019, 7, 26, 14, 10, 44), 'real_return_count': 0, 'created_user': '*2019072613223338962', 'updated_user': '2019072613223338962', 'order_area_code': 'A20190121', 'order_area_name': 'ÐÂÑÐ·¢ÖÐÐÄ'}]
2020-06-13 09:42:53,883 1195 INFO end import from mysql.
2020-06-13 09:42:53,883 1505 INFO counter = {'total_write': 0, 'total_read': 5, 'error': 5, 'skip': 0, 'total': 5}.
2020-06-13 09:42:53,883 1507 INFO --debug ²ÎÊýÊ±²»»áÕæÕýµ¼ÈëÊý¾Ý
2020-06-13 09:42:54,609 1445 DEBUG args: {'bool_property_list': None,
 'case_sensitive': True,
 'db': 'sqyn_sc',
 'debug': True,
 'distinct_id_from': 'distinct_id',
 'event_default': None,
 'event_from': 'cb_sc_area_data_set',
 'filename': None,
 'host': '10.18.226.58',
 'is_login': False,
 'output_file': None,
 'password': 'Hisense,123',
 'port': 3100,
 'project': None,
 'quit_on_error': False,
 'skip_cnt': 0,
 'sql': 'SELECT distinct_id,area_code,owner_cnt,area_name,sc_show_time FROM '
        'cb_sc_area_data_set WHERE '
        "DATE_FORMAT(sc_show_time,'%%Y-%%m-%%d')=DATE_SUB(CURDATE(),INTERVAL 1 "
        'DAY) limit 5;',
 'subparser_name': 'mysql_event',
 'timestamp_default': None,
 'timestamp_format': '%Y-%m-%d %H:%M:%S',
 'timestamp_from': 'sc_show_time',
 'url': 'https://testsensorsapi.juhaolian.cn/sa?project=default&token=schemaLimited-xTvWlzDD',
 'user': 'root'}
2020-06-13 09:42:55,148 1108 INFO start importing from mysql, sql=SELECT distinct_id,area_code,owner_cnt,area_name,sc_show_time FROM cb_sc_area_data_set WHERE DATE_FORMAT(sc_show_time,'%%Y-%%m-%%d')=DATE_SUB(CURDATE(),INTERVAL 1 DAY) limit 5;
2020-06-13 09:42:55,150 186 DEBUG debug url: https://testsensorsapi.juhaolian.cn/debug?project=default&token=schemaLimited-xTvWlzDD
2020-06-13 09:42:55,252 189 DEBUG response: Sensors Analytics is ready to receive your data!
2020-06-13 09:42:55,252 1456 INFO running debug mode
2020-06-13 09:42:55,968 1445 DEBUG args: {'bool_property_list': None,
 'case_sensitive': True,
 'db': 'sqyn_sc',
 'debug': True,
 'distinct_id_from': 'distinct_id',
 'event_default': None,
 'event_from': 'cb_sc_goods_area_count',
 'filename': None,
 'host': '10.18.226.58',
 'is_login': False,
 'output_file': None,
 'password': 'Hisense,123',
 'port': 3100,
 'project': None,
 'quit_on_error': False,
 'skip_cnt': 0,
 'sql': 'SELECT distinct_id,area_code,sku_cnt,area_name,sc_show_time FROM '
        'cb_sc_goods_area_count WHERE '
        "DATE_FORMAT(sc_show_time,'%%Y-%%m-%%d')=DATE_SUB(CURDATE(),INTERVAL 1 "
        'DAY) limit 5;',
 'subparser_name': 'mysql_event',
 'timestamp_default': None,
 'timestamp_format': '%Y-%m-%d %H:%M:%S',
 'timestamp_from': 'sc_show_time',
 'url': 'https://testsensorsapi.juhaolian.cn/sa?project=default&token=schemaLimited-xTvWlzDD',
 'user': 'root'}
2020-06-13 09:42:57,171 1445 DEBUG args: {'bool_property_list': None,
 'case_sensitive': True,
 'db': 'sqyn_sc',
 'debug': True,
 'distinct_id_from': 'user_id',
 'event_default': None,
 'event_from': 'cb_sc_owner_binding_area_count',
 'filename': None,
 'host': '10.18.226.58',
 'is_login': False,
 'output_file': None,
 'password': 'Hisense,123',
 'port': 3100,
 'project': None,
 'quit_on_error': False,
 'skip_cnt': 0,
 'sql': 'SELECT distinct_id,area_code,owner_binding_cnt,area_name,sc_show_time '
        'FROM cb_sc_owner_binding_area_count WHERE '
        "DATE_FORMAT(sc_show_time,'%%Y-%%m-%%d')=DATE_SUB(CURDATE(),INTERVAL 1 "
        'DAY) limit 5;',
 'subparser_name': 'mysql_event',
 'timestamp_default': None,
 'timestamp_format': '%Y-%m-%d %H:%M:%S',
 'timestamp_from': 'sc_show_time',
 'url': 'https://testsensorsapi.juhaolian.cn/sa?project=default&token=schemaLimited-xTvWlzDD',
 'user': 'root'}
2020-06-13 09:52:13,119 1445 DEBUG args: {'bool_property_list': None,
 'case_sensitive': True,
 'db': 'sqyn_sc',
 'debug': True,
 'distinct_id_from': 'owner_code',
 'event_default': None,
 'event_from': 'cb_sc_sale_orde',
 'filename': None,
 'host': '10.18.226.58',
 'is_login': False,
 'output_file': None,
 'password': 'Hisense,123',
 'port': 3100,
 'project': None,
 'quit_on_error': False,
 'skip_cnt': 0,
 'sql': 'SELECT '
        'bill_no,bill_status,owner_code,owner_name,should_pay_total,discount_total,real_pay_total,spu_count,created_time,pay_click_time,paid_time,is_point_used,used_point,pay_type,cancelled_time,coupon_total,delivery_type,area_code,area_name,room_code,room_full_name,act_total '
        'FROM cb_sc_sale_order WHERE '
        "DATE_FORMAT(paid_time,'%%y-%%m-%%d')=DATE_SUB(CURDATE(),INTERVAL 1 "
        'DAY) ORDER BY paid_time limit 5;',
 'subparser_name': 'mysql_event',
 'timestamp_default': None,
 'timestamp_format': '%Y-%m-%d %H:%M:%S',
 'timestamp_from': 'paid_time',
 'url': 'https://testsensorsapi.juhaolian.cn/sa?project=default&token=schemaLimited-xTvWlzDD',
 'user': 'root'}
2020-06-13 09:52:13,642 1108 INFO start importing from mysql, sql=SELECT bill_no,bill_status,owner_code,owner_name,should_pay_total,discount_total,real_pay_total,spu_count,created_time,pay_click_time,paid_time,is_point_used,used_point,pay_type,cancelled_time,coupon_total,delivery_type,area_code,area_name,room_code,room_full_name,act_total FROM cb_sc_sale_order WHERE DATE_FORMAT(paid_time,'%%y-%%m-%%d')=DATE_SUB(CURDATE(),INTERVAL 1 DAY) ORDER BY paid_time limit 5;
2020-06-13 09:52:13,647 186 DEBUG debug url: https://testsensorsapi.juhaolian.cn/debug?project=default&token=schemaLimited-xTvWlzDD
2020-06-13 09:52:13,760 189 DEBUG response: Sensors Analytics is ready to receive your data!
2020-06-13 09:52:13,760 1456 INFO running debug mode
2020-06-13 09:52:14,480 1445 DEBUG args: {'bool_property_list': None,
 'case_sensitive': True,
 'db': 'sqyn_sc',
 'debug': True,
 'distinct_id_from': 'owner_code',
 'event_default': 'cb_sc_sale_return_sku',
 'event_from': None,
 'filename': None,
 'host': '10.18.226.58',
 'is_login': False,
 'output_file': None,
 'password': 'Hisense,123',
 'port': 3100,
 'project': None,
 'quit_on_error': False,
 'skip_cnt': 0,
 'sql': 'SELECT '
        'bill_no_return,sku_no,bill_no,sub_bill_no,bill_status_return,owner_code,owner_name,shop_code,shop_name,spu_code,spu_name,sku_price,return_count,return_real_total,return_total,return_time,created_time,real_return_count,created_user,updated_user,audit_time,order_area_code,order_area_name '
        'FROM cb_sc_sale_return_sku WHERE '
        "DATE_FORMAT(paid_time,'%%y-%%m-%%d')=DATE_SUB(CURDATE(),INTERVAL 1 "
        'DAY) ORDER BY return_time limit 5;',
 'subparser_name': 'mysql_event',
 'timestamp_default': None,
 'timestamp_format': '%Y-%m-%d %H:%M:%S',
 'timestamp_from': 'return_time',
 'url': 'https://testsensorsapi.juhaolian.cn/sa?project=default&token=schemaLimited-xTvWlzDD',
 'user': 'root'}
2020-06-13 09:52:15,492 1445 DEBUG args: {'bool_property_list': None,
 'case_sensitive': True,
 'db': 'sqyn_sc',
 'debug': True,
 'distinct_id_from': 'distinct_id',
 'event_default': None,
 'event_from': 'cb_sc_area_data_set',
 'filename': None,
 'host': '10.18.226.58',
 'is_login': False,
 'output_file': None,
 'password': 'Hisense,123',
 'port': 3100,
 'project': None,
 'quit_on_error': False,
 'skip_cnt': 0,
 'sql': 'SELECT distinct_id,area_code,owner_cnt,area_name,sc_show_time FROM '
        'cb_sc_area_data_set WHERE '
        "DATE_FORMAT(sc_show_time,'%%y-%%m-%%d')=DATE_SUB(CURDATE(),INTERVAL 1 "
        'DAY) limit 5;',
 'subparser_name': 'mysql_event',
 'timestamp_default': None,
 'timestamp_format': '%Y-%m-%d %H:%M:%S',
 'timestamp_from': 'sc_show_time',
 'url': 'https://testsensorsapi.juhaolian.cn/sa?project=default&token=schemaLimited-xTvWlzDD',
 'user': 'root'}
2020-06-13 09:52:15,657 1108 INFO start importing from mysql, sql=SELECT distinct_id,area_code,owner_cnt,area_name,sc_show_time FROM cb_sc_area_data_set WHERE DATE_FORMAT(sc_show_time,'%%y-%%m-%%d')=DATE_SUB(CURDATE(),INTERVAL 1 DAY) limit 5;
2020-06-13 09:52:15,658 186 DEBUG debug url: https://testsensorsapi.juhaolian.cn/debug?project=default&token=schemaLimited-xTvWlzDD
2020-06-13 09:52:15,766 189 DEBUG response: Sensors Analytics is ready to receive your data!
2020-06-13 09:52:15,767 1456 INFO running debug mode
2020-06-13 09:52:16,486 1445 DEBUG args: {'bool_property_list': None,
 'case_sensitive': True,
 'db': 'sqyn_sc',
 'debug': True,
 'distinct_id_from': 'distinct_id',
 'event_default': None,
 'event_from': 'cb_sc_goods_area_count',
 'filename': None,
 'host': '10.18.226.58',
 'is_login': False,
 'output_file': None,
 'password': 'Hisense,123',
 'port': 3100,
 'project': None,
 'quit_on_error': False,
 'skip_cnt': 0,
 'sql': 'SELECT distinct_id,area_code,sku_cnt,area_name,sc_show_time FROM '
        'cb_sc_goods_area_count WHERE '
        "DATE_FORMAT(sc_show_time,'%%y-%%m-%%d')=DATE_SUB(CURDATE(),INTERVAL 1 "
        'DAY) limit 5;',
 'subparser_name': 'mysql_event',
 'timestamp_default': None,
 'timestamp_format': '%Y-%m-%d %H:%M:%S',
 'timestamp_from': 'sc_show_time',
 'url': 'https://testsensorsapi.juhaolian.cn/sa?project=default&token=schemaLimited-xTvWlzDD',
 'user': 'root'}
2020-06-13 09:52:17,336 1445 DEBUG args: {'bool_property_list': None,
 'case_sensitive': True,
 'db': 'sqyn_sc',
 'debug': True,
 'distinct_id_from': 'user_id',
 'event_default': None,
 'event_from': 'cb_sc_owner_binding_area_count',
 'filename': None,
 'host': '10.18.226.58',
 'is_login': False,
 'output_file': None,
 'password': 'Hisense,123',
 'port': 3100,
 'project': None,
 'quit_on_error': False,
 'skip_cnt': 0,
 'sql': 'SELECT distinct_id,area_code,owner_binding_cnt,area_name,sc_show_time '
        'FROM cb_sc_owner_binding_area_count WHERE '
        "DATE_FORMAT(sc_show_time,'%%y-%%m-%%d')=DATE_SUB(CURDATE(),INTERVAL 1 "
        'DAY) limit 5;',
 'subparser_name': 'mysql_event',
 'timestamp_default': None,
 'timestamp_format': '%Y-%m-%d %H:%M:%S',
 'timestamp_from': 'sc_show_time',
 'url': 'https://testsensorsapi.juhaolian.cn/sa?project=default&token=schemaLimited-xTvWlzDD',
 'user': 'root'}
2020-06-13 09:52:37,469 1445 DEBUG args: {'bool_property_list': None,
 'case_sensitive': True,
 'db': 'sqyn_sc',
 'debug': True,
 'distinct_id_from': 'owner_code',
 'event_default': None,
 'event_from': 'cb_sc_sale_orde',
 'filename': None,
 'host': '10.18.226.58',
 'is_login': False,
 'output_file': None,
 'password': 'Hisense,123',
 'port': 3100,
 'project': None,
 'quit_on_error': False,
 'skip_cnt': 0,
 'sql': 'SELECT '
        'bill_no,bill_status,owner_code,owner_name,should_pay_total,discount_total,real_pay_total,spu_count,created_time,pay_click_time,paid_time,is_point_used,used_point,pay_type,cancelled_time,coupon_total,delivery_type,area_code,area_name,room_code,room_full_name,act_total '
        'FROM cb_sc_sale_order WHERE '
        "DATE_FORMAT(paid_time,'%%y-%%m-%%d')=DATE_SUB(CURDATE(),INTERVAL 1 "
        'DAY) ORDER BY paid_time limit 5;',
 'subparser_name': 'mysql_event',
 'timestamp_default': None,
 'timestamp_format': '%Y-%m-%d %H:%M:%S',
 'timestamp_from': 'paid_time',
 'url': 'https://testsensorsapi.juhaolian.cn/sa?project=default&token=schemaLimited-xTvWlzDD',
 'user': 'root'}
2020-06-13 09:52:38,533 1108 INFO start importing from mysql, sql=SELECT bill_no,bill_status,owner_code,owner_name,should_pay_total,discount_total,real_pay_total,spu_count,created_time,pay_click_time,paid_time,is_point_used,used_point,pay_type,cancelled_time,coupon_total,delivery_type,area_code,area_name,room_code,room_full_name,act_total FROM cb_sc_sale_order WHERE DATE_FORMAT(paid_time,'%%y-%%m-%%d')=DATE_SUB(CURDATE(),INTERVAL 1 DAY) ORDER BY paid_time limit 5;
2020-06-13 09:52:38,537 186 DEBUG debug url: https://testsensorsapi.juhaolian.cn/debug?project=default&token=schemaLimited-xTvWlzDD
2020-06-13 09:52:38,626 189 DEBUG response: Sensors Analytics is ready to receive your data!
2020-06-13 09:52:38,626 1456 INFO running debug mode
2020-06-13 09:52:39,343 1445 DEBUG args: {'bool_property_list': None,
 'case_sensitive': True,
 'db': 'sqyn_sc',
 'debug': True,
 'distinct_id_from': 'owner_code',
 'event_default': 'cb_sc_sale_return_sku',
 'event_from': None,
 'filename': None,
 'host': '10.18.226.58',
 'is_login': False,
 'output_file': None,
 'password': 'Hisense,123',
 'port': 3100,
 'project': None,
 'quit_on_error': False,
 'skip_cnt': 0,
 'sql': 'SELECT '
        'bill_no_return,sku_no,bill_no,sub_bill_no,bill_status_return,owner_code,owner_name,shop_code,shop_name,spu_code,spu_name,sku_price,return_count,return_real_total,return_total,return_time,created_time,real_return_count,created_user,updated_user,audit_time,order_area_code,order_area_name '
        'FROM cb_sc_sale_return_sku WHERE '
        "DATE_FORMAT(paid_time,'%%y-%%m-%%d')=DATE_SUB(CURDATE(),INTERVAL 1 "
        'DAY) ORDER BY return_time limit 5;',
 'subparser_name': 'mysql_event',
 'timestamp_default': None,
 'timestamp_format': '%Y-%m-%d %H:%M:%S',
 'timestamp_from': 'return_time',
 'url': 'https://testsensorsapi.juhaolian.cn/sa?project=default&token=schemaLimited-xTvWlzDD',
 'user': 'root'}
2020-06-13 09:56:04,038 1445 DEBUG args: {'bool_property_list': None,
 'case_sensitive': True,
 'db': 'sqyn_sc',
 'debug': True,
 'distinct_id_from': 'owner_code',
 'event_default': None,
 'event_from': 'cb_sc_sale_orde',
 'filename': None,
 'host': '10.18.226.58',
 'is_login': False,
 'output_file': None,
 'password': 'Hisense,123',
 'port': 3100,
 'project': None,
 'quit_on_error': False,
 'skip_cnt': 0,
 'sql': 'SELECT '
        'bill_no,bill_status,owner_code,owner_name,should_pay_total,discount_total,real_pay_total,spu_count,created_time,pay_click_time,paid_time,is_point_used,used_point,pay_type,cancelled_time,coupon_total,delivery_type,area_code,area_name,room_code,room_full_name,act_total '
        'FROM cb_sc_sale_order WHERE '
        "DATE_FORMAT(paid_time,'%%y-%%m-%%d')=DATE_SUB(CURDATE(),INTERVAL 1 "
        'DAY) ORDER BY paid_time limit 5;',
 'subparser_name': 'mysql_event',
 'timestamp_default': None,
 'timestamp_format': '%Y-%m-%d %H:%M:%S',
 'timestamp_from': 'paid_time',
 'url': 'https://testsensorsapi.juhaolian.cn/sa?project=default&token=schemaLimited-xTvWlzDD',
 'user': 'root'}
2020-06-13 09:56:04,860 1108 INFO start importing from mysql, sql=SELECT bill_no,bill_status,owner_code,owner_name,should_pay_total,discount_total,real_pay_total,spu_count,created_time,pay_click_time,paid_time,is_point_used,used_point,pay_type,cancelled_time,coupon_total,delivery_type,area_code,area_name,room_code,room_full_name,act_total FROM cb_sc_sale_order WHERE DATE_FORMAT(paid_time,'%%y-%%m-%%d')=DATE_SUB(CURDATE(),INTERVAL 1 DAY) ORDER BY paid_time limit 5;
2020-06-13 09:56:04,863 186 DEBUG debug url: https://testsensorsapi.juhaolian.cn/debug?project=default&token=schemaLimited-xTvWlzDD
2020-06-13 09:56:04,957 189 DEBUG response: Sensors Analytics is ready to receive your data!
2020-06-13 09:56:04,957 1456 INFO running debug mode
2020-06-13 09:56:05,673 1445 DEBUG args: {'bool_property_list': None,
 'case_sensitive': True,
 'db': 'sqyn_sc',
 'debug': True,
 'distinct_id_from': 'owner_code',
 'event_default': 'cb_sc_sale_return_sku',
 'event_from': None,
 'filename': None,
 'host': '10.18.226.58',
 'is_login': False,
 'output_file': None,
 'password': 'Hisense,123',
 'port': 3100,
 'project': None,
 'quit_on_error': False,
 'skip_cnt': 0,
 'sql': 'SELECT '
        'bill_no_return,sku_no,bill_no,sub_bill_no,bill_status_return,owner_code,owner_name,shop_code,shop_name,spu_code,spu_name,sku_price,return_count,return_real_total,return_total,return_time,created_time,real_return_count,created_user,updated_user,audit_time,order_area_code,order_area_name '
        'FROM cb_sc_sale_return_sku WHERE '
        "DATE_FORMAT(return_time,'%%y-%%m-%%d')=DATE_SUB(CURDATE(),INTERVAL 1 "
        'DAY) ORDER BY return_time limit 5;',
 'subparser_name': 'mysql_event',
 'timestamp_default': None,
 'timestamp_format': '%Y-%m-%d %H:%M:%S',
 'timestamp_from': 'return_time',
 'url': 'https://testsensorsapi.juhaolian.cn/sa?project=default&token=schemaLimited-xTvWlzDD',
 'user': 'root'}
2020-06-13 09:56:06,049 1108 INFO start importing from mysql, sql=SELECT bill_no_return,sku_no,bill_no,sub_bill_no,bill_status_return,owner_code,owner_name,shop_code,shop_name,spu_code,spu_name,sku_price,return_count,return_real_total,return_total,return_time,created_time,real_return_count,created_user,updated_user,audit_time,order_area_code,order_area_name FROM cb_sc_sale_return_sku WHERE DATE_FORMAT(return_time,'%%y-%%m-%%d')=DATE_SUB(CURDATE(),INTERVAL 1 DAY) ORDER BY return_time limit 5;
2020-06-13 09:56:06,064 186 DEBUG debug url: https://testsensorsapi.juhaolian.cn/debug?project=default&token=schemaLimited-xTvWlzDD
2020-06-13 09:56:06,156 189 DEBUG response: Sensors Analytics is ready to receive your data!
2020-06-13 09:56:06,156 1456 INFO running debug mode
2020-06-13 09:56:52,641 1445 DEBUG args: {'bool_property_list': None,
 'case_sensitive': True,
 'db': 'sqyn_sc',
 'debug': True,
 'distinct_id_from': 'owner_code',
 'event_default': None,
 'event_from': 'cb_sc_sale_orde',
 'filename': None,
 'host': '10.18.226.58',
 'is_login': False,
 'output_file': None,
 'password': 'Hisense,123',
 'port': 3100,
 'project': None,
 'quit_on_error': False,
 'skip_cnt': 0,
 'sql': 'SELECT '
        'bill_no,bill_status,owner_code,owner_name,should_pay_total,discount_total,real_pay_total,spu_count,created_time,pay_click_time,paid_time,is_point_used,used_point,pay_type,cancelled_time,coupon_total,delivery_type,area_code,area_name,room_code,room_full_name,act_total '
        'FROM cb_sc_sale_order WHERE '
        'DATE(paid_time)=DATE_SUB(CURDATE(),INTERVAL 1 DAY) ORDER BY paid_time '
        'limit 5;',
 'subparser_name': 'mysql_event',
 'timestamp_default': None,
 'timestamp_format': '%Y-%m-%d %H:%M:%S',
 'timestamp_from': 'paid_time',
 'url': 'https://testsensorsapi.juhaolian.cn/sa?project=default&token=schemaLimited-xTvWlzDD',
 'user': 'root'}
2020-06-13 09:56:53,106 1108 INFO start importing from mysql, sql=SELECT bill_no,bill_status,owner_code,owner_name,should_pay_total,discount_total,real_pay_total,spu_count,created_time,pay_click_time,paid_time,is_point_used,used_point,pay_type,cancelled_time,coupon_total,delivery_type,area_code,area_name,room_code,room_full_name,act_total FROM cb_sc_sale_order WHERE DATE(paid_time)=DATE_SUB(CURDATE(),INTERVAL 1 DAY) ORDER BY paid_time limit 5;
2020-06-13 09:56:53,107 186 DEBUG debug url: https://testsensorsapi.juhaolian.cn/debug?project=default&token=schemaLimited-xTvWlzDD
2020-06-13 09:56:53,203 189 DEBUG response: Sensors Analytics is ready to receive your data!
2020-06-13 09:56:53,204 1456 INFO running debug mode
2020-06-13 09:56:53,925 1445 DEBUG args: {'bool_property_list': None,
 'case_sensitive': True,
 'db': 'sqyn_sc',
 'debug': True,
 'distinct_id_from': 'owner_code',
 'event_default': 'cb_sc_sale_return_sku',
 'event_from': None,
 'filename': None,
 'host': '10.18.226.58',
 'is_login': False,
 'output_file': None,
 'password': 'Hisense,123',
 'port': 3100,
 'project': None,
 'quit_on_error': False,
 'skip_cnt': 0,
 'sql': 'SELECT '
        'bill_no_return,sku_no,bill_no,sub_bill_no,bill_status_return,owner_code,owner_name,shop_code,shop_name,spu_code,spu_name,sku_price,return_count,return_real_total,return_total,return_time,created_time,real_return_count,created_user,updated_user,audit_time,order_area_code,order_area_name '
        'FROM cb_sc_sale_return_sku WHERE '
        'DATE(return_time)=DATE_SUB(CURDATE(),INTERVAL 1 DAY) ORDER BY '
        'return_time limit 5;',
 'subparser_name': 'mysql_event',
 'timestamp_default': None,
 'timestamp_format': '%Y-%m-%d %H:%M:%S',
 'timestamp_from': 'return_time',
 'url': 'https://testsensorsapi.juhaolian.cn/sa?project=default&token=schemaLimited-xTvWlzDD',
 'user': 'root'}
2020-06-13 09:56:54,139 1108 INFO start importing from mysql, sql=SELECT bill_no_return,sku_no,bill_no,sub_bill_no,bill_status_return,owner_code,owner_name,shop_code,shop_name,spu_code,spu_name,sku_price,return_count,return_real_total,return_total,return_time,created_time,real_return_count,created_user,updated_user,audit_time,order_area_code,order_area_name FROM cb_sc_sale_return_sku WHERE DATE(return_time)=DATE_SUB(CURDATE(),INTERVAL 1 DAY) ORDER BY return_time limit 5;
2020-06-13 09:56:54,141 186 DEBUG debug url: https://testsensorsapi.juhaolian.cn/debug?project=default&token=schemaLimited-xTvWlzDD
2020-06-13 09:56:54,243 189 DEBUG response: Sensors Analytics is ready to receive your data!
2020-06-13 09:56:54,244 1456 INFO running debug mode
2020-06-13 10:01:30,721 1445 DEBUG args: {'bool_property_list': None,
 'case_sensitive': True,
 'db': 'sqyn_sc',
 'debug': True,
 'distinct_id_from': 'owner_code',
 'event_default': None,
 'event_from': 'cb_sc_sale_orde',
 'filename': None,
 'host': '10.18.226.58',
 'is_login': False,
 'output_file': None,
 'password': 'Hisense,123',
 'port': 3100,
 'project': None,
 'quit_on_error': False,
 'skip_cnt': 0,
 'sql': 'SELECT '
        'bill_no,bill_status,owner_code,owner_name,should_pay_total,discount_total,real_pay_total,spu_count,created_time,pay_click_time,paid_time,is_point_used,used_point,pay_type,cancelled_time,coupon_total,delivery_type,area_code,area_name,room_code,room_full_name,act_total '
        'FROM cb_sc_sale_order WHERE '
        "DATE(paid_time)=DATE_SUB('2019-10-26',INTERVAL 1 DAY) ORDER BY "
        'paid_time LIMIT 20;',
 'subparser_name': 'mysql_event',
 'timestamp_default': None,
 'timestamp_format': '%Y-%m-%d %H:%M:%S',
 'timestamp_from': 'paid_time',
 'url': 'https://testsensorsapi.juhaolian.cn/sa?project=default&token=schemaLimited-xTvWlzDD',
 'user': 'root'}
2020-06-13 10:01:31,113 1108 INFO start importing from mysql, sql=SELECT bill_no,bill_status,owner_code,owner_name,should_pay_total,discount_total,real_pay_total,spu_count,created_time,pay_click_time,paid_time,is_point_used,used_point,pay_type,cancelled_time,coupon_total,delivery_type,area_code,area_name,room_code,room_full_name,act_total FROM cb_sc_sale_order WHERE DATE(paid_time)=DATE_SUB('2019-10-26',INTERVAL 1 DAY) ORDER BY paid_time LIMIT 20;
2020-06-13 10:01:31,115 186 DEBUG debug url: https://testsensorsapi.juhaolian.cn/debug?project=default&token=schemaLimited-xTvWlzDD
2020-06-13 10:01:31,238 189 DEBUG response: Sensors Analytics is ready to receive your data!
2020-06-13 10:01:31,238 1456 INFO running debug mode
2020-06-13 10:01:31,240 1479 INFO progress 0.00% {'total_write': 0, 'total_read': 0, 'error': 0, 'skip': 0, 'total': 20}
2020-06-13 10:01:31,241 1491 WARNING failed to parse line 1
2020-06-13 10:01:31,246 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 464, in send_event
    event = self.get_event(record)
  File "format_importer.py", line 412, in __get_event_from_record
    raise Exception('cannot find event[%s] in record[%s]' % (self.args.event_from, record))
Exception: cannot find event[cb_sc_sale_orde] in record[{'bill_no': '347493190933667840C1', 'bill_status': '02', 'owner_code': '*20180225006367', 'owner_name': '1722_yz', 'should_pay_total': 20.9, 'discount_total': 0.0, 'real_pay_total': 10.9, 'spu_count': 1, 'created_time': datetime.datetime(2019, 10, 25, 7, 40, 43), 'pay_click_time': datetime.datetime(2019, 10, 25, 7, 40, 43), 'paid_time': datetime.datetime(2019, 10, 25, 7, 41, 13), 'is_point_used': 0, 'used_point': 0, 'pay_type': 1, 'coupon_total': 10.0, 'delivery_type': 1, 'area_code': 'A2018012300007', 'area_name': 'Ñô¹âÀïÒ»ÆÚ', 'act_total': 0.0}]

2020-06-13 10:01:31,249 1493 WARNING cannot find event[cb_sc_sale_orde] in record[{'bill_no': '347493190933667840C1', 'bill_status': '02', 'owner_code': '*20180225006367', 'owner_name': '1722_yz', 'should_pay_total': 20.9, 'discount_total': 0.0, 'real_pay_total': 10.9, 'spu_count': 1, 'created_time': datetime.datetime(2019, 10, 25, 7, 40, 43), 'pay_click_time': datetime.datetime(2019, 10, 25, 7, 40, 43), 'paid_time': datetime.datetime(2019, 10, 25, 7, 41, 13), 'is_point_used': 0, 'used_point': 0, 'pay_type': 1, 'coupon_total': 10.0, 'delivery_type': 1, 'area_code': 'A2018012300007', 'area_name': 'Ñô¹âÀïÒ»ÆÚ', 'act_total': 0.0}]
2020-06-13 10:01:31,253 1491 WARNING failed to parse line 2
2020-06-13 10:01:31,267 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 464, in send_event
    event = self.get_event(record)
  File "format_importer.py", line 412, in __get_event_from_record
    raise Exception('cannot find event[%s] in record[%s]' % (self.args.event_from, record))
Exception: cannot find event[cb_sc_sale_orde] in record[{'bill_no': '347497134342791168C1', 'bill_status': '02', 'owner_code': '*2018022715035992515', 'owner_name': 'Ó×·¢À­µ×ºÓ', 'should_pay_total': 12.9, 'discount_total': 0.0, 'real_pay_total': 2.9, 'spu_count': 1, 'created_time': datetime.datetime(2019, 10, 25, 7, 56, 23), 'pay_click_time': datetime.datetime(2019, 10, 25, 7, 56, 43), 'paid_time': datetime.datetime(2019, 10, 25, 7, 56, 55), 'is_point_used': 0, 'used_point': 0, 'pay_type': 0, 'coupon_total': 10.0, 'delivery_type': 1, 'area_code': 'A2018012300007', 'area_name': 'Ñô¹âÀïÒ»ÆÚ', 'room_code': '20180124000730', 'room_full_name': '3ºÅÂ¥-2-604', 'act_total': 0.0}]

2020-06-13 10:01:31,270 1493 WARNING cannot find event[cb_sc_sale_orde] in record[{'bill_no': '347497134342791168C1', 'bill_status': '02', 'owner_code': '*2018022715035992515', 'owner_name': 'Ó×·¢À­µ×ºÓ', 'should_pay_total': 12.9, 'discount_total': 0.0, 'real_pay_total': 2.9, 'spu_count': 1, 'created_time': datetime.datetime(2019, 10, 25, 7, 56, 23), 'pay_click_time': datetime.datetime(2019, 10, 25, 7, 56, 43), 'paid_time': datetime.datetime(2019, 10, 25, 7, 56, 55), 'is_point_used': 0, 'used_point': 0, 'pay_type': 0, 'coupon_total': 10.0, 'delivery_type': 1, 'area_code': 'A2018012300007', 'area_name': 'Ñô¹âÀïÒ»ÆÚ', 'room_code': '20180124000730', 'room_full_name': '3ºÅÂ¥-2-604', 'act_total': 0.0}]
2020-06-13 10:01:31,272 1491 WARNING failed to parse line 3
2020-06-13 10:01:31,273 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 464, in send_event
    event = self.get_event(record)
  File "format_importer.py", line 412, in __get_event_from_record
    raise Exception('cannot find event[%s] in record[%s]' % (self.args.event_from, record))
Exception: cannot find event[cb_sc_sale_orde] in record[{'bill_no': '347500212156620800C1', 'bill_status': '02', 'owner_code': '*20180225014341', 'owner_name': '7879_yz', 'should_pay_total': 21.9, 'discount_total': 0.0, 'real_pay_total': 11.9, 'spu_count': 1, 'created_time': datetime.datetime(2019, 10, 25, 8, 8, 37), 'pay_click_time': datetime.datetime(2019, 10, 25, 8, 8, 37), 'paid_time': datetime.datetime(2019, 10, 25, 8, 10, 43), 'is_point_used': 0, 'used_point': 0, 'pay_type': 0, 'coupon_total': 10.0, 'delivery_type': 1, 'area_code': 'A2018012300012', 'area_name': '»´°²¿¤', 'room_code': '20180124010612', 'room_full_name': '1ºÅÂ¥-1-302', 'act_total': 0.0}]

2020-06-13 10:01:31,275 1493 WARNING cannot find event[cb_sc_sale_orde] in record[{'bill_no': '347500212156620800C1', 'bill_status': '02', 'owner_code': '*20180225014341', 'owner_name': '7879_yz', 'should_pay_total': 21.9, 'discount_total': 0.0, 'real_pay_total': 11.9, 'spu_count': 1, 'created_time': datetime.datetime(2019, 10, 25, 8, 8, 37), 'pay_click_time': datetime.datetime(2019, 10, 25, 8, 8, 37), 'paid_time': datetime.datetime(2019, 10, 25, 8, 10, 43), 'is_point_used': 0, 'used_point': 0, 'pay_type': 0, 'coupon_total': 10.0, 'delivery_type': 1, 'area_code': 'A2018012300012', 'area_name': '»´°²¿¤', 'room_code': '20180124010612', 'room_full_name': '1ºÅÂ¥-1-302', 'act_total': 0.0}]
2020-06-13 10:01:31,286 1491 WARNING failed to parse line 4
2020-06-13 10:01:31,287 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 464, in send_event
    event = self.get_event(record)
  File "format_importer.py", line 412, in __get_event_from_record
    raise Exception('cannot find event[%s] in record[%s]' % (self.args.event_from, record))
Exception: cannot find event[cb_sc_sale_orde] in record[{'bill_no': '347518024325521408C1', 'bill_status': '02', 'owner_code': '*2018062114385023063', 'owner_name': '6887_yz', 'should_pay_total': 21.9, 'discount_total': 0.0, 'real_pay_total': 11.9, 'spu_count': 1, 'created_time': datetime.datetime(2019, 10, 25, 9, 19, 24), 'pay_click_time': datetime.datetime(2019, 10, 25, 9, 19, 24), 'paid_time': datetime.datetime(2019, 10, 25, 9, 20, 21), 'is_point_used': 0, 'used_point': 0, 'pay_type': 1, 'coupon_total': 10.0, 'delivery_type': 1, 'area_code': 'A2018012300007', 'area_name': 'Ñô¹âÀïÒ»ÆÚ', 'room_code': '20180124000882', 'room_full_name': '5ºÅÂ¥-1-301', 'act_total': 0.0}]

2020-06-13 10:01:31,288 1493 WARNING cannot find event[cb_sc_sale_orde] in record[{'bill_no': '347518024325521408C1', 'bill_status': '02', 'owner_code': '*2018062114385023063', 'owner_name': '6887_yz', 'should_pay_total': 21.9, 'discount_total': 0.0, 'real_pay_total': 11.9, 'spu_count': 1, 'created_time': datetime.datetime(2019, 10, 25, 9, 19, 24), 'pay_click_time': datetime.datetime(2019, 10, 25, 9, 19, 24), 'paid_time': datetime.datetime(2019, 10, 25, 9, 20, 21), 'is_point_used': 0, 'used_point': 0, 'pay_type': 1, 'coupon_total': 10.0, 'delivery_type': 1, 'area_code': 'A2018012300007', 'area_name': 'Ñô¹âÀïÒ»ÆÚ', 'room_code': '20180124000882', 'room_full_name': '5ºÅÂ¥-1-301', 'act_total': 0.0}]
2020-06-13 10:01:31,290 1491 WARNING failed to parse line 5
2020-06-13 10:01:31,291 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 464, in send_event
    event = self.get_event(record)
  File "format_importer.py", line 412, in __get_event_from_record
    raise Exception('cannot find event[%s] in record[%s]' % (self.args.event_from, record))
Exception: cannot find event[cb_sc_sale_orde] in record[{'bill_no': '347518643748724736C1', 'bill_status': '02', 'owner_code': '*20180225002303', 'owner_name': '9927_yz', 'should_pay_total': 21.9, 'discount_total': 0.0, 'real_pay_total': 18.9, 'spu_count': 1, 'created_time': datetime.datetime(2019, 10, 25, 9, 21, 51), 'pay_click_time': datetime.datetime(2019, 10, 25, 9, 21, 52), 'paid_time': datetime.datetime(2019, 10, 25, 9, 22, 22), 'is_point_used': 1, 'used_point': 300, 'pay_type': 1, 'coupon_total': 0.0, 'delivery_type': 1, 'area_code': 'A2018012300002', 'area_name': 'ºþµºÊÀ¼Ò', 'room_code': '2019043207705', 'room_full_name': 'µØÏÂ³µÎ»-0-A-B2-74', 'act_total': 0.0}]

2020-06-13 10:01:31,292 1493 WARNING cannot find event[cb_sc_sale_orde] in record[{'bill_no': '347518643748724736C1', 'bill_status': '02', 'owner_code': '*20180225002303', 'owner_name': '9927_yz', 'should_pay_total': 21.9, 'discount_total': 0.0, 'real_pay_total': 18.9, 'spu_count': 1, 'created_time': datetime.datetime(2019, 10, 25, 9, 21, 51), 'pay_click_time': datetime.datetime(2019, 10, 25, 9, 21, 52), 'paid_time': datetime.datetime(2019, 10, 25, 9, 22, 22), 'is_point_used': 1, 'used_point': 300, 'pay_type': 1, 'coupon_total': 0.0, 'delivery_type': 1, 'area_code': 'A2018012300002', 'area_name': 'ºþµºÊÀ¼Ò', 'room_code': '2019043207705', 'room_full_name': 'µØÏÂ³µÎ»-0-A-B2-74', 'act_total': 0.0}]
2020-06-13 10:01:31,293 1491 WARNING failed to parse line 6
2020-06-13 10:01:31,293 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 464, in send_event
    event = self.get_event(record)
  File "format_importer.py", line 412, in __get_event_from_record
    raise Exception('cannot find event[%s] in record[%s]' % (self.args.event_from, record))
Exception: cannot find event[cb_sc_sale_orde] in record[{'bill_no': '347520078884364288C1', 'bill_status': '02', 'owner_code': '*2019102509230226601', 'owner_name': '1201_yz', 'should_pay_total': 27.9, 'discount_total': 0.0, 'real_pay_total': 17.9, 'spu_count': 1, 'created_time': datetime.datetime(2019, 10, 25, 9, 27, 34), 'pay_click_time': datetime.datetime(2019, 10, 25, 9, 27, 34), 'paid_time': datetime.datetime(2019, 10, 25, 9, 28, 13), 'is_point_used': 0, 'used_point': 0, 'pay_type': 1, 'coupon_total': 10.0, 'delivery_type': 1, 'area_code': 'A2018012300007', 'area_name': 'Ñô¹âÀïÒ»ÆÚ', 'room_code': '20180124018101', 'room_full_name': '1ºÅÂ¥-1-100', 'act_total': 0.0}]

2020-06-13 10:01:31,294 1493 WARNING cannot find event[cb_sc_sale_orde] in record[{'bill_no': '347520078884364288C1', 'bill_status': '02', 'owner_code': '*2019102509230226601', 'owner_name': '1201_yz', 'should_pay_total': 27.9, 'discount_total': 0.0, 'real_pay_total': 17.9, 'spu_count': 1, 'created_time': datetime.datetime(2019, 10, 25, 9, 27, 34), 'pay_click_time': datetime.datetime(2019, 10, 25, 9, 27, 34), 'paid_time': datetime.datetime(2019, 10, 25, 9, 28, 13), 'is_point_used': 0, 'used_point': 0, 'pay_type': 1, 'coupon_total': 10.0, 'delivery_type': 1, 'area_code': 'A2018012300007', 'area_name': 'Ñô¹âÀïÒ»ÆÚ', 'room_code': '20180124018101', 'room_full_name': '1ºÅÂ¥-1-100', 'act_total': 0.0}]
2020-06-13 10:01:31,302 1491 WARNING failed to parse line 7
2020-06-13 10:01:31,303 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 464, in send_event
    event = self.get_event(record)
  File "format_importer.py", line 412, in __get_event_from_record
    raise Exception('cannot find event[%s] in record[%s]' % (self.args.event_from, record))
Exception: cannot find event[cb_sc_sale_orde] in record[{'bill_no': '347522058792984576C1', 'bill_status': '02', 'owner_code': '*2019102509330043759', 'owner_name': '6262_yz', 'should_pay_total': 21.9, 'discount_total': 0.0, 'real_pay_total': 11.9, 'spu_count': 1, 'created_time': datetime.datetime(2019, 10, 25, 9, 35, 26), 'pay_click_time': datetime.datetime(2019, 10, 25, 9, 35, 26), 'paid_time': datetime.datetime(2019, 10, 25, 9, 35, 39), 'is_point_used': 0, 'used_point': 0, 'pay_type': 1, 'coupon_total': 10.0, 'delivery_type': 1, 'area_code': 'A2018012300007', 'area_name': 'Ñô¹âÀïÒ»ÆÚ', 'room_code': '20180124000277', 'room_full_name': '1ºÅÂ¥-1-102', 'act_total': 0.0}]

2020-06-13 10:01:31,304 1493 WARNING cannot find event[cb_sc_sale_orde] in record[{'bill_no': '347522058792984576C1', 'bill_status': '02', 'owner_code': '*2019102509330043759', 'owner_name': '6262_yz', 'should_pay_total': 21.9, 'discount_total': 0.0, 'real_pay_total': 11.9, 'spu_count': 1, 'created_time': datetime.datetime(2019, 10, 25, 9, 35, 26), 'pay_click_time': datetime.datetime(2019, 10, 25, 9, 35, 26), 'paid_time': datetime.datetime(2019, 10, 25, 9, 35, 39), 'is_point_used': 0, 'used_point': 0, 'pay_type': 1, 'coupon_total': 10.0, 'delivery_type': 1, 'area_code': 'A2018012300007', 'area_name': 'Ñô¹âÀïÒ»ÆÚ', 'room_code': '20180124000277', 'room_full_name': '1ºÅÂ¥-1-102', 'act_total': 0.0}]
2020-06-13 10:01:31,306 1491 WARNING failed to parse line 8
2020-06-13 10:01:31,306 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 464, in send_event
    event = self.get_event(record)
  File "format_importer.py", line 412, in __get_event_from_record
    raise Exception('cannot find event[%s] in record[%s]' % (self.args.event_from, record))
Exception: cannot find event[cb_sc_sale_orde] in record[{'bill_no': '347523662065688576C1', 'bill_status': '02', 'owner_code': '*2019102509391350666', 'owner_name': '2351_yz', 'should_pay_total': 20.9, 'discount_total': 0.0, 'real_pay_total': 10.9, 'spu_count': 1, 'created_time': datetime.datetime(2019, 10, 25, 9, 41, 48), 'pay_click_time': datetime.datetime(2019, 10, 25, 9, 41, 48), 'paid_time': datetime.datetime(2019, 10, 25, 9, 42, 13), 'is_point_used': 0, 'used_point': 0, 'pay_type': 1, 'coupon_total': 10.0, 'delivery_type': 1, 'area_code': 'A2018012300007', 'area_name': 'Ñô¹âÀïÒ»ÆÚ', 'room_code': '20180124018101', 'room_full_name': '1ºÅÂ¥-1-100', 'act_total': 0.0}]

2020-06-13 10:01:31,307 1493 WARNING cannot find event[cb_sc_sale_orde] in record[{'bill_no': '347523662065688576C1', 'bill_status': '02', 'owner_code': '*2019102509391350666', 'owner_name': '2351_yz', 'should_pay_total': 20.9, 'discount_total': 0.0, 'real_pay_total': 10.9, 'spu_count': 1, 'created_time': datetime.datetime(2019, 10, 25, 9, 41, 48), 'pay_click_time': datetime.datetime(2019, 10, 25, 9, 41, 48), 'paid_time': datetime.datetime(2019, 10, 25, 9, 42, 13), 'is_point_used': 0, 'used_point': 0, 'pay_type': 1, 'coupon_total': 10.0, 'delivery_type': 1, 'area_code': 'A2018012300007', 'area_name': 'Ñô¹âÀïÒ»ÆÚ', 'room_code': '20180124018101', 'room_full_name': '1ºÅÂ¥-1-100', 'act_total': 0.0}]
2020-06-13 10:01:31,308 1491 WARNING failed to parse line 9
2020-06-13 10:01:31,308 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 464, in send_event
    event = self.get_event(record)
  File "format_importer.py", line 412, in __get_event_from_record
    raise Exception('cannot find event[%s] in record[%s]' % (self.args.event_from, record))
Exception: cannot find event[cb_sc_sale_orde] in record[{'bill_no': '347523916353757184C1', 'bill_status': '02', 'owner_code': '*2018051009472155308', 'owner_name': '9290_yz', 'should_pay_total': 12.9, 'discount_total': 0.0, 'real_pay_total': 2.9, 'spu_count': 1, 'created_time': datetime.datetime(2019, 10, 25, 9, 42, 49), 'pay_click_time': datetime.datetime(2019, 10, 25, 9, 43, 28), 'paid_time': datetime.datetime(2019, 10, 25, 9, 43, 36), 'is_point_used': 0, 'used_point': 0, 'pay_type': 0, 'coupon_total': 10.0, 'delivery_type': 1, 'area_code': 'A2018012300025', 'area_name': '»¨°éÀïÒ»ÆÚ', 'room_code': '20180124018513', 'room_full_name': '4ºÅÂ¥-1-502', 'act_total': 0.0}]

2020-06-13 10:01:31,309 1493 WARNING cannot find event[cb_sc_sale_orde] in record[{'bill_no': '347523916353757184C1', 'bill_status': '02', 'owner_code': '*2018051009472155308', 'owner_name': '9290_yz', 'should_pay_total': 12.9, 'discount_total': 0.0, 'real_pay_total': 2.9, 'spu_count': 1, 'created_time': datetime.datetime(2019, 10, 25, 9, 42, 49), 'pay_click_time': datetime.datetime(2019, 10, 25, 9, 43, 28), 'paid_time': datetime.datetime(2019, 10, 25, 9, 43, 36), 'is_point_used': 0, 'used_point': 0, 'pay_type': 0, 'coupon_total': 10.0, 'delivery_type': 1, 'area_code': 'A2018012300025', 'area_name': '»¨°éÀïÒ»ÆÚ', 'room_code': '20180124018513', 'room_full_name': '4ºÅÂ¥-1-502', 'act_total': 0.0}]
2020-06-13 10:01:31,310 1491 WARNING failed to parse line 10
2020-06-13 10:01:31,317 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 464, in send_event
    event = self.get_event(record)
  File "format_importer.py", line 412, in __get_event_from_record
    raise Exception('cannot find event[%s] in record[%s]' % (self.args.event_from, record))
Exception: cannot find event[cb_sc_sale_orde] in record[{'bill_no': '347525460868456448C1', 'bill_status': '02', 'owner_code': '*2019102509424467275', 'owner_name': '1907_yz', 'should_pay_total': 21.9, 'discount_total': 0.0, 'real_pay_total': 11.9, 'spu_count': 1, 'created_time': datetime.datetime(2019, 10, 25, 9, 48, 57), 'pay_click_time': datetime.datetime(2019, 10, 25, 9, 48, 57), 'paid_time': datetime.datetime(2019, 10, 25, 9, 49, 16), 'is_point_used': 0, 'used_point': 0, 'pay_type': 1, 'coupon_total': 10.0, 'delivery_type': 1, 'area_code': 'A2018012300007', 'area_name': 'Ñô¹âÀïÒ»ÆÚ', 'room_code': '20180124000906', 'room_full_name': '5ºÅÂ¥-1-901', 'act_total': 0.0}]

2020-06-13 10:01:31,319 1493 WARNING cannot find event[cb_sc_sale_orde] in record[{'bill_no': '347525460868456448C1', 'bill_status': '02', 'owner_code': '*2019102509424467275', 'owner_name': '1907_yz', 'should_pay_total': 21.9, 'discount_total': 0.0, 'real_pay_total': 11.9, 'spu_count': 1, 'created_time': datetime.datetime(2019, 10, 25, 9, 48, 57), 'pay_click_time': datetime.datetime(2019, 10, 25, 9, 48, 57), 'paid_time': datetime.datetime(2019, 10, 25, 9, 49, 16), 'is_point_used': 0, 'used_point': 0, 'pay_type': 1, 'coupon_total': 10.0, 'delivery_type': 1, 'area_code': 'A2018012300007', 'area_name': 'Ñô¹âÀïÒ»ÆÚ', 'room_code': '20180124000906', 'room_full_name': '5ºÅÂ¥-1-901', 'act_total': 0.0}]
2020-06-13 10:01:31,320 1491 WARNING failed to parse line 11
2020-06-13 10:01:31,320 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 464, in send_event
    event = self.get_event(record)
  File "format_importer.py", line 412, in __get_event_from_record
    raise Exception('cannot find event[%s] in record[%s]' % (self.args.event_from, record))
Exception: cannot find event[cb_sc_sale_orde] in record[{'bill_no': '347526633109315584C1', 'bill_status': '02', 'owner_code': '*20180225002587', 'owner_name': '7027_yz', 'should_pay_total': 21.9, 'discount_total': 0.0, 'real_pay_total': 11.9, 'spu_count': 1, 'created_time': datetime.datetime(2019, 10, 25, 9, 53, 36), 'pay_click_time': datetime.datetime(2019, 10, 25, 9, 53, 36), 'paid_time': datetime.datetime(2019, 10, 25, 9, 53, 50), 'is_point_used': 0, 'used_point': 0, 'pay_type': 1, 'coupon_total': 10.0, 'delivery_type': 1, 'area_code': 'A2018012300012', 'area_name': '»´°²¿¤', 'room_code': '2019043206544', 'room_full_name': 'µØÉÏ³µÎ»-0-10', 'act_total': 0.0}]

2020-06-13 10:01:31,321 1493 WARNING cannot find event[cb_sc_sale_orde] in record[{'bill_no': '347526633109315584C1', 'bill_status': '02', 'owner_code': '*20180225002587', 'owner_name': '7027_yz', 'should_pay_total': 21.9, 'discount_total': 0.0, 'real_pay_total': 11.9, 'spu_count': 1, 'created_time': datetime.datetime(2019, 10, 25, 9, 53, 36), 'pay_click_time': datetime.datetime(2019, 10, 25, 9, 53, 36), 'paid_time': datetime.datetime(2019, 10, 25, 9, 53, 50), 'is_point_used': 0, 'used_point': 0, 'pay_type': 1, 'coupon_total': 10.0, 'delivery_type': 1, 'area_code': 'A2018012300012', 'area_name': '»´°²¿¤', 'room_code': '2019043206544', 'room_full_name': 'µØÉÏ³µÎ»-0-10', 'act_total': 0.0}]
2020-06-13 10:01:31,322 1491 WARNING failed to parse line 12
2020-06-13 10:01:31,323 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 464, in send_event
    event = self.get_event(record)
  File "format_importer.py", line 412, in __get_event_from_record
    raise Exception('cannot find event[%s] in record[%s]' % (self.args.event_from, record))
Exception: cannot find event[cb_sc_sale_orde] in record[{'bill_no': '347526715187650560C1', 'bill_status': '02', 'owner_code': '*2019071711440348171', 'owner_name': '8467_yz', 'should_pay_total': 12.9, 'discount_total': 0.0, 'real_pay_total': 2.9, 'spu_count': 1, 'created_time': datetime.datetime(2019, 10, 25, 9, 53, 56), 'pay_click_time': datetime.datetime(2019, 10, 25, 9, 53, 56), 'paid_time': datetime.datetime(2019, 10, 25, 9, 54, 7), 'is_point_used': 0, 'used_point': 0, 'pay_type': 1, 'coupon_total': 10.0, 'delivery_type': 1, 'area_code': 'A44', 'area_name': 'ÔÃ»ªÀï¶þÆÚ', 'room_code': 'YHLEQ212503', 'room_full_name': '2ºÅÂ¥-1-2503', 'act_total': 0.0}]

2020-06-13 10:01:31,324 1493 WARNING cannot find event[cb_sc_sale_orde] in record[{'bill_no': '347526715187650560C1', 'bill_status': '02', 'owner_code': '*2019071711440348171', 'owner_name': '8467_yz', 'should_pay_total': 12.9, 'discount_total': 0.0, 'real_pay_total': 2.9, 'spu_count': 1, 'created_time': datetime.datetime(2019, 10, 25, 9, 53, 56), 'pay_click_time': datetime.datetime(2019, 10, 25, 9, 53, 56), 'paid_time': datetime.datetime(2019, 10, 25, 9, 54, 7), 'is_point_used': 0, 'used_point': 0, 'pay_type': 1, 'coupon_total': 10.0, 'delivery_type': 1, 'area_code': 'A44', 'area_name': 'ÔÃ»ªÀï¶þÆÚ', 'room_code': 'YHLEQ212503', 'room_full_name': '2ºÅÂ¥-1-2503', 'act_total': 0.0}]
2020-06-13 10:01:31,325 1491 WARNING failed to parse line 13
2020-06-13 10:01:31,333 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 464, in send_event
    event = self.get_event(record)
  File "format_importer.py", line 412, in __get_event_from_record
    raise Exception('cannot find event[%s] in record[%s]' % (self.args.event_from, record))
Exception: cannot find event[cb_sc_sale_orde] in record[{'bill_no': '347528300768780288C1', 'bill_status': '02', 'owner_code': '*20180225015400', 'owner_name': '8659_yz', 'should_pay_total': 21.9, 'discount_total': 0.0, 'real_pay_total': 11.9, 'spu_count': 1, 'created_time': datetime.datetime(2019, 10, 25, 10, 0, 14), 'pay_click_time': datetime.datetime(2019, 10, 25, 10, 0, 14), 'paid_time': datetime.datetime(2019, 10, 25, 10, 0, 33), 'is_point_used': 0, 'used_point': 0, 'pay_type': 1, 'coupon_total': 10.0, 'delivery_type': 1, 'area_code': 'A2018012300001', 'area_name': 'µÏÉúÉ½×¯', 'room_code': '20180124018049', 'room_full_name': '1ºÅÂ¥-1-100', 'act_total': 0.0}]

2020-06-13 10:01:31,335 1493 WARNING cannot find event[cb_sc_sale_orde] in record[{'bill_no': '347528300768780288C1', 'bill_status': '02', 'owner_code': '*20180225015400', 'owner_name': '8659_yz', 'should_pay_total': 21.9, 'discount_total': 0.0, 'real_pay_total': 11.9, 'spu_count': 1, 'created_time': datetime.datetime(2019, 10, 25, 10, 0, 14), 'pay_click_time': datetime.datetime(2019, 10, 25, 10, 0, 14), 'paid_time': datetime.datetime(2019, 10, 25, 10, 0, 33), 'is_point_used': 0, 'used_point': 0, 'pay_type': 1, 'coupon_total': 10.0, 'delivery_type': 1, 'area_code': 'A2018012300001', 'area_name': 'µÏÉúÉ½×¯', 'room_code': '20180124018049', 'room_full_name': '1ºÅÂ¥-1-100', 'act_total': 0.0}]
2020-06-13 10:01:31,336 1491 WARNING failed to parse line 14
2020-06-13 10:01:31,336 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 464, in send_event
    event = self.get_event(record)
  File "format_importer.py", line 412, in __get_event_from_record
    raise Exception('cannot find event[%s] in record[%s]' % (self.args.event_from, record))
Exception: cannot find event[cb_sc_sale_orde] in record[{'bill_no': '347529526059196416C1', 'bill_status': '02', 'owner_code': '*2018060115095115463', 'owner_name': '9073_yz', 'should_pay_total': 21.9, 'discount_total': 0.0, 'real_pay_total': 11.9, 'spu_count': 1, 'created_time': datetime.datetime(2019, 10, 25, 10, 5, 6), 'pay_click_time': datetime.datetime(2019, 10, 25, 10, 5, 6), 'paid_time': datetime.datetime(2019, 10, 25, 10, 5, 17), 'is_point_used': 0, 'used_point': 0, 'pay_type': 1, 'coupon_total': 10.0, 'delivery_type': 1, 'area_code': 'A2018012300030', 'area_name': '¶«É½¿¤¶«Çø', 'room_code': '20180124020289', 'room_full_name': '1ºÅÂ¥-1-902', 'act_total': 0.0}]

2020-06-13 10:01:31,337 1493 WARNING cannot find event[cb_sc_sale_orde] in record[{'bill_no': '347529526059196416C1', 'bill_status': '02', 'owner_code': '*2018060115095115463', 'owner_name': '9073_yz', 'should_pay_total': 21.9, 'discount_total': 0.0, 'real_pay_total': 11.9, 'spu_count': 1, 'created_time': datetime.datetime(2019, 10, 25, 10, 5, 6), 'pay_click_time': datetime.datetime(2019, 10, 25, 10, 5, 6), 'paid_time': datetime.datetime(2019, 10, 25, 10, 5, 17), 'is_point_used': 0, 'used_point': 0, 'pay_type': 1, 'coupon_total': 10.0, 'delivery_type': 1, 'area_code': 'A2018012300030', 'area_name': '¶«É½¿¤¶«Çø', 'room_code': '20180124020289', 'room_full_name': '1ºÅÂ¥-1-902', 'act_total': 0.0}]
2020-06-13 10:01:31,338 1491 WARNING failed to parse line 15
2020-06-13 10:01:31,338 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 464, in send_event
    event = self.get_event(record)
  File "format_importer.py", line 412, in __get_event_from_record
    raise Exception('cannot find event[%s] in record[%s]' % (self.args.event_from, record))
Exception: cannot find event[cb_sc_sale_orde] in record[{'bill_no': '347530392765980672C1', 'bill_status': '02', 'owner_code': '*2019042321035928057', 'owner_name': '3669_yz', 'should_pay_total': 12.9, 'discount_total': 0.0, 'real_pay_total': 2.9, 'spu_count': 1, 'created_time': datetime.datetime(2019, 10, 25, 10, 8, 33), 'pay_click_time': datetime.datetime(2019, 10, 25, 10, 8, 33), 'paid_time': datetime.datetime(2019, 10, 25, 10, 8, 47), 'is_point_used': 0, 'used_point': 0, 'pay_type': 0, 'coupon_total': 10.0, 'delivery_type': 1, 'area_code': 'A2018012300016', 'area_name': '·ï»Ë½ð°¶', 'room_code': '20180124012067', 'room_full_name': '1ºÅÂ¥-1-2202', 'act_total': 0.0}]

2020-06-13 10:01:31,339 1493 WARNING cannot find event[cb_sc_sale_orde] in record[{'bill_no': '347530392765980672C1', 'bill_status': '02', 'owner_code': '*2019042321035928057', 'owner_name': '3669_yz', 'should_pay_total': 12.9, 'discount_total': 0.0, 'real_pay_total': 2.9, 'spu_count': 1, 'created_time': datetime.datetime(2019, 10, 25, 10, 8, 33), 'pay_click_time': datetime.datetime(2019, 10, 25, 10, 8, 33), 'paid_time': datetime.datetime(2019, 10, 25, 10, 8, 47), 'is_point_used': 0, 'used_point': 0, 'pay_type': 0, 'coupon_total': 10.0, 'delivery_type': 1, 'area_code': 'A2018012300016', 'area_name': '·ï»Ë½ð°¶', 'room_code': '20180124012067', 'room_full_name': '1ºÅÂ¥-1-2202', 'act_total': 0.0}]
2020-06-13 10:01:31,347 1491 WARNING failed to parse line 16
2020-06-13 10:01:31,348 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 464, in send_event
    event = self.get_event(record)
  File "format_importer.py", line 412, in __get_event_from_record
    raise Exception('cannot find event[%s] in record[%s]' % (self.args.event_from, record))
Exception: cannot find event[cb_sc_sale_orde] in record[{'bill_no': '347536313017688064C1', 'bill_status': '02', 'owner_code': '*2019102414593216043', 'owner_name': '8852_yz', 'should_pay_total': 19.9, 'discount_total': 0.0, 'real_pay_total': 9.9, 'spu_count': 1, 'created_time': datetime.datetime(2019, 10, 25, 10, 32, 4), 'pay_click_time': datetime.datetime(2019, 10, 25, 10, 32, 4), 'paid_time': datetime.datetime(2019, 10, 25, 10, 32, 18), 'is_point_used': 0, 'used_point': 0, 'pay_type': 0, 'coupon_total': 10.0, 'delivery_type': 1, 'area_code': 'A2018020800013', 'area_name': 'ÑÌÌ¨ÌìÉ½¿¤', 'room_code': '347000427137982464', 'room_full_name': '8ºÅÂ¥-1-1703', 'act_total': 0.0}]

2020-06-13 10:01:31,350 1493 WARNING cannot find event[cb_sc_sale_orde] in record[{'bill_no': '347536313017688064C1', 'bill_status': '02', 'owner_code': '*2019102414593216043', 'owner_name': '8852_yz', 'should_pay_total': 19.9, 'discount_total': 0.0, 'real_pay_total': 9.9, 'spu_count': 1, 'created_time': datetime.datetime(2019, 10, 25, 10, 32, 4), 'pay_click_time': datetime.datetime(2019, 10, 25, 10, 32, 4), 'paid_time': datetime.datetime(2019, 10, 25, 10, 32, 18), 'is_point_used': 0, 'used_point': 0, 'pay_type': 0, 'coupon_total': 10.0, 'delivery_type': 1, 'area_code': 'A2018020800013', 'area_name': 'ÑÌÌ¨ÌìÉ½¿¤', 'room_code': '347000427137982464', 'room_full_name': '8ºÅÂ¥-1-1703', 'act_total': 0.0}]
2020-06-13 10:01:31,351 1491 WARNING failed to parse line 17
2020-06-13 10:01:31,352 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 464, in send_event
    event = self.get_event(record)
  File "format_importer.py", line 412, in __get_event_from_record
    raise Exception('cannot find event[%s] in record[%s]' % (self.args.event_from, record))
Exception: cannot find event[cb_sc_sale_orde] in record[{'bill_no': '347539675423432704C1', 'bill_status': '02', 'owner_code': '*2019012415225926640', 'owner_name': '8542_yz', 'should_pay_total': 12.9, 'discount_total': 0.0, 'real_pay_total': 2.9, 'spu_count': 1, 'created_time': datetime.datetime(2019, 10, 25, 10, 45, 26), 'pay_click_time': datetime.datetime(2019, 10, 25, 10, 45, 26), 'paid_time': datetime.datetime(2019, 10, 25, 10, 45, 47), 'is_point_used': 0, 'used_point': 0, 'pay_type': 1, 'coupon_total': 10.0, 'delivery_type': 1, 'area_code': 'A2018012300016', 'area_name': '·ï»Ë½ð°¶', 'room_code': '20180124012003', 'room_full_name': '1ºÅÂ¥-1-101', 'act_total': 0.0}]

2020-06-13 10:01:31,353 1493 WARNING cannot find event[cb_sc_sale_orde] in record[{'bill_no': '347539675423432704C1', 'bill_status': '02', 'owner_code': '*2019012415225926640', 'owner_name': '8542_yz', 'should_pay_total': 12.9, 'discount_total': 0.0, 'real_pay_total': 2.9, 'spu_count': 1, 'created_time': datetime.datetime(2019, 10, 25, 10, 45, 26), 'pay_click_time': datetime.datetime(2019, 10, 25, 10, 45, 26), 'paid_time': datetime.datetime(2019, 10, 25, 10, 45, 47), 'is_point_used': 0, 'used_point': 0, 'pay_type': 1, 'coupon_total': 10.0, 'delivery_type': 1, 'area_code': 'A2018012300016', 'area_name': '·ï»Ë½ð°¶', 'room_code': '20180124012003', 'room_full_name': '1ºÅÂ¥-1-101', 'act_total': 0.0}]
2020-06-13 10:01:31,354 1491 WARNING failed to parse line 18
2020-06-13 10:01:31,355 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 464, in send_event
    event = self.get_event(record)
  File "format_importer.py", line 412, in __get_event_from_record
    raise Exception('cannot find event[%s] in record[%s]' % (self.args.event_from, record))
Exception: cannot find event[cb_sc_sale_orde] in record[{'bill_no': '347540568105541632C1', 'bill_status': '02', 'owner_code': '*2019102510085864875', 'owner_name': '2049_yz', 'should_pay_total': 12.9, 'discount_total': 0.0, 'real_pay_total': 2.9, 'spu_count': 1, 'created_time': datetime.datetime(2019, 10, 25, 10, 48, 59), 'pay_click_time': datetime.datetime(2019, 10, 25, 10, 48, 59), 'paid_time': datetime.datetime(2019, 10, 25, 10, 49, 32), 'is_point_used': 0, 'used_point': 0, 'pay_type': 1, 'coupon_total': 10.0, 'delivery_type': 1, 'area_code': 'A2018012300007', 'area_name': 'Ñô¹âÀïÒ»ÆÚ', 'room_code': '20180124001102', 'room_full_name': '6ºÅÂ¥-1-2205', 'act_total': 0.0}]

2020-06-13 10:01:31,355 1493 WARNING cannot find event[cb_sc_sale_orde] in record[{'bill_no': '347540568105541632C1', 'bill_status': '02', 'owner_code': '*2019102510085864875', 'owner_name': '2049_yz', 'should_pay_total': 12.9, 'discount_total': 0.0, 'real_pay_total': 2.9, 'spu_count': 1, 'created_time': datetime.datetime(2019, 10, 25, 10, 48, 59), 'pay_click_time': datetime.datetime(2019, 10, 25, 10, 48, 59), 'paid_time': datetime.datetime(2019, 10, 25, 10, 49, 32), 'is_point_used': 0, 'used_point': 0, 'pay_type': 1, 'coupon_total': 10.0, 'delivery_type': 1, 'area_code': 'A2018012300007', 'area_name': 'Ñô¹âÀïÒ»ÆÚ', 'room_code': '20180124001102', 'room_full_name': '6ºÅÂ¥-1-2205', 'act_total': 0.0}]
2020-06-13 10:01:31,363 1491 WARNING failed to parse line 19
2020-06-13 10:01:31,364 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 464, in send_event
    event = self.get_event(record)
  File "format_importer.py", line 412, in __get_event_from_record
    raise Exception('cannot find event[%s] in record[%s]' % (self.args.event_from, record))
Exception: cannot find event[cb_sc_sale_orde] in record[{'bill_no': '347541320643371008C1', 'bill_status': '02', 'owner_code': '*20180225013236', 'owner_name': '2225_yz', 'should_pay_total': 21.9, 'discount_total': 0.0, 'real_pay_total': 11.9, 'spu_count': 1, 'created_time': datetime.datetime(2019, 10, 25, 10, 51, 58), 'pay_click_time': datetime.datetime(2019, 10, 25, 10, 51, 59), 'paid_time': datetime.datetime(2019, 10, 25, 10, 52, 11), 'is_point_used': 0, 'used_point': 0, 'pay_type': 1, 'coupon_total': 10.0, 'delivery_type': 1, 'area_code': 'A2018012300007', 'area_name': 'Ñô¹âÀïÒ»ÆÚ', 'room_code': '20180124000972', 'room_full_name': '5ºÅÂ¥-1-2503', 'act_total': 0.0}]

2020-06-13 10:01:31,366 1493 WARNING cannot find event[cb_sc_sale_orde] in record[{'bill_no': '347541320643371008C1', 'bill_status': '02', 'owner_code': '*20180225013236', 'owner_name': '2225_yz', 'should_pay_total': 21.9, 'discount_total': 0.0, 'real_pay_total': 11.9, 'spu_count': 1, 'created_time': datetime.datetime(2019, 10, 25, 10, 51, 58), 'pay_click_time': datetime.datetime(2019, 10, 25, 10, 51, 59), 'paid_time': datetime.datetime(2019, 10, 25, 10, 52, 11), 'is_point_used': 0, 'used_point': 0, 'pay_type': 1, 'coupon_total': 10.0, 'delivery_type': 1, 'area_code': 'A2018012300007', 'area_name': 'Ñô¹âÀïÒ»ÆÚ', 'room_code': '20180124000972', 'room_full_name': '5ºÅÂ¥-1-2503', 'act_total': 0.0}]
2020-06-13 10:01:31,367 1491 WARNING failed to parse line 20
2020-06-13 10:01:31,368 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 464, in send_event
    event = self.get_event(record)
  File "format_importer.py", line 412, in __get_event_from_record
    raise Exception('cannot find event[%s] in record[%s]' % (self.args.event_from, record))
Exception: cannot find event[cb_sc_sale_orde] in record[{'bill_no': '347541311101329408C1', 'bill_status': '02', 'owner_code': '*2018053010075485172', 'owner_name': '7772_yz', 'should_pay_total': 21.9, 'discount_total': 0.0, 'real_pay_total': 11.9, 'spu_count': 1, 'created_time': datetime.datetime(2019, 10, 25, 10, 51, 56), 'pay_click_time': datetime.datetime(2019, 10, 25, 10, 52, 37), 'paid_time': datetime.datetime(2019, 10, 25, 10, 53, 22), 'is_point_used': 0, 'used_point': 0, 'pay_type': 1, 'coupon_total': 10.0, 'delivery_type': 1, 'area_code': 'A2018012300007', 'area_name': 'Ñô¹âÀïÒ»ÆÚ', 'room_code': '20180124018101', 'room_full_name': '1ºÅÂ¥-1-100', 'act_total': 0.0}]

2020-06-13 10:01:31,369 1493 WARNING cannot find event[cb_sc_sale_orde] in record[{'bill_no': '347541311101329408C1', 'bill_status': '02', 'owner_code': '*2018053010075485172', 'owner_name': '7772_yz', 'should_pay_total': 21.9, 'discount_total': 0.0, 'real_pay_total': 11.9, 'spu_count': 1, 'created_time': datetime.datetime(2019, 10, 25, 10, 51, 56), 'pay_click_time': datetime.datetime(2019, 10, 25, 10, 52, 37), 'paid_time': datetime.datetime(2019, 10, 25, 10, 53, 22), 'is_point_used': 0, 'used_point': 0, 'pay_type': 1, 'coupon_total': 10.0, 'delivery_type': 1, 'area_code': 'A2018012300007', 'area_name': 'Ñô¹âÀïÒ»ÆÚ', 'room_code': '20180124018101', 'room_full_name': '1ºÅÂ¥-1-100', 'act_total': 0.0}]
2020-06-13 10:01:31,370 1195 INFO end import from mysql.
2020-06-13 10:01:31,370 1505 INFO counter = {'total_write': 0, 'total_read': 20, 'error': 20, 'skip': 0, 'total': 20}.
2020-06-13 10:01:31,371 1507 INFO --debug ²ÎÊýÊ±²»»áÕæÕýµ¼ÈëÊý¾Ý
2020-06-13 10:01:32,085 1445 DEBUG args: {'bool_property_list': None,
 'case_sensitive': True,
 'db': 'sqyn_sc',
 'debug': True,
 'distinct_id_from': 'owner_code',
 'event_default': 'cb_sc_sale_return_sku',
 'event_from': None,
 'filename': None,
 'host': '10.18.226.58',
 'is_login': False,
 'output_file': None,
 'password': 'Hisense,123',
 'port': 3100,
 'project': None,
 'quit_on_error': False,
 'skip_cnt': 0,
 'sql': 'SELECT '
        'bill_no_return,sku_no,bill_no,sub_bill_no,bill_status_return,owner_code,owner_name,shop_code,shop_name,spu_code,spu_name,sku_price,return_count,return_real_total,return_total,return_time,created_time,real_return_count,created_user,updated_user,audit_time,order_area_code,order_area_name '
        'FROM cb_sc_sale_return_sku WHERE '
        "DATE_FORMAT(return_time,'%%y-%%m-%%d')=DATE_SUB(CURDATE(),INTERVAL 1 "
        'DAY) ORDER BY return_time limit 5;',
 'subparser_name': 'mysql_event',
 'timestamp_default': None,
 'timestamp_format': '%Y-%m-%d %H:%M:%S',
 'timestamp_from': 'return_time',
 'url': 'https://testsensorsapi.juhaolian.cn/sa?project=default&token=schemaLimited-xTvWlzDD',
 'user': 'root'}
2020-06-13 10:01:32,522 1108 INFO start importing from mysql, sql=SELECT bill_no_return,sku_no,bill_no,sub_bill_no,bill_status_return,owner_code,owner_name,shop_code,shop_name,spu_code,spu_name,sku_price,return_count,return_real_total,return_total,return_time,created_time,real_return_count,created_user,updated_user,audit_time,order_area_code,order_area_name FROM cb_sc_sale_return_sku WHERE DATE_FORMAT(return_time,'%%y-%%m-%%d')=DATE_SUB(CURDATE(),INTERVAL 1 DAY) ORDER BY return_time limit 5;
2020-06-13 10:01:32,528 186 DEBUG debug url: https://testsensorsapi.juhaolian.cn/debug?project=default&token=schemaLimited-xTvWlzDD
2020-06-13 10:01:32,624 189 DEBUG response: Sensors Analytics is ready to receive your data!
2020-06-13 10:01:32,624 1456 INFO running debug mode
2020-06-13 10:02:42,801 1445 DEBUG args: {'bool_property_list': None,
 'case_sensitive': True,
 'db': 'sqyn_sc',
 'debug': True,
 'distinct_id_from': 'owner_code',
 'event_default': 'cb_sc_sale_orde',
 'event_from': None,
 'filename': None,
 'host': '10.18.226.58',
 'is_login': False,
 'output_file': None,
 'password': 'Hisense,123',
 'port': 3100,
 'project': None,
 'quit_on_error': False,
 'skip_cnt': 0,
 'sql': 'SELECT '
        'bill_no,bill_status,owner_code,owner_name,should_pay_total,discount_total,real_pay_total,spu_count,created_time,pay_click_time,paid_time,is_point_used,used_point,pay_type,cancelled_time,coupon_total,delivery_type,area_code,area_name,room_code,room_full_name,act_total '
        'FROM cb_sc_sale_order WHERE '
        "DATE(paid_time)=DATE_SUB('2019-10-26',INTERVAL 1 DAY) ORDER BY "
        'paid_time LIMIT 20;',
 'subparser_name': 'mysql_event',
 'timestamp_default': None,
 'timestamp_format': '%Y-%m-%d %H:%M:%S',
 'timestamp_from': 'paid_time',
 'url': 'https://testsensorsapi.juhaolian.cn/sa?project=default&token=schemaLimited-xTvWlzDD',
 'user': 'root'}
2020-06-13 10:02:43,620 1108 INFO start importing from mysql, sql=SELECT bill_no,bill_status,owner_code,owner_name,should_pay_total,discount_total,real_pay_total,spu_count,created_time,pay_click_time,paid_time,is_point_used,used_point,pay_type,cancelled_time,coupon_total,delivery_type,area_code,area_name,room_code,room_full_name,act_total FROM cb_sc_sale_order WHERE DATE(paid_time)=DATE_SUB('2019-10-26',INTERVAL 1 DAY) ORDER BY paid_time LIMIT 20;
2020-06-13 10:02:43,621 186 DEBUG debug url: https://testsensorsapi.juhaolian.cn/debug?project=default&token=schemaLimited-xTvWlzDD
2020-06-13 10:02:43,719 189 DEBUG response: Sensors Analytics is ready to receive your data!
2020-06-13 10:02:43,720 1456 INFO running debug mode
2020-06-13 10:02:43,721 1479 INFO progress 0.00% {'total_write': 0, 'total_read': 0, 'error': 0, 'skip': 0, 'total': 20}
2020-06-13 10:02:45,944 1195 INFO end import from mysql.
2020-06-13 10:02:45,947 1505 INFO counter = {'total_write': 20, 'total_read': 20, 'error': 0, 'skip': 0, 'total': 20}.
2020-06-13 10:02:45,948 1507 INFO --debug ²ÎÊýÊ±²»»áÕæÕýµ¼ÈëÊý¾Ý
2020-06-13 10:02:46,649 1445 DEBUG args: {'bool_property_list': None,
 'case_sensitive': True,
 'db': 'sqyn_sc',
 'debug': True,
 'distinct_id_from': 'owner_code',
 'event_default': 'cb_sc_sale_return_sku',
 'event_from': None,
 'filename': None,
 'host': '10.18.226.58',
 'is_login': False,
 'output_file': None,
 'password': 'Hisense,123',
 'port': 3100,
 'project': None,
 'quit_on_error': False,
 'skip_cnt': 0,
 'sql': 'SELECT '
        'bill_no_return,sku_no,bill_no,sub_bill_no,bill_status_return,owner_code,owner_name,shop_code,shop_name,spu_code,spu_name,sku_price,return_count,return_real_total,return_total,return_time,created_time,real_return_count,created_user,updated_user,audit_time,order_area_code,order_area_name '
        'FROM cb_sc_sale_return_sku WHERE '
        "DATE_FORMAT(return_time,'%%y-%%m-%%d')=DATE_SUB(CURDATE(),INTERVAL 1 "
        'DAY) ORDER BY return_time limit 5;',
 'subparser_name': 'mysql_event',
 'timestamp_default': None,
 'timestamp_format': '%Y-%m-%d %H:%M:%S',
 'timestamp_from': 'return_time',
 'url': 'https://testsensorsapi.juhaolian.cn/sa?project=default&token=schemaLimited-xTvWlzDD',
 'user': 'root'}
2020-06-13 10:02:47,041 1108 INFO start importing from mysql, sql=SELECT bill_no_return,sku_no,bill_no,sub_bill_no,bill_status_return,owner_code,owner_name,shop_code,shop_name,spu_code,spu_name,sku_price,return_count,return_real_total,return_total,return_time,created_time,real_return_count,created_user,updated_user,audit_time,order_area_code,order_area_name FROM cb_sc_sale_return_sku WHERE DATE_FORMAT(return_time,'%%y-%%m-%%d')=DATE_SUB(CURDATE(),INTERVAL 1 DAY) ORDER BY return_time limit 5;
2020-06-13 10:02:47,043 186 DEBUG debug url: https://testsensorsapi.juhaolian.cn/debug?project=default&token=schemaLimited-xTvWlzDD
2020-06-13 10:02:47,135 189 DEBUG response: Sensors Analytics is ready to receive your data!
2020-06-13 10:02:47,135 1456 INFO running debug mode
2020-06-13 10:03:17,247 1445 DEBUG args: {'bool_property_list': None,
 'case_sensitive': True,
 'db': 'sqyn_sc',
 'debug': True,
 'distinct_id_from': 'owner_code',
 'event_default': 'cb_sc_sale_orde',
 'event_from': None,
 'filename': None,
 'host': '10.18.226.58',
 'is_login': False,
 'output_file': None,
 'password': 'Hisense,123',
 'port': 3100,
 'project': None,
 'quit_on_error': False,
 'skip_cnt': 0,
 'sql': 'SELECT '
        'bill_no,bill_status,owner_code,owner_name,should_pay_total,discount_total,real_pay_total,spu_count,created_time,pay_click_time,paid_time,is_point_used,used_point,pay_type,cancelled_time,coupon_total,delivery_type,area_code,area_name,room_code,room_full_name,act_total '
        'FROM cb_sc_sale_order WHERE '
        'DATE(paid_time)=DATE_SUB(CURDATE(),INTERVAL 1 DAY) ORDER BY paid_time '
        'LIMIT 20;',
 'subparser_name': 'mysql_event',
 'timestamp_default': None,
 'timestamp_format': '%Y-%m-%d %H:%M:%S',
 'timestamp_from': 'paid_time',
 'url': 'https://testsensorsapi.juhaolian.cn/sa?project=default&token=schemaLimited-xTvWlzDD',
 'user': 'root'}
2020-06-13 10:03:17,740 1108 INFO start importing from mysql, sql=SELECT bill_no,bill_status,owner_code,owner_name,should_pay_total,discount_total,real_pay_total,spu_count,created_time,pay_click_time,paid_time,is_point_used,used_point,pay_type,cancelled_time,coupon_total,delivery_type,area_code,area_name,room_code,room_full_name,act_total FROM cb_sc_sale_order WHERE DATE(paid_time)=DATE_SUB(CURDATE(),INTERVAL 1 DAY) ORDER BY paid_time LIMIT 20;
2020-06-13 10:03:17,742 186 DEBUG debug url: https://testsensorsapi.juhaolian.cn/debug?project=default&token=schemaLimited-xTvWlzDD
2020-06-13 10:03:17,835 189 DEBUG response: Sensors Analytics is ready to receive your data!
2020-06-13 10:03:17,836 1456 INFO running debug mode
2020-06-13 10:03:18,550 1445 DEBUG args: {'bool_property_list': None,
 'case_sensitive': True,
 'db': 'sqyn_sc',
 'debug': True,
 'distinct_id_from': 'owner_code',
 'event_default': 'cb_sc_sale_return_sku',
 'event_from': None,
 'filename': None,
 'host': '10.18.226.58',
 'is_login': False,
 'output_file': None,
 'password': 'Hisense,123',
 'port': 3100,
 'project': None,
 'quit_on_error': False,
 'skip_cnt': 0,
 'sql': 'SELECT '
        'bill_no_return,sku_no,bill_no,sub_bill_no,bill_status_return,owner_code,owner_name,shop_code,shop_name,spu_code,spu_name,sku_price,return_count,return_real_total,return_total,return_time,created_time,real_return_count,created_user,updated_user,audit_time,order_area_code,order_area_name '
        'FROM cb_sc_sale_return_sku WHERE '
        "DATE_FORMAT(return_time,'%%y-%%m-%%d')=DATE_SUB(CURDATE(),INTERVAL 1 "
        'DAY) ORDER BY return_time limit 5;',
 'subparser_name': 'mysql_event',
 'timestamp_default': None,
 'timestamp_format': '%Y-%m-%d %H:%M:%S',
 'timestamp_from': 'return_time',
 'url': 'https://testsensorsapi.juhaolian.cn/sa?project=default&token=schemaLimited-xTvWlzDD',
 'user': 'root'}
2020-06-13 10:03:18,931 1108 INFO start importing from mysql, sql=SELECT bill_no_return,sku_no,bill_no,sub_bill_no,bill_status_return,owner_code,owner_name,shop_code,shop_name,spu_code,spu_name,sku_price,return_count,return_real_total,return_total,return_time,created_time,real_return_count,created_user,updated_user,audit_time,order_area_code,order_area_name FROM cb_sc_sale_return_sku WHERE DATE_FORMAT(return_time,'%%y-%%m-%%d')=DATE_SUB(CURDATE(),INTERVAL 1 DAY) ORDER BY return_time limit 5;
2020-06-13 10:03:18,934 186 DEBUG debug url: https://testsensorsapi.juhaolian.cn/debug?project=default&token=schemaLimited-xTvWlzDD
2020-06-13 10:03:19,034 189 DEBUG response: Sensors Analytics is ready to receive your data!
2020-06-13 10:03:19,035 1456 INFO running debug mode
2020-06-13 10:08:37,613 1445 DEBUG args: {'bool_property_list': None,
 'case_sensitive': True,
 'db': 'sqyn_sc',
 'debug': True,
 'distinct_id_from': 'owner_code',
 'event_default': 'cb_sc_sale_orde',
 'event_from': None,
 'filename': None,
 'host': '10.18.226.58',
 'is_login': False,
 'output_file': None,
 'password': 'Hisense,123',
 'port': 3100,
 'project': None,
 'quit_on_error': False,
 'skip_cnt': 0,
 'sql': 'SELECT '
        'bill_no,bill_status,owner_code,owner_name,should_pay_total,discount_total,real_pay_total,spu_count,created_time,pay_click_time,paid_time,is_point_used,used_point,pay_type,cancelled_time,coupon_total,delivery_type,area_code,area_name,room_code,room_full_name,act_total '
        'FROM cb_sc_sale_order ORDER BY paid_time',
 'subparser_name': 'mysql_event',
 'timestamp_default': None,
 'timestamp_format': '%Y-%m-%d %H:%M:%S',
 'timestamp_from': 'paid_time',
 'url': 'https://testsensorsapi.juhaolian.cn/sa?project=default&token=schemaLimited-xTvWlzDD',
 'user': 'root'}
2020-06-13 10:10:04,464 1445 DEBUG args: {'bool_property_list': None,
 'case_sensitive': True,
 'db': 'sqyn_sc',
 'debug': True,
 'distinct_id_from': 'owner_code',
 'event_default': 'cb_sc_sale_orde',
 'event_from': None,
 'filename': None,
 'host': '10.18.226.58',
 'is_login': False,
 'output_file': None,
 'password': 'Hisense,123',
 'port': 3100,
 'project': None,
 'quit_on_error': False,
 'skip_cnt': 0,
 'sql': 'SELECT '
        'bill_no,bill_status,owner_code,owner_name,should_pay_total,discount_total,real_pay_total,spu_count,created_time,pay_click_time,paid_time,is_point_used,used_point,pay_type,cancelled_time,coupon_total,delivery_type,area_code,area_name,room_code,room_full_name,act_total '
        'FROM cb_sc_sale_order ORDER BY paid_time limit 5;',
 'subparser_name': 'mysql_event',
 'timestamp_default': None,
 'timestamp_format': '%Y-%m-%d %H:%M:%S',
 'timestamp_from': 'paid_time',
 'url': 'https://testsensorsapi.juhaolian.cn/sa?project=default&token=schemaLimited-xTvWlzDD',
 'user': 'root'}
2020-06-13 10:10:05,141 1108 INFO start importing from mysql, sql=SELECT bill_no,bill_status,owner_code,owner_name,should_pay_total,discount_total,real_pay_total,spu_count,created_time,pay_click_time,paid_time,is_point_used,used_point,pay_type,cancelled_time,coupon_total,delivery_type,area_code,area_name,room_code,room_full_name,act_total FROM cb_sc_sale_order ORDER BY paid_time limit 5;
2020-06-13 10:10:05,143 186 DEBUG debug url: https://testsensorsapi.juhaolian.cn/debug?project=default&token=schemaLimited-xTvWlzDD
2020-06-13 10:10:05,245 189 DEBUG response: Sensors Analytics is ready to receive your data!
2020-06-13 10:10:05,246 1456 INFO running debug mode
2020-06-13 10:10:05,247 1479 INFO progress 0.00% {'total_write': 0, 'total_read': 0, 'error': 0, 'skip': 0, 'total': 5}
2020-06-13 10:10:05,248 1491 WARNING failed to parse line 1
2020-06-13 10:10:05,253 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 466, in send_event
    timestamp = self.get_timestamp(record)
  File "format_importer.py", line 422, in __get_timestamp_from_record
    raise Exception('cannot find timestamp[%s] in record[%s]' % (self.args.timestamp_from, record))
Exception: cannot find timestamp[paid_time] in record[{'bill_no': '314378825565970432C1', 'bill_status': '03', 'owner_code': '*2019061916231142038', 'owner_name': '7502_yz', 'should_pay_total': 0.01, 'discount_total': 0.0, 'real_pay_total': 0.01, 'spu_count': 1, 'created_time': datetime.datetime(2019, 7, 25, 22, 36, 3), 'pay_click_time': datetime.datetime(2019, 7, 25, 22, 59, 28), 'is_point_used': 0, 'used_point': 0, 'cancelled_time': datetime.datetime(2019, 7, 25, 23, 7, 1), 'coupon_total': 0.0, 'delivery_type': 1, 'area_code': 'A2018012300015', 'area_name': '¶«ÀéCSS', 'room_code': '20180124008775', 'room_full_name': 'WDºÅÂ¥1-1-1', 'act_total': 0.0}]

2020-06-13 10:10:05,256 1493 WARNING cannot find timestamp[paid_time] in record[{'bill_no': '314378825565970432C1', 'bill_status': '03', 'owner_code': '*2019061916231142038', 'owner_name': '7502_yz', 'should_pay_total': 0.01, 'discount_total': 0.0, 'real_pay_total': 0.01, 'spu_count': 1, 'created_time': datetime.datetime(2019, 7, 25, 22, 36, 3), 'pay_click_time': datetime.datetime(2019, 7, 25, 22, 59, 28), 'is_point_used': 0, 'used_point': 0, 'cancelled_time': datetime.datetime(2019, 7, 25, 23, 7, 1), 'coupon_total': 0.0, 'delivery_type': 1, 'area_code': 'A2018012300015', 'area_name': '¶«ÀéCSS', 'room_code': '20180124008775', 'room_full_name': 'WDºÅÂ¥1-1-1', 'act_total': 0.0}]
2020-06-13 10:10:05,267 1491 WARNING failed to parse line 2
2020-06-13 10:10:05,268 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 466, in send_event
    timestamp = self.get_timestamp(record)
  File "format_importer.py", line 422, in __get_timestamp_from_record
    raise Exception('cannot find timestamp[%s] in record[%s]' % (self.args.timestamp_from, record))
Exception: cannot find timestamp[paid_time] in record[{'bill_no': '314379102641692672C1', 'bill_status': '03', 'owner_code': '*2019052011454260295', 'owner_name': '3408_yz', 'should_pay_total': 0.02, 'discount_total': 0.0, 'real_pay_total': 0.02, 'spu_count': 2, 'created_time': datetime.datetime(2019, 7, 25, 22, 37, 9), 'pay_click_time': datetime.datetime(2019, 7, 25, 22, 37, 9), 'is_point_used': 0, 'used_point': 0, 'cancelled_time': datetime.datetime(2019, 7, 25, 22, 57, 48), 'coupon_total': 0.0, 'delivery_type': 1, 'area_code': 'A2018012300015', 'area_name': '¶«ÀéCSS', 'room_code': '123355', 'room_full_name': 'WDºÅÂ¥1-0-²âÊÔ·¿¼ä1', 'act_total': 0.0}]

2020-06-13 10:10:05,271 1493 WARNING cannot find timestamp[paid_time] in record[{'bill_no': '314379102641692672C1', 'bill_status': '03', 'owner_code': '*2019052011454260295', 'owner_name': '3408_yz', 'should_pay_total': 0.02, 'discount_total': 0.0, 'real_pay_total': 0.02, 'spu_count': 2, 'created_time': datetime.datetime(2019, 7, 25, 22, 37, 9), 'pay_click_time': datetime.datetime(2019, 7, 25, 22, 37, 9), 'is_point_used': 0, 'used_point': 0, 'cancelled_time': datetime.datetime(2019, 7, 25, 22, 57, 48), 'coupon_total': 0.0, 'delivery_type': 1, 'area_code': 'A2018012300015', 'area_name': '¶«ÀéCSS', 'room_code': '123355', 'room_full_name': 'WDºÅÂ¥1-0-²âÊÔ·¿¼ä1', 'act_total': 0.0}]
2020-06-13 10:10:05,272 1491 WARNING failed to parse line 3
2020-06-13 10:10:05,273 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 466, in send_event
    timestamp = self.get_timestamp(record)
  File "format_importer.py", line 422, in __get_timestamp_from_record
    raise Exception('cannot find timestamp[%s] in record[%s]' % (self.args.timestamp_from, record))
Exception: cannot find timestamp[paid_time] in record[{'bill_no': '314379190638190592C1', 'bill_status': '03', 'owner_code': '*2018122909483465412', 'owner_name': '5460_yz', 'should_pay_total': 0.01, 'discount_total': 0.0, 'real_pay_total': 0.01, 'spu_count': 1, 'created_time': datetime.datetime(2019, 7, 25, 22, 37, 30), 'pay_click_time': datetime.datetime(2019, 7, 25, 22, 37, 30), 'is_point_used': 0, 'used_point': 0, 'cancelled_time': datetime.datetime(2019, 7, 25, 23, 8), 'coupon_total': 0.0, 'delivery_type': 1, 'area_code': 'A2018012300015', 'area_name': '¶«ÀéCSS', 'room_code': '123355', 'room_full_name': 'WDºÅÂ¥1-0-²âÊÔ·¿¼ä1', 'act_total': 0.0}]

2020-06-13 10:10:05,274 1493 WARNING cannot find timestamp[paid_time] in record[{'bill_no': '314379190638190592C1', 'bill_status': '03', 'owner_code': '*2018122909483465412', 'owner_name': '5460_yz', 'should_pay_total': 0.01, 'discount_total': 0.0, 'real_pay_total': 0.01, 'spu_count': 1, 'created_time': datetime.datetime(2019, 7, 25, 22, 37, 30), 'pay_click_time': datetime.datetime(2019, 7, 25, 22, 37, 30), 'is_point_used': 0, 'used_point': 0, 'cancelled_time': datetime.datetime(2019, 7, 25, 23, 8), 'coupon_total': 0.0, 'delivery_type': 1, 'area_code': 'A2018012300015', 'area_name': '¶«ÀéCSS', 'room_code': '123355', 'room_full_name': 'WDºÅÂ¥1-0-²âÊÔ·¿¼ä1', 'act_total': 0.0}]
2020-06-13 10:10:05,275 1491 WARNING failed to parse line 4
2020-06-13 10:10:05,275 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 466, in send_event
    timestamp = self.get_timestamp(record)
  File "format_importer.py", line 422, in __get_timestamp_from_record
    raise Exception('cannot find timestamp[%s] in record[%s]' % (self.args.timestamp_from, record))
Exception: cannot find timestamp[paid_time] in record[{'bill_no': '314379481022439424C1', 'bill_status': '03', 'owner_code': '*2018122909483465412', 'owner_name': '5460_yz', 'should_pay_total': 0.01, 'discount_total': 0.0, 'real_pay_total': 0.01, 'spu_count': 1, 'created_time': datetime.datetime(2019, 7, 25, 22, 38, 39), 'pay_click_time': datetime.datetime(2019, 7, 25, 22, 38, 40), 'is_point_used': 0, 'used_point': 0, 'cancelled_time': datetime.datetime(2019, 7, 25, 23, 9, 2), 'coupon_total': 0.0, 'delivery_type': 1, 'area_code': 'A2018012300015', 'area_name': '¶«ÀéCSS', 'room_code': '123355', 'room_full_name': 'WDºÅÂ¥1-0-²âÊÔ·¿¼ä1', 'act_total': 0.0}]

2020-06-13 10:10:05,276 1493 WARNING cannot find timestamp[paid_time] in record[{'bill_no': '314379481022439424C1', 'bill_status': '03', 'owner_code': '*2018122909483465412', 'owner_name': '5460_yz', 'should_pay_total': 0.01, 'discount_total': 0.0, 'real_pay_total': 0.01, 'spu_count': 1, 'created_time': datetime.datetime(2019, 7, 25, 22, 38, 39), 'pay_click_time': datetime.datetime(2019, 7, 25, 22, 38, 40), 'is_point_used': 0, 'used_point': 0, 'cancelled_time': datetime.datetime(2019, 7, 25, 23, 9, 2), 'coupon_total': 0.0, 'delivery_type': 1, 'area_code': 'A2018012300015', 'area_name': '¶«ÀéCSS', 'room_code': '123355', 'room_full_name': 'WDºÅÂ¥1-0-²âÊÔ·¿¼ä1', 'act_total': 0.0}]
2020-06-13 10:10:05,284 1491 WARNING failed to parse line 5
2020-06-13 10:10:05,286 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 466, in send_event
    timestamp = self.get_timestamp(record)
  File "format_importer.py", line 422, in __get_timestamp_from_record
    raise Exception('cannot find timestamp[%s] in record[%s]' % (self.args.timestamp_from, record))
Exception: cannot find timestamp[paid_time] in record[{'bill_no': '314379586630819840C1', 'bill_status': '03', 'owner_code': '*2019052011454260295', 'owner_name': '3408_yz', 'should_pay_total': 0.01, 'discount_total': 0.0, 'real_pay_total': 0.01, 'spu_count': 1, 'created_time': datetime.datetime(2019, 7, 25, 22, 39, 5), 'pay_click_time': datetime.datetime(2019, 7, 25, 22, 39, 5), 'is_point_used': 0, 'used_point': 0, 'cancelled_time': datetime.datetime(2019, 7, 25, 22, 57, 44), 'coupon_total': 0.0, 'delivery_type': 1, 'area_code': 'A2018012300015', 'area_name': '¶«ÀéCSS', 'room_code': '123355', 'room_full_name': 'WDºÅÂ¥1-0-²âÊÔ·¿¼ä1', 'act_total': 0.0}]

2020-06-13 10:10:05,287 1493 WARNING cannot find timestamp[paid_time] in record[{'bill_no': '314379586630819840C1', 'bill_status': '03', 'owner_code': '*2019052011454260295', 'owner_name': '3408_yz', 'should_pay_total': 0.01, 'discount_total': 0.0, 'real_pay_total': 0.01, 'spu_count': 1, 'created_time': datetime.datetime(2019, 7, 25, 22, 39, 5), 'pay_click_time': datetime.datetime(2019, 7, 25, 22, 39, 5), 'is_point_used': 0, 'used_point': 0, 'cancelled_time': datetime.datetime(2019, 7, 25, 22, 57, 44), 'coupon_total': 0.0, 'delivery_type': 1, 'area_code': 'A2018012300015', 'area_name': '¶«ÀéCSS', 'room_code': '123355', 'room_full_name': 'WDºÅÂ¥1-0-²âÊÔ·¿¼ä1', 'act_total': 0.0}]
2020-06-13 10:10:05,288 1195 INFO end import from mysql.
2020-06-13 10:10:05,289 1505 INFO counter = {'total_write': 0, 'total_read': 5, 'error': 5, 'skip': 0, 'total': 5}.
2020-06-13 10:10:05,289 1507 INFO --debug ²ÎÊýÊ±²»»áÕæÕýµ¼ÈëÊý¾Ý
2020-06-13 10:10:05,983 1445 DEBUG args: {'bool_property_list': None,
 'case_sensitive': True,
 'db': 'sqyn_sc',
 'debug': True,
 'distinct_id_from': 'owner_code',
 'event_default': 'cb_sc_sale_return_sku',
 'event_from': None,
 'filename': None,
 'host': '10.18.226.58',
 'is_login': False,
 'output_file': None,
 'password': 'Hisense,123',
 'port': 3100,
 'project': None,
 'quit_on_error': False,
 'skip_cnt': 0,
 'sql': 'SELECT '
        'bill_no_return,sku_no,bill_no,sub_bill_no,bill_status_return,owner_code,owner_name,shop_code,shop_name,spu_code,spu_name,sku_price,return_count,return_real_total,return_total,return_time,created_time,real_return_count,created_user,updated_user,audit_time,order_area_code,order_area_name '
        'FROM cb_sc_sale_return_sku ORDER BY return_time limit 5;',
 'subparser_name': 'mysql_event',
 'timestamp_default': None,
 'timestamp_format': '%Y-%m-%d %H:%M:%S',
 'timestamp_from': 'return_time',
 'url': 'https://testsensorsapi.juhaolian.cn/sa?project=default&token=schemaLimited-xTvWlzDD',
 'user': 'root'}
2020-06-13 10:10:06,310 1108 INFO start importing from mysql, sql=SELECT bill_no_return,sku_no,bill_no,sub_bill_no,bill_status_return,owner_code,owner_name,shop_code,shop_name,spu_code,spu_name,sku_price,return_count,return_real_total,return_total,return_time,created_time,real_return_count,created_user,updated_user,audit_time,order_area_code,order_area_name FROM cb_sc_sale_return_sku ORDER BY return_time limit 5;
2020-06-13 10:10:06,311 186 DEBUG debug url: https://testsensorsapi.juhaolian.cn/debug?project=default&token=schemaLimited-xTvWlzDD
2020-06-13 10:10:06,393 189 DEBUG response: Sensors Analytics is ready to receive your data!
2020-06-13 10:10:06,394 1456 INFO running debug mode
2020-06-13 10:10:06,394 1479 INFO progress 0.00% {'total_write': 0, 'total_read': 0, 'error': 0, 'skip': 0, 'total': 5}
2020-06-13 10:10:06,396 1491 WARNING failed to parse line 1
2020-06-13 10:10:06,406 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 466, in send_event
    timestamp = self.get_timestamp(record)
  File "format_importer.py", line 422, in __get_timestamp_from_record
    raise Exception('cannot find timestamp[%s] in record[%s]' % (self.args.timestamp_from, record))
Exception: cannot find timestamp[return_time] in record[{'bill_no_return': '314386926905831424C3', 'sku_no': '314377770010648576', 'bill_no': '314386705928925184C1', 'sub_bill_no': '314386737688195072C2', 'bill_status_return': '06', 'owner_code': '*2019052011454260295', 'owner_name': '3408_yz', 'shop_code': '314373898500284416', 'shop_name': 'ÐÅÎÒ¼Ò¶«ÀéµêÆÌ', 'spu_code': '314377769717047296', 'spu_name': '²ÝÝ®', 'sku_price': 0.01, 'return_count': 1, 'return_real_total': 0.01, 'return_total': 0.01, 'created_time': datetime.datetime(2019, 7, 25, 23, 8, 15), 'real_return_count': 0, 'created_user': '*2019052011454260295', 'updated_user': '2019052011454260295', 'order_area_code': 'A2018012300015', 'order_area_name': '¶«ÀéCSS'}]

2020-06-13 10:10:06,410 1493 WARNING cannot find timestamp[return_time] in record[{'bill_no_return': '314386926905831424C3', 'sku_no': '314377770010648576', 'bill_no': '314386705928925184C1', 'sub_bill_no': '314386737688195072C2', 'bill_status_return': '06', 'owner_code': '*2019052011454260295', 'owner_name': '3408_yz', 'shop_code': '314373898500284416', 'shop_name': 'ÐÅÎÒ¼Ò¶«ÀéµêÆÌ', 'spu_code': '314377769717047296', 'spu_name': '²ÝÝ®', 'sku_price': 0.01, 'return_count': 1, 'return_real_total': 0.01, 'return_total': 0.01, 'created_time': datetime.datetime(2019, 7, 25, 23, 8, 15), 'real_return_count': 0, 'created_user': '*2019052011454260295', 'updated_user': '2019052011454260295', 'order_area_code': 'A2018012300015', 'order_area_name': '¶«ÀéCSS'}]
2020-06-13 10:10:06,413 1491 WARNING failed to parse line 2
2020-06-13 10:10:06,426 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 466, in send_event
    timestamp = self.get_timestamp(record)
  File "format_importer.py", line 422, in __get_timestamp_from_record
    raise Exception('cannot find timestamp[%s] in record[%s]' % (self.args.timestamp_from, record))
Exception: cannot find timestamp[return_time] in record[{'bill_no_return': '314386971839410176C3', 'sku_no': '314377770010648576', 'bill_no': '314386705928925184C1', 'sub_bill_no': '314386737688195072C2', 'bill_status_return': '06', 'owner_code': '*2019052011454260295', 'owner_name': '3408_yz', 'shop_code': '314373898500284416', 'shop_name': 'ÐÅÎÒ¼Ò¶«ÀéµêÆÌ', 'spu_code': '314377769717047296', 'spu_name': '²ÝÝ®', 'sku_price': 0.01, 'return_count': 1, 'return_real_total': 0.01, 'return_total': 0.01, 'created_time': datetime.datetime(2019, 7, 25, 23, 8, 25), 'real_return_count': 0, 'created_user': '*2019052011454260295', 'updated_user': '2019052011454260295', 'order_area_code': 'A2018012300015', 'order_area_name': '¶«ÀéCSS'}]

2020-06-13 10:10:06,433 1493 WARNING cannot find timestamp[return_time] in record[{'bill_no_return': '314386971839410176C3', 'sku_no': '314377770010648576', 'bill_no': '314386705928925184C1', 'sub_bill_no': '314386737688195072C2', 'bill_status_return': '06', 'owner_code': '*2019052011454260295', 'owner_name': '3408_yz', 'shop_code': '314373898500284416', 'shop_name': 'ÐÅÎÒ¼Ò¶«ÀéµêÆÌ', 'spu_code': '314377769717047296', 'spu_name': '²ÝÝ®', 'sku_price': 0.01, 'return_count': 1, 'return_real_total': 0.01, 'return_total': 0.01, 'created_time': datetime.datetime(2019, 7, 25, 23, 8, 25), 'real_return_count': 0, 'created_user': '*2019052011454260295', 'updated_user': '2019052011454260295', 'order_area_code': 'A2018012300015', 'order_area_name': '¶«ÀéCSS'}]
2020-06-13 10:10:06,434 1491 WARNING failed to parse line 3
2020-06-13 10:10:06,440 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 466, in send_event
    timestamp = self.get_timestamp(record)
  File "format_importer.py", line 422, in __get_timestamp_from_record
    raise Exception('cannot find timestamp[%s] in record[%s]' % (self.args.timestamp_from, record))
Exception: cannot find timestamp[return_time] in record[{'bill_no_return': '314387075375804416C3', 'sku_no': '314377770010648576', 'bill_no': '314386705928925184C1', 'sub_bill_no': '314386737688195072C2', 'bill_status_return': '02', 'owner_code': '*2019052011454260295', 'owner_name': '3408_yz', 'shop_code': '314373898500284416', 'shop_name': 'ÐÅÎÒ¼Ò¶«ÀéµêÆÌ', 'spu_code': '314377769717047296', 'spu_name': '²ÝÝ®', 'sku_price': 0.01, 'return_count': 1, 'return_real_total': 0.01, 'return_total': 0.01, 'created_time': datetime.datetime(2019, 7, 25, 23, 8, 50), 'real_return_count': 0, 'created_user': '*2019052011454260295', 'updated_user': '2019052011454260295', 'order_area_code': 'A2018012300015', 'order_area_name': '¶«ÀéCSS'}]

2020-06-13 10:10:06,447 1493 WARNING cannot find timestamp[return_time] in record[{'bill_no_return': '314387075375804416C3', 'sku_no': '314377770010648576', 'bill_no': '314386705928925184C1', 'sub_bill_no': '314386737688195072C2', 'bill_status_return': '02', 'owner_code': '*2019052011454260295', 'owner_name': '3408_yz', 'shop_code': '314373898500284416', 'shop_name': 'ÐÅÎÒ¼Ò¶«ÀéµêÆÌ', 'spu_code': '314377769717047296', 'spu_name': '²ÝÝ®', 'sku_price': 0.01, 'return_count': 1, 'return_real_total': 0.01, 'return_total': 0.01, 'created_time': datetime.datetime(2019, 7, 25, 23, 8, 50), 'real_return_count': 0, 'created_user': '*2019052011454260295', 'updated_user': '2019052011454260295', 'order_area_code': 'A2018012300015', 'order_area_name': '¶«ÀéCSS'}]
2020-06-13 10:10:06,449 1491 WARNING failed to parse line 4
2020-06-13 10:10:06,456 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 466, in send_event
    timestamp = self.get_timestamp(record)
  File "format_importer.py", line 422, in __get_timestamp_from_record
    raise Exception('cannot find timestamp[%s] in record[%s]' % (self.args.timestamp_from, record))
Exception: cannot find timestamp[return_time] in record[{'bill_no_return': '314389145671675904C3', 'sku_no': '314377770010648576', 'bill_no': '314386617882095616C1', 'sub_bill_no': '314386661465108480C2', 'bill_status_return': '02', 'owner_code': '*2019052011454260295', 'owner_name': '3408_yz', 'shop_code': '314373898500284416', 'shop_name': 'ÐÅÎÒ¼Ò¶«ÀéµêÆÌ', 'spu_code': '314377769717047296', 'spu_name': '²ÝÝ®', 'sku_price': 0.01, 'return_count': 1, 'return_real_total': 0.01, 'return_total': 0.01, 'created_time': datetime.datetime(2019, 7, 25, 23, 17, 4), 'real_return_count': 0, 'created_user': '*2019052011454260295', 'updated_user': '2019052011454260295', 'order_area_code': 'A2018012300015', 'order_area_name': '¶«ÀéCSS'}]

2020-06-13 10:10:06,461 1493 WARNING cannot find timestamp[return_time] in record[{'bill_no_return': '314389145671675904C3', 'sku_no': '314377770010648576', 'bill_no': '314386617882095616C1', 'sub_bill_no': '314386661465108480C2', 'bill_status_return': '02', 'owner_code': '*2019052011454260295', 'owner_name': '3408_yz', 'shop_code': '314373898500284416', 'shop_name': 'ÐÅÎÒ¼Ò¶«ÀéµêÆÌ', 'spu_code': '314377769717047296', 'spu_name': '²ÝÝ®', 'sku_price': 0.01, 'return_count': 1, 'return_real_total': 0.01, 'return_total': 0.01, 'created_time': datetime.datetime(2019, 7, 25, 23, 17, 4), 'real_return_count': 0, 'created_user': '*2019052011454260295', 'updated_user': '2019052011454260295', 'order_area_code': 'A2018012300015', 'order_area_name': '¶«ÀéCSS'}]
2020-06-13 10:10:06,462 1491 WARNING failed to parse line 5
2020-06-13 10:10:06,463 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 466, in send_event
    timestamp = self.get_timestamp(record)
  File "format_importer.py", line 422, in __get_timestamp_from_record
    raise Exception('cannot find timestamp[%s] in record[%s]' % (self.args.timestamp_from, record))
Exception: cannot find timestamp[return_time] in record[{'bill_no_return': '314614044780638208C3', 'sku_no': '314377770010648576', 'bill_no': '314609056725577728C1', 'sub_bill_no': '314609146638872576C2', 'bill_status_return': '02', 'owner_code': '*2019072613223338962', 'owner_name': '7660_yz', 'shop_code': '314373898500284416', 'shop_name': 'ÐÅÎÒ¼Ò¶«ÀéµêÆÌ', 'spu_code': '314377769717047296', 'spu_name': '²ÝÝ®', 'sku_price': 0.01, 'return_count': 1, 'return_real_total': 0.01, 'return_total': 0.01, 'created_time': datetime.datetime(2019, 7, 26, 14, 10, 44), 'real_return_count': 0, 'created_user': '*2019072613223338962', 'updated_user': '2019072613223338962', 'order_area_code': 'A20190121', 'order_area_name': 'ÐÂÑÐ·¢ÖÐÐÄ'}]

2020-06-13 10:10:06,464 1493 WARNING cannot find timestamp[return_time] in record[{'bill_no_return': '314614044780638208C3', 'sku_no': '314377770010648576', 'bill_no': '314609056725577728C1', 'sub_bill_no': '314609146638872576C2', 'bill_status_return': '02', 'owner_code': '*2019072613223338962', 'owner_name': '7660_yz', 'shop_code': '314373898500284416', 'shop_name': 'ÐÅÎÒ¼Ò¶«ÀéµêÆÌ', 'spu_code': '314377769717047296', 'spu_name': '²ÝÝ®', 'sku_price': 0.01, 'return_count': 1, 'return_real_total': 0.01, 'return_total': 0.01, 'created_time': datetime.datetime(2019, 7, 26, 14, 10, 44), 'real_return_count': 0, 'created_user': '*2019072613223338962', 'updated_user': '2019072613223338962', 'order_area_code': 'A20190121', 'order_area_name': 'ÐÂÑÐ·¢ÖÐÐÄ'}]
2020-06-13 10:10:06,470 1195 INFO end import from mysql.
2020-06-13 10:10:06,470 1505 INFO counter = {'total_write': 0, 'total_read': 5, 'error': 5, 'skip': 0, 'total': 5}.
2020-06-13 10:10:06,472 1507 INFO --debug ²ÎÊýÊ±²»»áÕæÕýµ¼ÈëÊý¾Ý
2020-06-13 10:11:05,292 1445 DEBUG args: {'bool_property_list': None,
 'case_sensitive': True,
 'db': 'sqyn_sc',
 'debug': True,
 'distinct_id_from': 'owner_code',
 'event_default': 'cb_sc_sale_orde',
 'event_from': None,
 'filename': None,
 'host': '10.18.226.58',
 'is_login': False,
 'output_file': None,
 'password': 'Hisense,123',
 'port': 3100,
 'project': None,
 'quit_on_error': False,
 'skip_cnt': 0,
 'sql': 'SELECT '
        'bill_no,bill_status,owner_code,owner_name,should_pay_total,discount_total,real_pay_total,spu_count,created_time,pay_click_time,paid_time,is_point_used,used_point,pay_type,cancelled_time,coupon_total,delivery_type,area_code,area_name,room_code,room_full_name,act_total '
        'FROM cb_sc_sale_order ORDER BY paid_time limit 2;',
 'subparser_name': 'mysql_event',
 'timestamp_default': None,
 'timestamp_format': '%Y-%m-%d %H:%M:%S',
 'timestamp_from': 'paid_time',
 'url': 'https://testsensorsapi.juhaolian.cn/sa?project=default&token=schemaLimited-xTvWlzDD',
 'user': 'root'}
2020-06-13 10:11:05,525 1108 INFO start importing from mysql, sql=SELECT bill_no,bill_status,owner_code,owner_name,should_pay_total,discount_total,real_pay_total,spu_count,created_time,pay_click_time,paid_time,is_point_used,used_point,pay_type,cancelled_time,coupon_total,delivery_type,area_code,area_name,room_code,room_full_name,act_total FROM cb_sc_sale_order ORDER BY paid_time limit 2;
2020-06-13 10:11:05,527 186 DEBUG debug url: https://testsensorsapi.juhaolian.cn/debug?project=default&token=schemaLimited-xTvWlzDD
2020-06-13 10:11:05,643 189 DEBUG response: Sensors Analytics is ready to receive your data!
2020-06-13 10:11:05,644 1456 INFO running debug mode
2020-06-13 10:11:05,644 1479 INFO progress 0.00% {'total_write': 0, 'total_read': 0, 'error': 0, 'skip': 0, 'total': 2}
2020-06-13 10:11:05,650 1491 WARNING failed to parse line 1
2020-06-13 10:11:05,652 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 466, in send_event
    timestamp = self.get_timestamp(record)
  File "format_importer.py", line 422, in __get_timestamp_from_record
    raise Exception('cannot find timestamp[%s] in record[%s]' % (self.args.timestamp_from, record))
Exception: cannot find timestamp[paid_time] in record[{'bill_no': '314378825565970432C1', 'bill_status': '03', 'owner_code': '*2019061916231142038', 'owner_name': '7502_yz', 'should_pay_total': 0.01, 'discount_total': 0.0, 'real_pay_total': 0.01, 'spu_count': 1, 'created_time': datetime.datetime(2019, 7, 25, 22, 36, 3), 'pay_click_time': datetime.datetime(2019, 7, 25, 22, 59, 28), 'is_point_used': 0, 'used_point': 0, 'cancelled_time': datetime.datetime(2019, 7, 25, 23, 7, 1), 'coupon_total': 0.0, 'delivery_type': 1, 'area_code': 'A2018012300015', 'area_name': '¶«ÀéCSS', 'room_code': '20180124008775', 'room_full_name': 'WDºÅÂ¥1-1-1', 'act_total': 0.0}]

2020-06-13 10:11:05,653 1493 WARNING cannot find timestamp[paid_time] in record[{'bill_no': '314378825565970432C1', 'bill_status': '03', 'owner_code': '*2019061916231142038', 'owner_name': '7502_yz', 'should_pay_total': 0.01, 'discount_total': 0.0, 'real_pay_total': 0.01, 'spu_count': 1, 'created_time': datetime.datetime(2019, 7, 25, 22, 36, 3), 'pay_click_time': datetime.datetime(2019, 7, 25, 22, 59, 28), 'is_point_used': 0, 'used_point': 0, 'cancelled_time': datetime.datetime(2019, 7, 25, 23, 7, 1), 'coupon_total': 0.0, 'delivery_type': 1, 'area_code': 'A2018012300015', 'area_name': '¶«ÀéCSS', 'room_code': '20180124008775', 'room_full_name': 'WDºÅÂ¥1-1-1', 'act_total': 0.0}]
2020-06-13 10:11:05,654 1491 WARNING failed to parse line 2
2020-06-13 10:11:05,654 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 466, in send_event
    timestamp = self.get_timestamp(record)
  File "format_importer.py", line 422, in __get_timestamp_from_record
    raise Exception('cannot find timestamp[%s] in record[%s]' % (self.args.timestamp_from, record))
Exception: cannot find timestamp[paid_time] in record[{'bill_no': '314379102641692672C1', 'bill_status': '03', 'owner_code': '*2019052011454260295', 'owner_name': '3408_yz', 'should_pay_total': 0.02, 'discount_total': 0.0, 'real_pay_total': 0.02, 'spu_count': 2, 'created_time': datetime.datetime(2019, 7, 25, 22, 37, 9), 'pay_click_time': datetime.datetime(2019, 7, 25, 22, 37, 9), 'is_point_used': 0, 'used_point': 0, 'cancelled_time': datetime.datetime(2019, 7, 25, 22, 57, 48), 'coupon_total': 0.0, 'delivery_type': 1, 'area_code': 'A2018012300015', 'area_name': '¶«ÀéCSS', 'room_code': '123355', 'room_full_name': 'WDºÅÂ¥1-0-²âÊÔ·¿¼ä1', 'act_total': 0.0}]

2020-06-13 10:11:05,662 1493 WARNING cannot find timestamp[paid_time] in record[{'bill_no': '314379102641692672C1', 'bill_status': '03', 'owner_code': '*2019052011454260295', 'owner_name': '3408_yz', 'should_pay_total': 0.02, 'discount_total': 0.0, 'real_pay_total': 0.02, 'spu_count': 2, 'created_time': datetime.datetime(2019, 7, 25, 22, 37, 9), 'pay_click_time': datetime.datetime(2019, 7, 25, 22, 37, 9), 'is_point_used': 0, 'used_point': 0, 'cancelled_time': datetime.datetime(2019, 7, 25, 22, 57, 48), 'coupon_total': 0.0, 'delivery_type': 1, 'area_code': 'A2018012300015', 'area_name': '¶«ÀéCSS', 'room_code': '123355', 'room_full_name': 'WDºÅÂ¥1-0-²âÊÔ·¿¼ä1', 'act_total': 0.0}]
2020-06-13 10:11:05,663 1195 INFO end import from mysql.
2020-06-13 10:11:05,665 1505 INFO counter = {'total_write': 0, 'total_read': 2, 'error': 2, 'skip': 0, 'total': 2}.
2020-06-13 10:11:05,666 1507 INFO --debug ²ÎÊýÊ±²»»áÕæÕýµ¼ÈëÊý¾Ý
2020-06-13 10:11:06,350 1445 DEBUG args: {'bool_property_list': None,
 'case_sensitive': True,
 'db': 'sqyn_sc',
 'debug': True,
 'distinct_id_from': 'owner_code',
 'event_default': 'cb_sc_sale_return_sku',
 'event_from': None,
 'filename': None,
 'host': '10.18.226.58',
 'is_login': False,
 'output_file': None,
 'password': 'Hisense,123',
 'port': 3100,
 'project': None,
 'quit_on_error': False,
 'skip_cnt': 0,
 'sql': 'SELECT '
        'bill_no_return,sku_no,bill_no,sub_bill_no,bill_status_return,owner_code,owner_name,shop_code,shop_name,spu_code,spu_name,sku_price,return_count,return_real_total,return_total,return_time,created_time,real_return_count,created_user,updated_user,audit_time,order_area_code,order_area_name '
        'FROM cb_sc_sale_return_sku ORDER BY return_time limit 2;',
 'subparser_name': 'mysql_event',
 'timestamp_default': None,
 'timestamp_format': '%Y-%m-%d %H:%M:%S',
 'timestamp_from': 'return_time',
 'url': 'https://testsensorsapi.juhaolian.cn/sa?project=default&token=schemaLimited-xTvWlzDD',
 'user': 'root'}
2020-06-13 10:11:06,604 1108 INFO start importing from mysql, sql=SELECT bill_no_return,sku_no,bill_no,sub_bill_no,bill_status_return,owner_code,owner_name,shop_code,shop_name,spu_code,spu_name,sku_price,return_count,return_real_total,return_total,return_time,created_time,real_return_count,created_user,updated_user,audit_time,order_area_code,order_area_name FROM cb_sc_sale_return_sku ORDER BY return_time limit 2;
2020-06-13 10:11:06,605 186 DEBUG debug url: https://testsensorsapi.juhaolian.cn/debug?project=default&token=schemaLimited-xTvWlzDD
2020-06-13 10:11:06,713 189 DEBUG response: Sensors Analytics is ready to receive your data!
2020-06-13 10:11:06,714 1456 INFO running debug mode
2020-06-13 10:11:06,714 1479 INFO progress 0.00% {'total_write': 0, 'total_read': 0, 'error': 0, 'skip': 0, 'total': 2}
2020-06-13 10:11:06,718 1491 WARNING failed to parse line 1
2020-06-13 10:11:06,724 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 466, in send_event
    timestamp = self.get_timestamp(record)
  File "format_importer.py", line 422, in __get_timestamp_from_record
    raise Exception('cannot find timestamp[%s] in record[%s]' % (self.args.timestamp_from, record))
Exception: cannot find timestamp[return_time] in record[{'bill_no_return': '314386926905831424C3', 'sku_no': '314377770010648576', 'bill_no': '314386705928925184C1', 'sub_bill_no': '314386737688195072C2', 'bill_status_return': '06', 'owner_code': '*2019052011454260295', 'owner_name': '3408_yz', 'shop_code': '314373898500284416', 'shop_name': 'ÐÅÎÒ¼Ò¶«ÀéµêÆÌ', 'spu_code': '314377769717047296', 'spu_name': '²ÝÝ®', 'sku_price': 0.01, 'return_count': 1, 'return_real_total': 0.01, 'return_total': 0.01, 'created_time': datetime.datetime(2019, 7, 25, 23, 8, 15), 'real_return_count': 0, 'created_user': '*2019052011454260295', 'updated_user': '2019052011454260295', 'order_area_code': 'A2018012300015', 'order_area_name': '¶«ÀéCSS'}]

2020-06-13 10:11:06,725 1493 WARNING cannot find timestamp[return_time] in record[{'bill_no_return': '314386926905831424C3', 'sku_no': '314377770010648576', 'bill_no': '314386705928925184C1', 'sub_bill_no': '314386737688195072C2', 'bill_status_return': '06', 'owner_code': '*2019052011454260295', 'owner_name': '3408_yz', 'shop_code': '314373898500284416', 'shop_name': 'ÐÅÎÒ¼Ò¶«ÀéµêÆÌ', 'spu_code': '314377769717047296', 'spu_name': '²ÝÝ®', 'sku_price': 0.01, 'return_count': 1, 'return_real_total': 0.01, 'return_total': 0.01, 'created_time': datetime.datetime(2019, 7, 25, 23, 8, 15), 'real_return_count': 0, 'created_user': '*2019052011454260295', 'updated_user': '2019052011454260295', 'order_area_code': 'A2018012300015', 'order_area_name': '¶«ÀéCSS'}]
2020-06-13 10:11:06,729 1491 WARNING failed to parse line 2
2020-06-13 10:11:06,733 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 466, in send_event
    timestamp = self.get_timestamp(record)
  File "format_importer.py", line 422, in __get_timestamp_from_record
    raise Exception('cannot find timestamp[%s] in record[%s]' % (self.args.timestamp_from, record))
Exception: cannot find timestamp[return_time] in record[{'bill_no_return': '314386971839410176C3', 'sku_no': '314377770010648576', 'bill_no': '314386705928925184C1', 'sub_bill_no': '314386737688195072C2', 'bill_status_return': '06', 'owner_code': '*2019052011454260295', 'owner_name': '3408_yz', 'shop_code': '314373898500284416', 'shop_name': 'ÐÅÎÒ¼Ò¶«ÀéµêÆÌ', 'spu_code': '314377769717047296', 'spu_name': '²ÝÝ®', 'sku_price': 0.01, 'return_count': 1, 'return_real_total': 0.01, 'return_total': 0.01, 'created_time': datetime.datetime(2019, 7, 25, 23, 8, 25), 'real_return_count': 0, 'created_user': '*2019052011454260295', 'updated_user': '2019052011454260295', 'order_area_code': 'A2018012300015', 'order_area_name': '¶«ÀéCSS'}]

2020-06-13 10:11:06,734 1493 WARNING cannot find timestamp[return_time] in record[{'bill_no_return': '314386971839410176C3', 'sku_no': '314377770010648576', 'bill_no': '314386705928925184C1', 'sub_bill_no': '314386737688195072C2', 'bill_status_return': '06', 'owner_code': '*2019052011454260295', 'owner_name': '3408_yz', 'shop_code': '314373898500284416', 'shop_name': 'ÐÅÎÒ¼Ò¶«ÀéµêÆÌ', 'spu_code': '314377769717047296', 'spu_name': '²ÝÝ®', 'sku_price': 0.01, 'return_count': 1, 'return_real_total': 0.01, 'return_total': 0.01, 'created_time': datetime.datetime(2019, 7, 25, 23, 8, 25), 'real_return_count': 0, 'created_user': '*2019052011454260295', 'updated_user': '2019052011454260295', 'order_area_code': 'A2018012300015', 'order_area_name': '¶«ÀéCSS'}]
2020-06-13 10:11:06,736 1195 INFO end import from mysql.
2020-06-13 10:11:06,737 1505 INFO counter = {'total_write': 0, 'total_read': 2, 'error': 2, 'skip': 0, 'total': 2}.
2020-06-13 10:11:06,742 1507 INFO --debug ²ÎÊýÊ±²»»áÕæÕýµ¼ÈëÊý¾Ý
2020-06-13 10:12:33,600 1445 DEBUG args: {'bool_property_list': None,
 'case_sensitive': True,
 'db': 'sqyn_sc',
 'debug': True,
 'distinct_id_from': 'owner_code',
 'event_default': 'cb_sc_sale_orde',
 'event_from': None,
 'filename': None,
 'host': '10.18.226.58',
 'is_login': False,
 'output_file': None,
 'password': 'Hisense,123',
 'port': 3100,
 'project': None,
 'quit_on_error': False,
 'skip_cnt': 0,
 'sql': 'SELECT '
        'bill_no,bill_status,owner_code,owner_name,should_pay_total,discount_total,real_pay_total,spu_count,created_time,pay_click_time,paid_time,is_point_used,used_point,pay_type,cancelled_time,coupon_total,delivery_type,area_code,area_name,room_code,room_full_name,act_total '
        'FROM cb_sc_sale_order ORDER BY paid_time limit 2;',
 'subparser_name': 'mysql_event',
 'timestamp_default': None,
 'timestamp_format': '%Y-%m-%d %H:%M:%S',
 'timestamp_from': 'paid_time',
 'url': 'https://testsensorsapi.juhaolian.cn/sa?project=default&token=schemaLimited-xTvWlzDD',
 'user': 'root'}
2020-06-13 10:12:34,428 1108 INFO start importing from mysql, sql=SELECT bill_no,bill_status,owner_code,owner_name,should_pay_total,discount_total,real_pay_total,spu_count,created_time,pay_click_time,paid_time,is_point_used,used_point,pay_type,cancelled_time,coupon_total,delivery_type,area_code,area_name,room_code,room_full_name,act_total FROM cb_sc_sale_order ORDER BY paid_time limit 2;
2020-06-13 10:12:34,430 186 DEBUG debug url: https://testsensorsapi.juhaolian.cn/debug?project=default&token=schemaLimited-xTvWlzDD
2020-06-13 10:12:34,526 189 DEBUG response: Sensors Analytics is ready to receive your data!
2020-06-13 10:12:34,527 1456 INFO running debug mode
2020-06-13 10:12:34,528 1479 INFO progress 0.00% {'total_write': 0, 'total_read': 0, 'error': 0, 'skip': 0, 'total': 2}
2020-06-13 10:12:34,533 1491 WARNING failed to parse line 1
2020-06-13 10:12:34,543 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 466, in send_event
    timestamp = self.get_timestamp(record)
  File "format_importer.py", line 422, in __get_timestamp_from_record
    raise Exception('cannot find timestamp[%s] in record[%s]' % (self.args.timestamp_from, record))
Exception: cannot find timestamp[paid_time] in record[{'bill_no': '314378825565970432C1', 'bill_status': '03', 'owner_code': '*2019061916231142038', 'owner_name': '7502_yz', 'should_pay_total': 0.01, 'discount_total': 0.0, 'real_pay_total': 0.01, 'spu_count': 1, 'created_time': datetime.datetime(2019, 7, 25, 22, 36, 3), 'pay_click_time': datetime.datetime(2019, 7, 25, 22, 59, 28), 'is_point_used': 0, 'used_point': 0, 'cancelled_time': datetime.datetime(2019, 7, 25, 23, 7, 1), 'coupon_total': 0.0, 'delivery_type': 1, 'area_code': 'A2018012300015', 'area_name': '¶«ÀéCSS', 'room_code': '20180124008775', 'room_full_name': 'WDºÅÂ¥1-1-1', 'act_total': 0.0}]

2020-06-13 10:12:34,544 1493 WARNING cannot find timestamp[paid_time] in record[{'bill_no': '314378825565970432C1', 'bill_status': '03', 'owner_code': '*2019061916231142038', 'owner_name': '7502_yz', 'should_pay_total': 0.01, 'discount_total': 0.0, 'real_pay_total': 0.01, 'spu_count': 1, 'created_time': datetime.datetime(2019, 7, 25, 22, 36, 3), 'pay_click_time': datetime.datetime(2019, 7, 25, 22, 59, 28), 'is_point_used': 0, 'used_point': 0, 'cancelled_time': datetime.datetime(2019, 7, 25, 23, 7, 1), 'coupon_total': 0.0, 'delivery_type': 1, 'area_code': 'A2018012300015', 'area_name': '¶«ÀéCSS', 'room_code': '20180124008775', 'room_full_name': 'WDºÅÂ¥1-1-1', 'act_total': 0.0}]
2020-06-13 10:12:34,549 1491 WARNING failed to parse line 2
2020-06-13 10:12:34,549 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 466, in send_event
    timestamp = self.get_timestamp(record)
  File "format_importer.py", line 422, in __get_timestamp_from_record
    raise Exception('cannot find timestamp[%s] in record[%s]' % (self.args.timestamp_from, record))
Exception: cannot find timestamp[paid_time] in record[{'bill_no': '314379102641692672C1', 'bill_status': '03', 'owner_code': '*2019052011454260295', 'owner_name': '3408_yz', 'should_pay_total': 0.02, 'discount_total': 0.0, 'real_pay_total': 0.02, 'spu_count': 2, 'created_time': datetime.datetime(2019, 7, 25, 22, 37, 9), 'pay_click_time': datetime.datetime(2019, 7, 25, 22, 37, 9), 'is_point_used': 0, 'used_point': 0, 'cancelled_time': datetime.datetime(2019, 7, 25, 22, 57, 48), 'coupon_total': 0.0, 'delivery_type': 1, 'area_code': 'A2018012300015', 'area_name': '¶«ÀéCSS', 'room_code': '123355', 'room_full_name': 'WDºÅÂ¥1-0-²âÊÔ·¿¼ä1', 'act_total': 0.0}]

2020-06-13 10:12:34,551 1493 WARNING cannot find timestamp[paid_time] in record[{'bill_no': '314379102641692672C1', 'bill_status': '03', 'owner_code': '*2019052011454260295', 'owner_name': '3408_yz', 'should_pay_total': 0.02, 'discount_total': 0.0, 'real_pay_total': 0.02, 'spu_count': 2, 'created_time': datetime.datetime(2019, 7, 25, 22, 37, 9), 'pay_click_time': datetime.datetime(2019, 7, 25, 22, 37, 9), 'is_point_used': 0, 'used_point': 0, 'cancelled_time': datetime.datetime(2019, 7, 25, 22, 57, 48), 'coupon_total': 0.0, 'delivery_type': 1, 'area_code': 'A2018012300015', 'area_name': '¶«ÀéCSS', 'room_code': '123355', 'room_full_name': 'WDºÅÂ¥1-0-²âÊÔ·¿¼ä1', 'act_total': 0.0}]
2020-06-13 10:12:34,558 1195 INFO end import from mysql.
2020-06-13 10:12:34,558 1505 INFO counter = {'total_write': 0, 'total_read': 2, 'error': 2, 'skip': 0, 'total': 2}.
2020-06-13 10:12:34,560 1507 INFO --debug ²ÎÊýÊ±²»»áÕæÕýµ¼ÈëÊý¾Ý
2020-06-13 10:16:12,899 1445 DEBUG args: {'bool_property_list': None,
 'case_sensitive': True,
 'db': 'sqyn_sc',
 'debug': True,
 'distinct_id_from': 'owner_code',
 'event_default': 'cb_sc_sale_orde',
 'event_from': None,
 'filename': None,
 'host': '10.18.226.58',
 'is_login': False,
 'output_file': None,
 'password': 'Hisense,123',
 'port': 3100,
 'project': None,
 'quit_on_error': False,
 'skip_cnt': 0,
 'sql': 'SELECT '
        'bill_no,bill_status,owner_code,owner_name,should_pay_total,discount_total,real_pay_total,spu_count,created_time,pay_click_time,paid_time,is_point_used,used_point,pay_type,cancelled_time,coupon_total,delivery_type,area_code,area_name,room_code,room_full_name,act_total '
        'FROM cb_sc_sale_order ORDER BY paid_time limit 2;',
 'subparser_name': 'mysql_event',
 'timestamp_default': None,
 'timestamp_format': '%Y-%m-%d %H:%M:%S',
 'timestamp_from': 'paid_time',
 'url': 'https://testsensorsapi.juhaolian.cn/sa?project=default&token=schemaLimited-xTvWlzDD',
 'user': 'root'}
2020-06-13 10:16:13,490 1108 INFO start importing from mysql, sql=SELECT bill_no,bill_status,owner_code,owner_name,should_pay_total,discount_total,real_pay_total,spu_count,created_time,pay_click_time,paid_time,is_point_used,used_point,pay_type,cancelled_time,coupon_total,delivery_type,area_code,area_name,room_code,room_full_name,act_total FROM cb_sc_sale_order ORDER BY paid_time limit 2;
2020-06-13 10:16:13,490 186 DEBUG debug url: https://testsensorsapi.juhaolian.cn/debug?project=default&token=schemaLimited-xTvWlzDD
2020-06-13 10:16:13,579 189 DEBUG response: Sensors Analytics is ready to receive your data!
2020-06-13 10:16:13,580 1456 INFO running debug mode
2020-06-13 10:16:13,580 1479 INFO progress 0.00% {'total_write': 0, 'total_read': 0, 'error': 0, 'skip': 0, 'total': 2}
2020-06-13 10:16:13,588 1491 WARNING failed to parse line 1
2020-06-13 10:16:13,592 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 466, in send_event
    timestamp = self.get_timestamp(record)
  File "format_importer.py", line 422, in __get_timestamp_from_record
    raise Exception('cannot find timestamp[%s] in record[%s]' % (self.args.timestamp_from, record))
Exception: cannot find timestamp[paid_time] in record[{'bill_no': '314378825565970432C1', 'bill_status': '03', 'owner_code': '*2019061916231142038', 'owner_name': '7502_yz', 'should_pay_total': 0.01, 'discount_total': 0.0, 'real_pay_total': 0.01, 'spu_count': 1, 'created_time': datetime.datetime(2019, 7, 25, 22, 36, 3), 'pay_click_time': datetime.datetime(2019, 7, 25, 22, 59, 28), 'is_point_used': 0, 'used_point': 0, 'cancelled_time': datetime.datetime(2019, 7, 25, 23, 7, 1), 'coupon_total': 0.0, 'delivery_type': 1, 'area_code': 'A2018012300015', 'area_name': '¶«ÀéCSS', 'room_code': '20180124008775', 'room_full_name': 'WDºÅÂ¥1-1-1', 'act_total': 0.0}]

2020-06-13 10:16:13,594 1493 WARNING cannot find timestamp[paid_time] in record[{'bill_no': '314378825565970432C1', 'bill_status': '03', 'owner_code': '*2019061916231142038', 'owner_name': '7502_yz', 'should_pay_total': 0.01, 'discount_total': 0.0, 'real_pay_total': 0.01, 'spu_count': 1, 'created_time': datetime.datetime(2019, 7, 25, 22, 36, 3), 'pay_click_time': datetime.datetime(2019, 7, 25, 22, 59, 28), 'is_point_used': 0, 'used_point': 0, 'cancelled_time': datetime.datetime(2019, 7, 25, 23, 7, 1), 'coupon_total': 0.0, 'delivery_type': 1, 'area_code': 'A2018012300015', 'area_name': '¶«ÀéCSS', 'room_code': '20180124008775', 'room_full_name': 'WDºÅÂ¥1-1-1', 'act_total': 0.0}]
2020-06-13 10:16:13,597 1491 WARNING failed to parse line 2
2020-06-13 10:16:13,600 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 466, in send_event
    timestamp = self.get_timestamp(record)
  File "format_importer.py", line 422, in __get_timestamp_from_record
    raise Exception('cannot find timestamp[%s] in record[%s]' % (self.args.timestamp_from, record))
Exception: cannot find timestamp[paid_time] in record[{'bill_no': '314379102641692672C1', 'bill_status': '03', 'owner_code': '*2019052011454260295', 'owner_name': '3408_yz', 'should_pay_total': 0.02, 'discount_total': 0.0, 'real_pay_total': 0.02, 'spu_count': 2, 'created_time': datetime.datetime(2019, 7, 25, 22, 37, 9), 'pay_click_time': datetime.datetime(2019, 7, 25, 22, 37, 9), 'is_point_used': 0, 'used_point': 0, 'cancelled_time': datetime.datetime(2019, 7, 25, 22, 57, 48), 'coupon_total': 0.0, 'delivery_type': 1, 'area_code': 'A2018012300015', 'area_name': '¶«ÀéCSS', 'room_code': '123355', 'room_full_name': 'WDºÅÂ¥1-0-²âÊÔ·¿¼ä1', 'act_total': 0.0}]

2020-06-13 10:16:13,605 1493 WARNING cannot find timestamp[paid_time] in record[{'bill_no': '314379102641692672C1', 'bill_status': '03', 'owner_code': '*2019052011454260295', 'owner_name': '3408_yz', 'should_pay_total': 0.02, 'discount_total': 0.0, 'real_pay_total': 0.02, 'spu_count': 2, 'created_time': datetime.datetime(2019, 7, 25, 22, 37, 9), 'pay_click_time': datetime.datetime(2019, 7, 25, 22, 37, 9), 'is_point_used': 0, 'used_point': 0, 'cancelled_time': datetime.datetime(2019, 7, 25, 22, 57, 48), 'coupon_total': 0.0, 'delivery_type': 1, 'area_code': 'A2018012300015', 'area_name': '¶«ÀéCSS', 'room_code': '123355', 'room_full_name': 'WDºÅÂ¥1-0-²âÊÔ·¿¼ä1', 'act_total': 0.0}]
2020-06-13 10:16:13,611 1195 INFO end import from mysql.
2020-06-13 10:16:13,612 1505 INFO counter = {'total_write': 0, 'total_read': 2, 'error': 2, 'skip': 0, 'total': 2}.
2020-06-13 10:16:13,612 1507 INFO --debug ²ÎÊýÊ±²»»áÕæÕýµ¼ÈëÊý¾Ý
2020-06-13 10:17:21,389 1445 DEBUG args: {'bool_property_list': None,
 'case_sensitive': True,
 'db': 'sqyn_sc',
 'debug': True,
 'distinct_id_from': 'owner_code',
 'event_default': 'cb_sc_sale_orde',
 'event_from': None,
 'filename': None,
 'host': '10.18.226.58',
 'is_login': False,
 'output_file': None,
 'password': 'Hisense,123',
 'port': 3100,
 'project': None,
 'quit_on_error': False,
 'skip_cnt': 0,
 'sql': 'SELECT '
        'bill_no,bill_status,owner_code,owner_name,should_pay_total,discount_total,real_pay_total,spu_count,created_time,pay_click_time,date(paid_time) '
        'as '
        'paid_time,is_point_used,used_point,pay_type,cancelled_time,coupon_total,delivery_type,area_code,area_name,room_code,room_full_name,act_total '
        'FROM cb_sc_sale_order ORDER BY paid_time limit 2;',
 'subparser_name': 'mysql_event',
 'timestamp_default': None,
 'timestamp_format': '%Y-%m-%d %H:%M:%S',
 'timestamp_from': 'paid_time',
 'url': 'https://testsensorsapi.juhaolian.cn/sa?project=default&token=schemaLimited-xTvWlzDD',
 'user': 'root'}
2020-06-13 10:17:22,070 1108 INFO start importing from mysql, sql=SELECT bill_no,bill_status,owner_code,owner_name,should_pay_total,discount_total,real_pay_total,spu_count,created_time,pay_click_time,date(paid_time) as paid_time,is_point_used,used_point,pay_type,cancelled_time,coupon_total,delivery_type,area_code,area_name,room_code,room_full_name,act_total FROM cb_sc_sale_order ORDER BY paid_time limit 2;
2020-06-13 10:17:22,070 186 DEBUG debug url: https://testsensorsapi.juhaolian.cn/debug?project=default&token=schemaLimited-xTvWlzDD
2020-06-13 10:17:22,162 189 DEBUG response: Sensors Analytics is ready to receive your data!
2020-06-13 10:17:22,162 1456 INFO running debug mode
2020-06-13 10:17:22,162 1479 INFO progress 0.00% {'total_write': 0, 'total_read': 0, 'error': 0, 'skip': 0, 'total': 2}
2020-06-13 10:17:22,165 1491 WARNING failed to parse line 1
2020-06-13 10:17:22,172 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 466, in send_event
    timestamp = self.get_timestamp(record)
  File "format_importer.py", line 422, in __get_timestamp_from_record
    raise Exception('cannot find timestamp[%s] in record[%s]' % (self.args.timestamp_from, record))
Exception: cannot find timestamp[paid_time] in record[{'bill_no': '314378825565970432C1', 'bill_status': '03', 'owner_code': '*2019061916231142038', 'owner_name': '7502_yz', 'should_pay_total': 0.01, 'discount_total': 0.0, 'real_pay_total': 0.01, 'spu_count': 1, 'created_time': datetime.datetime(2019, 7, 25, 22, 36, 3), 'pay_click_time': datetime.datetime(2019, 7, 25, 22, 59, 28), 'is_point_used': 0, 'used_point': 0, 'cancelled_time': datetime.datetime(2019, 7, 25, 23, 7, 1), 'coupon_total': 0.0, 'delivery_type': 1, 'area_code': 'A2018012300015', 'area_name': '¶«ÀéCSS', 'room_code': '20180124008775', 'room_full_name': 'WDºÅÂ¥1-1-1', 'act_total': 0.0}]

2020-06-13 10:17:22,174 1493 WARNING cannot find timestamp[paid_time] in record[{'bill_no': '314378825565970432C1', 'bill_status': '03', 'owner_code': '*2019061916231142038', 'owner_name': '7502_yz', 'should_pay_total': 0.01, 'discount_total': 0.0, 'real_pay_total': 0.01, 'spu_count': 1, 'created_time': datetime.datetime(2019, 7, 25, 22, 36, 3), 'pay_click_time': datetime.datetime(2019, 7, 25, 22, 59, 28), 'is_point_used': 0, 'used_point': 0, 'cancelled_time': datetime.datetime(2019, 7, 25, 23, 7, 1), 'coupon_total': 0.0, 'delivery_type': 1, 'area_code': 'A2018012300015', 'area_name': '¶«ÀéCSS', 'room_code': '20180124008775', 'room_full_name': 'WDºÅÂ¥1-1-1', 'act_total': 0.0}]
2020-06-13 10:17:22,180 1491 WARNING failed to parse line 2
2020-06-13 10:17:22,181 1492 WARNING Traceback (most recent call last):
  File "format_importer.py", line 1487, in main
    formatter.send(record)
  File "format_importer.py", line 466, in send_event
    timestamp = self.get_timestamp(record)
  File "format_importer.py", line 422, in __get_timestamp_from_record
    raise Exception('cannot find timestamp[%s] in record[%s]' % (self.args.timestamp_from, record))
Exception: cannot find timestamp[paid_time] in record[{'bill_no': '314379102641692672C1', 'bill_status': '03', 'owner_code': '*2019052011454260295', 'owner_name': '3408_yz', 'should_pay_total': 0.02, 'discount_total': 0.0, 'real_pay_total': 0.02, 'spu_count': 2, 'created_time': datetime.datetime(2019, 7, 25, 22, 37, 9), 'pay_click_time': datetime.datetime(2019, 7, 25, 22, 37, 9), 'is_point_used': 0, 'used_point': 0, 'cancelled_time': datetime.datetime(2019, 7, 25, 22, 57, 48), 'coupon_total': 0.0, 'delivery_type': 1, 'area_code': 'A2018012300015', 'area_name': '¶«ÀéCSS', 'room_code': '123355', 'room_full_name': 'WDºÅÂ¥1-0-²âÊÔ·¿¼ä1', 'act_total': 0.0}]

2020-06-13 10:17:22,184 1493 WARNING cannot find timestamp[paid_time] in record[{'bill_no': '314379102641692672C1', 'bill_status': '03', 'owner_code': '*2019052011454260295', 'owner_name': '3408_yz', 'should_pay_total': 0.02, 'discount_total': 0.0, 'real_pay_total': 0.02, 'spu_count': 2, 'created_time': datetime.datetime(2019, 7, 25, 22, 37, 9), 'pay_click_time': datetime.datetime(2019, 7, 25, 22, 37, 9), 'is_point_used': 0, 'used_point': 0, 'cancelled_time': datetime.datetime(2019, 7, 25, 22, 57, 48), 'coupon_total': 0.0, 'delivery_type': 1, 'area_code': 'A2018012300015', 'area_name': '¶«ÀéCSS', 'room_code': '123355', 'room_full_name': 'WDºÅÂ¥1-0-²âÊÔ·¿¼ä1', 'act_total': 0.0}]
2020-06-13 10:17:22,185 1195 INFO end import from mysql.
2020-06-13 10:17:22,186 1505 INFO counter = {'total_write': 0, 'total_read': 2, 'error': 2, 'skip': 0, 'total': 2}.
2020-06-13 10:17:22,187 1507 INFO --debug ²ÎÊýÊ±²»»áÕæÕýµ¼ÈëÊý¾Ý
2020-06-13 10:23:10,549 1445 DEBUG args: {'bool_property_list': None,
 'case_sensitive': True,
 'db': 'sqyn_sc',
 'debug': True,
 'distinct_id_from': 'owner_code',
 'event_default': 'cb_sc_sale_orde',
 'event_from': None,
 'filename': None,
 'host': '10.18.226.58',
 'is_login': False,
 'output_file': None,
 'password': 'Hisense,123',
 'port': 3100,
 'project': None,
 'quit_on_error': False,
 'skip_cnt': 0,
 'sql': 'SELECT '
        'bill_no,bill_status,owner_code,owner_name,should_pay_total,discount_total,real_pay_total,spu_count,created_time,pay_click_time,paid_time,is_point_used,used_point,pay_type,cancelled_time,coupon_total,delivery_type,area_code,area_name,room_code,room_full_name,act_total '
        'FROM cb_sc_sale_order where paid_time is not NULL ORDER BY paid_time '
        'limit 2;',
 'subparser_name': 'mysql_event',
 'timestamp_default': None,
 'timestamp_format': '%Y-%m-%d %H:%M:%S',
 'timestamp_from': 'paid_time',
 'url': 'https://testsensorsapi.juhaolian.cn/sa?project=default&token=schemaLimited-xTvWlzDD',
 'user': 'root'}
2020-06-13 10:23:10,732 1108 INFO start importing from mysql, sql=SELECT bill_no,bill_status,owner_code,owner_name,should_pay_total,discount_total,real_pay_total,spu_count,created_time,pay_click_time,paid_time,is_point_used,used_point,pay_type,cancelled_time,coupon_total,delivery_type,area_code,area_name,room_code,room_full_name,act_total FROM cb_sc_sale_order where paid_time is not NULL ORDER BY paid_time limit 2;
2020-06-13 10:23:10,733 186 DEBUG debug url: https://testsensorsapi.juhaolian.cn/debug?project=default&token=schemaLimited-xTvWlzDD
2020-06-13 10:23:10,820 189 DEBUG response: Sensors Analytics is ready to receive your data!
2020-06-13 10:23:10,820 1456 INFO running debug mode
2020-06-13 10:23:10,821 1479 INFO progress 0.00% {'total_write': 0, 'total_read': 0, 'error': 0, 'skip': 0, 'total': 2}
2020-06-13 10:23:11,038 1195 INFO end import from mysql.
2020-06-13 10:23:11,040 1505 INFO counter = {'total_write': 2, 'total_read': 2, 'error': 0, 'skip': 0, 'total': 2}.
2020-06-13 10:23:11,047 1507 INFO --debug ²ÎÊýÊ±²»»áÕæÕýµ¼ÈëÊý¾Ý
2020-06-13 10:26:18,193 1445 DEBUG args: {'bool_property_list': None,
 'case_sensitive': True,
 'db': 'sqyn_sc',
 'debug': True,
 'distinct_id_from': 'owner_code',
 'event_default': 'cb_sc_sale_orde',
 'event_from': None,
 'filename': None,
 'host': '10.18.226.58',
 'is_login': False,
 'output_file': None,
 'password': 'Hisense,123',
 'port': 3100,
 'project': None,
 'quit_on_error': False,
 'skip_cnt': 0,
 'sql': 'SELECT '
        'bill_no,bill_status,owner_code,owner_name,should_pay_total,discount_total,real_pay_total,spu_count,created_time,pay_click_time,paid_time,is_point_used,used_point,pay_type,cancelled_time,coupon_total,delivery_type,area_code,area_name,room_code,room_full_name,act_total '
        'FROM cb_sc_sale_order where paid_time is not NULL ORDER BY paid_time '
        'limit 2;',
 'subparser_name': 'mysql_event',
 'timestamp_default': None,
 'timestamp_format': '%Y-%m-%d %H:%M:%S',
 'timestamp_from': 'paid_time',
 'url': 'https://testsensorsapi.juhaolian.cn/sa?project=default&token=schemaLimited-xTvWlzDD',
 'user': 'root'}
2020-06-13 10:26:18,409 1108 INFO start importing from mysql, sql=SELECT bill_no,bill_status,owner_code,owner_name,should_pay_total,discount_total,real_pay_total,spu_count,created_time,pay_click_time,paid_time,is_point_used,used_point,pay_type,cancelled_time,coupon_total,delivery_type,area_code,area_name,room_code,room_full_name,act_total FROM cb_sc_sale_order where paid_time is not NULL ORDER BY paid_time limit 2;
2020-06-13 10:26:18,410 186 DEBUG debug url: https://testsensorsapi.juhaolian.cn/debug?project=default&token=schemaLimited-xTvWlzDD
2020-06-13 10:26:18,514 189 DEBUG response: Sensors Analytics is ready to receive your data!
2020-06-13 10:26:18,514 1456 INFO running debug mode
2020-06-13 10:26:18,514 1479 INFO progress 0.00% {'total_write': 0, 'total_read': 0, 'error': 0, 'skip': 0, 'total': 2}
2020-06-13 10:26:18,725 1195 INFO end import from mysql.
2020-06-13 10:26:18,728 1505 INFO counter = {'total_write': 2, 'total_read': 2, 'error': 0, 'skip': 0, 'total': 2}.
2020-06-13 10:26:18,730 1507 INFO --debug ²ÎÊýÊ±²»»áÕæÕýµ¼ÈëÊý¾Ý
2020-06-13 10:26:19,465 1445 DEBUG args: {'bool_property_list': None,
 'case_sensitive': True,
 'db': 'sqyn_sc',
 'debug': True,
 'distinct_id_from': 'owner_code',
 'event_default': 'cb_sc_sale_return_sku',
 'event_from': None,
 'filename': None,
 'host': '10.18.226.58',
 'is_login': False,
 'output_file': None,
 'password': 'Hisense,123',
 'port': 3100,
 'project': None,
 'quit_on_error': False,
 'skip_cnt': 0,
 'sql': 'SELECT '
        'bill_no_return,sku_no,bill_no,sub_bill_no,bill_status_return,owner_code,owner_name,shop_code,shop_name,spu_code,spu_name,sku_price,return_count,return_real_total,return_total,return_time,created_time,real_return_count,created_user,updated_user,audit_time,order_area_code,order_area_name '
        'FROM cb_sc_sale_return_sku where return_time is not NULL ORDER BY '
        'return_time limit 2;',
 'subparser_name': 'mysql_event',
 'timestamp_default': None,
 'timestamp_format': '%Y-%m-%d %H:%M:%S',
 'timestamp_from': 'return_time',
 'url': 'https://testsensorsapi.juhaolian.cn/sa?project=default&token=schemaLimited-xTvWlzDD',
 'user': 'root'}
2020-06-13 10:26:19,756 1108 INFO start importing from mysql, sql=SELECT bill_no_return,sku_no,bill_no,sub_bill_no,bill_status_return,owner_code,owner_name,shop_code,shop_name,spu_code,spu_name,sku_price,return_count,return_real_total,return_total,return_time,created_time,real_return_count,created_user,updated_user,audit_time,order_area_code,order_area_name FROM cb_sc_sale_return_sku where return_time is not NULL ORDER BY return_time limit 2;
2020-06-13 10:26:19,757 186 DEBUG debug url: https://testsensorsapi.juhaolian.cn/debug?project=default&token=schemaLimited-xTvWlzDD
2020-06-13 10:26:19,837 189 DEBUG response: Sensors Analytics is ready to receive your data!
2020-06-13 10:26:19,837 1456 INFO running debug mode
2020-06-13 10:26:19,837 1479 INFO progress 0.00% {'total_write': 0, 'total_read': 0, 'error': 0, 'skip': 0, 'total': 2}
2020-06-13 10:26:20,095 1195 INFO end import from mysql.
2020-06-13 10:26:20,097 1505 INFO counter = {'total_write': 2, 'total_read': 2, 'error': 0, 'skip': 0, 'total': 2}.
2020-06-13 10:26:20,099 1507 INFO --debug ²ÎÊýÊ±²»»áÕæÕýµ¼ÈëÊý¾Ý
2020-06-13 10:28:29,113 1445 DEBUG args: {'bool_property_list': None,
 'case_sensitive': True,
 'db': 'sqyn_sc',
 'debug': True,
 'distinct_id_from': 'owner_code',
 'event_default': 'cb_sc_sale_orde',
 'event_from': None,
 'filename': None,
 'host': '10.18.226.58',
 'is_login': False,
 'output_file': None,
 'password': 'Hisense,123',
 'port': 3100,
 'project': None,
 'quit_on_error': False,
 'skip_cnt': 0,
 'sql': 'SELECT '
        'bill_no,bill_status,owner_code,owner_name,should_pay_total,discount_total,real_pay_total,spu_count,created_time,pay_click_time,paid_time,is_point_used,used_point,pay_type,cancelled_time,coupon_total,delivery_type,area_code,area_name,room_code,room_full_name,act_total '
        'FROM cb_sc_sale_order WHERE '
        'DATE(paid_time)=DATE_SUB(CURDATE(),INTERVAL 1 DAY) ORDER BY '
        'paid_time;',
 'subparser_name': 'mysql_event',
 'timestamp_default': None,
 'timestamp_format': '%Y-%m-%d %H:%M:%S',
 'timestamp_from': 'paid_time',
 'url': 'https://testsensorsapi.juhaolian.cn/sa?project=default&token=schemaLimited-xTvWlzDD',
 'user': 'root'}
2020-06-13 10:28:29,246 1108 INFO start importing from mysql, sql=SELECT bill_no,bill_status,owner_code,owner_name,should_pay_total,discount_total,real_pay_total,spu_count,created_time,pay_click_time,paid_time,is_point_used,used_point,pay_type,cancelled_time,coupon_total,delivery_type,area_code,area_name,room_code,room_full_name,act_total FROM cb_sc_sale_order WHERE DATE(paid_time)=DATE_SUB(CURDATE(),INTERVAL 1 DAY) ORDER BY paid_time;
2020-06-13 10:28:29,247 186 DEBUG debug url: https://testsensorsapi.juhaolian.cn/debug?project=default&token=schemaLimited-xTvWlzDD
2020-06-13 10:28:29,341 189 DEBUG response: Sensors Analytics is ready to receive your data!
2020-06-13 10:28:29,341 1456 INFO running debug mode
2020-06-13 10:28:30,077 1445 DEBUG args: {'bool_property_list': None,
 'case_sensitive': True,
 'db': 'sqyn_sc',
 'debug': True,
 'distinct_id_from': 'owner_code',
 'event_default': 'cb_sc_sale_return_sku',
 'event_from': None,
 'filename': None,
 'host': '10.18.226.58',
 'is_login': False,
 'output_file': None,
 'password': 'Hisense,123',
 'port': 3100,
 'project': None,
 'quit_on_error': False,
 'skip_cnt': 0,
 'sql': 'SELECT '
        'bill_no_return,sku_no,bill_no,sub_bill_no,bill_status_return,owner_code,owner_name,shop_code,shop_name,spu_code,spu_name,sku_price,return_count,return_real_total,return_total,return_time,created_time,real_return_count,created_user,updated_user,audit_time,order_area_code,order_area_name '
        'FROM cb_sc_sale_return_sku WHERE '
        'DATE(return_time)=DATE_SUB(CURDATE(),INTERVAL 1 DAY) ORDER BY '
        'return_time;',
 'subparser_name': 'mysql_event',
 'timestamp_default': None,
 'timestamp_format': '%Y-%m-%d %H:%M:%S',
 'timestamp_from': 'return_time',
 'url': 'https://testsensorsapi.juhaolian.cn/sa?project=default&token=schemaLimited-xTvWlzDD',
 'user': 'root'}
2020-06-13 10:28:30,273 1108 INFO start importing from mysql, sql=SELECT bill_no_return,sku_no,bill_no,sub_bill_no,bill_status_return,owner_code,owner_name,shop_code,shop_name,spu_code,spu_name,sku_price,return_count,return_real_total,return_total,return_time,created_time,real_return_count,created_user,updated_user,audit_time,order_area_code,order_area_name FROM cb_sc_sale_return_sku WHERE DATE(return_time)=DATE_SUB(CURDATE(),INTERVAL 1 DAY) ORDER BY return_time;
2020-06-13 10:28:30,274 186 DEBUG debug url: https://testsensorsapi.juhaolian.cn/debug?project=default&token=schemaLimited-xTvWlzDD
2020-06-13 10:28:30,360 189 DEBUG response: Sensors Analytics is ready to receive your data!
2020-06-13 10:28:30,360 1456 INFO running debug mode
2020-06-13 10:29:44,066 1445 DEBUG args: {'bool_property_list': None,
 'case_sensitive': True,
 'db': 'sqyn_sc',
 'debug': True,
 'distinct_id_from': 'owner_code',
 'event_default': 'cb_sc_sale_orde',
 'event_from': None,
 'filename': None,
 'host': '10.18.226.58',
 'is_login': False,
 'output_file': None,
 'password': 'Hisense,123',
 'port': 3100,
 'project': None,
 'quit_on_error': False,
 'skip_cnt': 0,
 'sql': 'SELECT '
        'bill_no,bill_status,owner_code,owner_name,should_pay_total,discount_total,real_pay_total,spu_count,created_time,pay_click_time,paid_time,is_point_used,used_point,pay_type,cancelled_time,coupon_total,delivery_type,area_code,area_name,room_code,room_full_name,act_total '
        'FROM cb_sc_sale_order WHERE '
        'DATE(paid_time)=DATE_SUB(CURDATE(),INTERVAL 1 DAY) ORDER BY '
        'paid_time;',
 'subparser_name': 'mysql_event',
 'timestamp_default': None,
 'timestamp_format': '%Y-%m-%d %H:%M:%S',
 'timestamp_from': 'paid_time',
 'url': 'https://testsensorsapi.juhaolian.cn/sa?project=default&token=schemaLimited-xTvWlzDD',
 'user': 'root'}
2020-06-13 10:29:44,600 1108 INFO start importing from mysql, sql=SELECT bill_no,bill_status,owner_code,owner_name,should_pay_total,discount_total,real_pay_total,spu_count,created_time,pay_click_time,paid_time,is_point_used,used_point,pay_type,cancelled_time,coupon_total,delivery_type,area_code,area_name,room_code,room_full_name,act_total FROM cb_sc_sale_order WHERE DATE(paid_time)=DATE_SUB(CURDATE(),INTERVAL 1 DAY) ORDER BY paid_time;
2020-06-13 10:29:44,602 186 DEBUG debug url: https://testsensorsapi.juhaolian.cn/debug?project=default&token=schemaLimited-xTvWlzDD
2020-06-13 10:29:44,703 189 DEBUG response: Sensors Analytics is ready to receive your data!
2020-06-13 10:29:44,703 1456 INFO running debug mode
2020-06-13 10:29:45,413 1445 DEBUG args: {'bool_property_list': None,
 'case_sensitive': True,
 'db': 'sqyn_sc',
 'debug': True,
 'distinct_id_from': 'owner_code',
 'event_default': 'cb_sc_sale_return_sku',
 'event_from': None,
 'filename': None,
 'host': '10.18.226.58',
 'is_login': False,
 'output_file': None,
 'password': 'Hisense,123',
 'port': 3100,
 'project': None,
 'quit_on_error': False,
 'skip_cnt': 0,
 'sql': 'SELECT '
        'bill_no_return,sku_no,bill_no,sub_bill_no,bill_status_return,owner_code,owner_name,shop_code,shop_name,spu_code,spu_name,sku_price,return_count,return_real_total,return_total,return_time,created_time,real_return_count,created_user,updated_user,audit_time,order_area_code,order_area_name '
        'FROM cb_sc_sale_return_sku WHERE '
        'DATE(return_time)=DATE_SUB(CURDATE(),INTERVAL 1 DAY) ORDER BY '
        'return_time;',
 'subparser_name': 'mysql_event',
 'timestamp_default': None,
 'timestamp_format': '%Y-%m-%d %H:%M:%S',
 'timestamp_from': 'return_time',
 'url': 'https://testsensorsapi.juhaolian.cn/sa?project=default&token=schemaLimited-xTvWlzDD',
 'user': 'root'}
2020-06-13 10:29:45,665 1108 INFO start importing from mysql, sql=SELECT bill_no_return,sku_no,bill_no,sub_bill_no,bill_status_return,owner_code,owner_name,shop_code,shop_name,spu_code,spu_name,sku_price,return_count,return_real_total,return_total,return_time,created_time,real_return_count,created_user,updated_user,audit_time,order_area_code,order_area_name FROM cb_sc_sale_return_sku WHERE DATE(return_time)=DATE_SUB(CURDATE(),INTERVAL 1 DAY) ORDER BY return_time;
2020-06-13 10:29:45,666 186 DEBUG debug url: https://testsensorsapi.juhaolian.cn/debug?project=default&token=schemaLimited-xTvWlzDD
2020-06-13 10:29:45,750 189 DEBUG response: Sensors Analytics is ready to receive your data!
2020-06-13 10:29:45,750 1456 INFO running debug mode
2020-06-13 10:30:04,800 1445 DEBUG args: {'bool_property_list': None,
 'case_sensitive': True,
 'db': 'sqyn_sc',
 'debug': True,
 'distinct_id_from': 'owner_code',
 'event_default': 'cb_sc_sale_orde',
 'event_from': None,
 'filename': None,
 'host': '10.18.226.58',
 'is_login': False,
 'output_file': None,
 'password': 'Hisense,123',
 'port': 3100,
 'project': None,
 'quit_on_error': False,
 'skip_cnt': 0,
 'sql': 'SELECT '
        'bill_no,bill_status,owner_code,owner_name,should_pay_total,discount_total,real_pay_total,spu_count,created_time,pay_click_time,paid_time,is_point_used,used_point,pay_type,cancelled_time,coupon_total,delivery_type,area_code,area_name,room_code,room_full_name,act_total '
        'FROM cb_sc_sale_order WHERE '
        'DATE(paid_time)=DATE_SUB(CURDATE(),INTERVAL 1 DAY) ORDER BY '
        'paid_time;',
 'subparser_name': 'mysql_event',
 'timestamp_default': None,
 'timestamp_format': '%Y-%m-%d %H:%M:%S',
 'timestamp_from': 'paid_time',
 'url': 'https://testsensorsapi.juhaolian.cn/sa?project=default&token=schemaLimited-xTvWlzDD',
 'user': 'root'}
2020-06-13 10:30:05,124 1108 INFO start importing from mysql, sql=SELECT bill_no,bill_status,owner_code,owner_name,should_pay_total,discount_total,real_pay_total,spu_count,created_time,pay_click_time,paid_time,is_point_used,used_point,pay_type,cancelled_time,coupon_total,delivery_type,area_code,area_name,room_code,room_full_name,act_total FROM cb_sc_sale_order WHERE DATE(paid_time)=DATE_SUB(CURDATE(),INTERVAL 1 DAY) ORDER BY paid_time;
2020-06-13 10:30:05,125 186 DEBUG debug url: https://testsensorsapi.juhaolian.cn/debug?project=default&token=schemaLimited-xTvWlzDD
2020-06-13 10:30:05,216 189 DEBUG response: Sensors Analytics is ready to receive your data!
2020-06-13 10:30:05,216 1456 INFO running debug mode
2020-06-13 10:30:05,962 1445 DEBUG args: {'bool_property_list': None,
 'case_sensitive': True,
 'db': 'sqyn_sc',
 'debug': True,
 'distinct_id_from': 'owner_code',
 'event_default': 'cb_sc_sale_return_sku',
 'event_from': None,
 'filename': None,
 'host': '10.18.226.58',
 'is_login': False,
 'output_file': None,
 'password': 'Hisense,123',
 'port': 3100,
 'project': None,
 'quit_on_error': False,
 'skip_cnt': 0,
 'sql': 'SELECT '
        'bill_no_return,sku_no,bill_no,sub_bill_no,bill_status_return,owner_code,owner_name,shop_code,shop_name,spu_code,spu_name,sku_price,return_count,return_real_total,return_total,return_time,created_time,real_return_count,created_user,updated_user,audit_time,order_area_code,order_area_name '
        'FROM cb_sc_sale_return_sku WHERE '
        'DATE(return_time)=DATE_SUB(CURDATE(),INTERVAL 1 DAY) ORDER BY '
        'return_time;',
 'subparser_name': 'mysql_event',
 'timestamp_default': None,
 'timestamp_format': '%Y-%m-%d %H:%M:%S',
 'timestamp_from': 'return_time',
 'url': 'https://testsensorsapi.juhaolian.cn/sa?project=default&token=schemaLimited-xTvWlzDD',
 'user': 'root'}
2020-06-13 10:30:06,124 1108 INFO start importing from mysql, sql=SELECT bill_no_return,sku_no,bill_no,sub_bill_no,bill_status_return,owner_code,owner_name,shop_code,shop_name,spu_code,spu_name,sku_price,return_count,return_real_total,return_total,return_time,created_time,real_return_count,created_user,updated_user,audit_time,order_area_code,order_area_name FROM cb_sc_sale_return_sku WHERE DATE(return_time)=DATE_SUB(CURDATE(),INTERVAL 1 DAY) ORDER BY return_time;
2020-06-13 10:30:06,124 186 DEBUG debug url: https://testsensorsapi.juhaolian.cn/debug?project=default&token=schemaLimited-xTvWlzDD
2020-06-13 10:30:06,226 189 DEBUG response: Sensors Analytics is ready to receive your data!
2020-06-13 10:30:06,226 1456 INFO running debug mode
2020-06-13 10:30:06,944 1445 DEBUG args: {'bool_property_list': None,
 'case_sensitive': True,
 'db': 'sqyn_sc',
 'debug': True,
 'distinct_id_from': 'distinct_id',
 'event_default': 'cb_sc_area_data_set',
 'event_from': None,
 'filename': None,
 'host': '10.18.226.58',
 'is_login': False,
 'output_file': None,
 'password': 'Hisense,123',
 'port': 3100,
 'project': None,
 'quit_on_error': False,
 'skip_cnt': 0,
 'sql': 'SELECT distinct_id,area_code,owner_cnt,area_name,sc_show_time FROM '
        'cb_sc_area_data_set WHERE '
        'DATE(sc_show_time)=DATE_SUB(CURDATE(),INTERVAL 1 DAY);',
 'subparser_name': 'mysql_event',
 'timestamp_default': None,
 'timestamp_format': '%Y-%m-%d %H:%M:%S',
 'timestamp_from': 'sc_show_time',
 'url': 'https://testsensorsapi.juhaolian.cn/sa?project=default&token=schemaLimited-xTvWlzDD',
 'user': 'root'}
2020-06-13 10:30:07,286 1108 INFO start importing from mysql, sql=SELECT distinct_id,area_code,owner_cnt,area_name,sc_show_time FROM cb_sc_area_data_set WHERE DATE(sc_show_time)=DATE_SUB(CURDATE(),INTERVAL 1 DAY);
2020-06-13 10:30:07,288 186 DEBUG debug url: https://testsensorsapi.juhaolian.cn/debug?project=default&token=schemaLimited-xTvWlzDD
2020-06-13 10:30:07,389 189 DEBUG response: Sensors Analytics is ready to receive your data!
2020-06-13 10:30:07,389 1456 INFO running debug mode
2020-06-13 10:30:08,097 1445 DEBUG args: {'bool_property_list': None,
 'case_sensitive': True,
 'db': 'sqyn_sc',
 'debug': True,
 'distinct_id_from': 'distinct_id',
 'event_default': 'cb_sc_goods_area_count',
 'event_from': None,
 'filename': None,
 'host': '10.18.226.58',
 'is_login': False,
 'output_file': None,
 'password': 'Hisense,123',
 'port': 3100,
 'project': None,
 'quit_on_error': False,
 'skip_cnt': 0,
 'sql': 'SELECT distinct_id,area_code,sku_cnt,area_name,sc_show_time FROM '
        'cb_sc_goods_area_count WHERE '
        'DATE(sc_show_time)=DATE_SUB(CURDATE(),INTERVAL 1 DAY);',
 'subparser_name': 'mysql_event',
 'timestamp_default': None,
 'timestamp_format': '%Y-%m-%d %H:%M:%S',
 'timestamp_from': 'sc_show_time',
 'url': 'https://testsensorsapi.juhaolian.cn/sa?project=default&token=schemaLimited-xTvWlzDD',
 'user': 'root'}
2020-06-13 10:30:09,138 1445 DEBUG args: {'bool_property_list': None,
 'case_sensitive': True,
 'db': 'sqyn_sc',
 'debug': True,
 'distinct_id_from': 'user_id',
 'event_default': 'cb_sc_owner_binding_area_count',
 'event_from': None,
 'filename': None,
 'host': '10.18.226.58',
 'is_login': False,
 'output_file': None,
 'password': 'Hisense,123',
 'port': 3100,
 'project': None,
 'quit_on_error': False,
 'skip_cnt': 0,
 'sql': 'SELECT distinct_id,area_code,owner_binding_cnt,area_name,sc_show_time '
        'FROM cb_sc_owner_binding_area_count WHERE '
        'DATE(sc_show_time)=DATE_SUB(CURDATE(),INTERVAL 1 DAY);',
 'subparser_name': 'mysql_event',
 'timestamp_default': None,
 'timestamp_format': '%Y-%m-%d %H:%M:%S',
 'timestamp_from': 'sc_show_time',
 'url': 'https://testsensorsapi.juhaolian.cn/sa?project=default&token=schemaLimited-xTvWlzDD',
 'user': 'root'}
2020-06-13 10:38:23,748 1445 DEBUG args: {'bool_property_list': None,
 'case_sensitive': True,
 'db': 'sqyn_sc',
 'debug': True,
 'distinct_id_from': 'owner_code',
 'event_default': 'cb_sc_sale_orde',
 'event_from': None,
 'filename': None,
 'host': '10.18.226.58',
 'is_login': False,
 'output_file': None,
 'password': 'Hisense,123',
 'port': 3100,
 'project': None,
 'quit_on_error': False,
 'skip_cnt': 0,
 'sql': 'SELECT '
        'bill_no,bill_status,owner_code,owner_name,should_pay_total,discount_total,real_pay_total,spu_count,created_time,pay_click_time,paid_time,is_point_used,used_point,pay_type,cancelled_time,coupon_total,delivery_type,area_code,area_name,room_code,room_full_name,act_total '
        'FROM cb_sc_sale_order where paid_time is not NULL ORDER BY paid_time '
        'limit 2;',
 'subparser_name': 'mysql_event',
 'timestamp_default': None,
 'timestamp_format': '%Y-%m-%d %H:%M:%S',
 'timestamp_from': 'paid_time',
 'url': 'https://testsensorsapi.juhaolian.cn/sa?project=default&token=schemaLimited-xTvWlzDD',
 'user': 'root'}
2020-06-13 10:38:24,193 1108 INFO start importing from mysql, sql=SELECT bill_no,bill_status,owner_code,owner_name,should_pay_total,discount_total,real_pay_total,spu_count,created_time,pay_click_time,paid_time,is_point_used,used_point,pay_type,cancelled_time,coupon_total,delivery_type,area_code,area_name,room_code,room_full_name,act_total FROM cb_sc_sale_order where paid_time is not NULL ORDER BY paid_time limit 2;
2020-06-13 10:38:24,194 186 DEBUG debug url: https://testsensorsapi.juhaolian.cn/debug?project=default&token=schemaLimited-xTvWlzDD
2020-06-13 10:38:24,295 189 DEBUG response: Sensors Analytics is ready to receive your data!
2020-06-13 10:38:24,295 1456 INFO running debug mode
2020-06-13 10:38:24,296 1479 INFO progress 0.00% {'total_write': 0, 'total_read': 0, 'error': 0, 'skip': 0, 'total': 2}
2020-06-13 10:38:24,500 1195 INFO end import from mysql.
2020-06-13 10:38:24,500 1505 INFO counter = {'total_write': 2, 'total_read': 2, 'error': 0, 'skip': 0, 'total': 2}.
2020-06-13 10:38:24,501 1507 INFO --debug ²ÎÊýÊ±²»»áÕæÕýµ¼ÈëÊý¾Ý
2020-06-13 10:38:25,619 1445 DEBUG args: {'bool_property_list': None,
 'case_sensitive': True,
 'db': 'sqyn_sc',
 'debug': True,
 'distinct_id_from': 'owner_code',
 'event_default': 'cb_sc_sale_return_sku',
 'event_from': None,
 'filename': None,
 'host': '10.18.226.58',
 'is_login': False,
 'output_file': None,
 'password': 'Hisense,123',
 'port': 3100,
 'project': None,
 'quit_on_error': False,
 'skip_cnt': 0,
 'sql': 'SELECT '
        'bill_no_return,sku_no,bill_no,sub_bill_no,bill_status_return,owner_code,owner_name,shop_code,shop_name,spu_code,spu_name,sku_price,return_count,return_real_total,return_total,return_time,created_time,real_return_count,created_user,updated_user,audit_time,order_area_code,order_area_name '
        'FROM cb_sc_sale_return_sku where return_time is not NULL ORDER BY '
        'return_time limit 2;',
 'subparser_name': 'mysql_event',
 'timestamp_default': None,
 'timestamp_format': '%Y-%m-%d %H:%M:%S',
 'timestamp_from': 'return_time',
 'url': 'https://testsensorsapi.juhaolian.cn/sa?project=default&token=schemaLimited-xTvWlzDD',
 'user': 'root'}
2020-06-13 10:38:25,755 1108 INFO start importing from mysql, sql=SELECT bill_no_return,sku_no,bill_no,sub_bill_no,bill_status_return,owner_code,owner_name,shop_code,shop_name,spu_code,spu_name,sku_price,return_count,return_real_total,return_total,return_time,created_time,real_return_count,created_user,updated_user,audit_time,order_area_code,order_area_name FROM cb_sc_sale_return_sku where return_time is not NULL ORDER BY return_time limit 2;
2020-06-13 10:38:25,758 186 DEBUG debug url: https://testsensorsapi.juhaolian.cn/debug?project=default&token=schemaLimited-xTvWlzDD
2020-06-13 10:38:25,859 189 DEBUG response: Sensors Analytics is ready to receive your data!
2020-06-13 10:38:25,859 1456 INFO running debug mode
2020-06-13 10:38:25,860 1479 INFO progress 0.00% {'total_write': 0, 'total_read': 0, 'error': 0, 'skip': 0, 'total': 2}
2020-06-13 10:38:26,075 1195 INFO end import from mysql.
2020-06-13 10:38:26,076 1505 INFO counter = {'total_write': 2, 'total_read': 2, 'error': 0, 'skip': 0, 'total': 2}.
2020-06-13 10:38:26,076 1507 INFO --debug ²ÎÊýÊ±²»»áÕæÕýµ¼ÈëÊý¾Ý
2020-06-13 13:53:59,748 1445 DEBUG args: {'bool_property_list': None,
 'case_sensitive': True,
 'db': 'sqyn_sc',
 'debug': True,
 'distinct_id_from': 'owner_code',
 'event_default': 'cb_sc_sale_return_sku',
 'event_from': None,
 'filename': None,
 'host': '10.18.226.58',
 'is_login': False,
 'output_file': None,
 'password': 'Hisense,123',
 'port': 3100,
 'project': None,
 'quit_on_error': False,
 'skip_cnt': 0,
 'sql': 'SELECT '
        'bill_no_return,sku_no,bill_no,sub_bill_no,bill_status_return,owner_code,owner_name,shop_code,shop_name,spu_code,spu_name,sku_price,return_count,return_real_total,return_total,return_time,created_time,real_return_count,created_user,updated_user,audit_time,order_area_code,order_area_name '
        'FROM cb_sc_sale_return_sku where return_time is not NULL ORDER BY '
        'return_time limit 2;',
 'subparser_name': 'mysql_event',
 'timestamp_default': None,
 'timestamp_format': '%Y-%m-%d %H:%M:%S',
 'timestamp_from': 'return_time',
 'url': 'https://testsensorsapi.juhaolian.cn/sa?project=default&token=schemaLimited-xTvWlzDD',
 'user': 'root'}
2020-06-13 13:54:00,117 1108 INFO start importing from mysql, sql=SELECT bill_no_return,sku_no,bill_no,sub_bill_no,bill_status_return,owner_code,owner_name,shop_code,shop_name,spu_code,spu_name,sku_price,return_count,return_real_total,return_total,return_time,created_time,real_return_count,created_user,updated_user,audit_time,order_area_code,order_area_name FROM cb_sc_sale_return_sku where return_time is not NULL ORDER BY return_time limit 2;
2020-06-13 13:54:00,118 186 DEBUG debug url: https://testsensorsapi.juhaolian.cn/debug?project=default&token=schemaLimited-xTvWlzDD
2020-06-13 13:54:00,214 189 DEBUG response: Sensors Analytics is ready to receive your data!
2020-06-13 13:54:00,214 1456 INFO running debug mode
2020-06-13 13:54:00,214 1479 INFO progress 0.00% {'total_write': 0, 'total_read': 0, 'error': 0, 'skip': 0, 'total': 2}
2020-06-13 13:54:00,541 1195 INFO end import from mysql.
2020-06-13 13:54:00,543 1505 INFO counter = {'total_write': 2, 'total_read': 2, 'error': 0, 'skip': 0, 'total': 2}.
2020-06-13 13:54:00,544 1507 INFO --debug ²ÎÊýÊ±²»»áÕæÕýµ¼ÈëÊý¾Ý
2020-06-13 13:55:16,559 1445 DEBUG args: {'bool_property_list': None,
 'case_sensitive': True,
 'db': 'sqyn_sc',
 'debug': True,
 'distinct_id_from': 'owner_code',
 'event_default': 'cb_sc_sale_return_sku',
 'event_from': None,
 'filename': None,
 'host': '10.18.226.58',
 'is_login': False,
 'output_file': None,
 'password': 'Hisense,123',
 'port': 3100,
 'project': None,
 'quit_on_error': False,
 'skip_cnt': 0,
 'sql': 'SELECT '
        'bill_no_return,sku_no,bill_no,sub_bill_no,bill_status_return,owner_code,owner_name,shop_code,shop_name,spu_code,spu_name,sku_price,return_count,return_real_total,return_total,return_time,created_time,real_return_count,created_user,updated_user,audit_time,order_area_code,order_area_name '
        'FROM cb_sc_sale_return_sku where return_time is not NULL ORDER BY '
        'return_time limit 2;',
 'subparser_name': 'mysql_event',
 'timestamp_default': None,
 'timestamp_format': '%Y-%m-%d %H:%M:%S',
 'timestamp_from': 'return_time',
 'url': 'https://testsensorsapi.juhaolian.cn/sa?project=default&token=schemaLimited-xTvWlzDD',
 'user': 'root'}
2020-06-13 13:55:16,862 1108 INFO start importing from mysql, sql=SELECT bill_no_return,sku_no,bill_no,sub_bill_no,bill_status_return,owner_code,owner_name,shop_code,shop_name,spu_code,spu_name,sku_price,return_count,return_real_total,return_total,return_time,created_time,real_return_count,created_user,updated_user,audit_time,order_area_code,order_area_name FROM cb_sc_sale_return_sku where return_time is not NULL ORDER BY return_time limit 2;
2020-06-13 13:55:16,863 186 DEBUG debug url: https://testsensorsapi.juhaolian.cn/debug?project=default&token=schemaLimited-xTvWlzDD
2020-06-13 13:55:16,949 189 DEBUG response: Sensors Analytics is ready to receive your data!
2020-06-13 13:55:16,949 1456 INFO running debug mode
2020-06-13 13:55:16,950 1479 INFO progress 0.00% {'total_write': 0, 'total_read': 0, 'error': 0, 'skip': 0, 'total': 2}
2020-06-13 13:55:17,188 1195 INFO end import from mysql.
2020-06-13 13:55:17,189 1505 INFO counter = {'total_write': 2, 'total_read': 2, 'error': 0, 'skip': 0, 'total': 2}.
2020-06-13 13:55:17,189 1507 INFO --debug ²ÎÊýÊ±²»»áÕæÕýµ¼ÈëÊý¾Ý
2020-06-13 13:57:40,272 1445 DEBUG args: {'bool_property_list': None,
 'case_sensitive': True,
 'db': 'sqyn_sc',
 'debug': True,
 'distinct_id_from': 'owner_code',
 'event_default': 'cb_sc_sale_return_sku',
 'event_from': None,
 'filename': None,
 'host': '10.18.226.58',
 'is_login': False,
 'output_file': None,
 'password': 'Hisense,123',
 'port': 3100,
 'project': None,
 'quit_on_error': False,
 'skip_cnt': 0,
 'sql': 'SELECT '
        'bill_no_return,sku_no,bill_no,sub_bill_no,bill_status_return,owner_code,owner_name,shop_code,shop_name,spu_code,spu_name,sku_price,return_count,return_real_total,return_total,return_time,created_time,real_return_count,created_user,updated_user,audit_time,order_area_code,order_area_name '
        'FROM cb_sc_sale_return_sku where return_time is not NULL ORDER BY '
        'return_time limit 2;',
 'subparser_name': 'mysql_event',
 'timestamp_default': None,
 'timestamp_format': '%Y-%m-%d %H:%M:%S',
 'timestamp_from': 'return_time',
 'url': 'https://testsensorsapi.juhaolian.cn/sa?project=default&token=schemaLimited-xTvWlzDD',
 'user': 'root'}
2020-06-13 13:57:40,767 1108 INFO start importing from mysql, sql=SELECT bill_no_return,sku_no,bill_no,sub_bill_no,bill_status_return,owner_code,owner_name,shop_code,shop_name,spu_code,spu_name,sku_price,return_count,return_real_total,return_total,return_time,created_time,real_return_count,created_user,updated_user,audit_time,order_area_code,order_area_name FROM cb_sc_sale_return_sku where return_time is not NULL ORDER BY return_time limit 2;
2020-06-13 13:57:40,770 186 DEBUG debug url: https://testsensorsapi.juhaolian.cn/debug?project=default&token=schemaLimited-xTvWlzDD
2020-06-13 13:57:40,880 189 DEBUG response: Sensors Analytics is ready to receive your data!
2020-06-13 13:57:40,881 1456 INFO running debug mode
2020-06-13 13:57:40,882 1479 INFO progress 0.00% {'total_write': 0, 'total_read': 0, 'error': 0, 'skip': 0, 'total': 2}
2020-06-13 13:57:41,095 1195 INFO end import from mysql.
2020-06-13 13:57:41,096 1505 INFO counter = {'total_write': 2, 'total_read': 2, 'error': 0, 'skip': 0, 'total': 2}.
2020-06-13 13:57:41,096 1507 INFO --debug ²ÎÊýÊ±²»»áÕæÕýµ¼ÈëÊý¾Ý
2020-06-13 13:58:12,591 1445 DEBUG args: {'bool_property_list': None,
 'case_sensitive': True,
 'db': 'sqyn_sc',
 'debug': True,
 'distinct_id_from': 'owner_code',
 'event_default': 'cb_sc_sale_return_sku',
 'event_from': None,
 'filename': None,
 'host': '10.18.226.58',
 'is_login': False,
 'output_file': None,
 'password': 'Hisense,123',
 'port': 3100,
 'project': None,
 'quit_on_error': False,
 'skip_cnt': 0,
 'sql': 'SELECT '
        'bill_no_return,sku_no,bill_no,sub_bill_no,bill_status_return,owner_code,owner_name,shop_code,shop_name,spu_code,spu_name,sku_price,return_count,return_real_total,return_total,return_time,created_time,real_return_count,created_user,updated_user,audit_time,order_area_code,order_area_name '
        'FROM cb_sc_sale_return_sku where return_time is not NULL ORDER BY '
        'return_time limit 2;',
 'subparser_name': 'mysql_event',
 'timestamp_default': None,
 'timestamp_format': '%Y-%m-%d %H:%M:%S',
 'timestamp_from': 'return_time',
 'url': 'https://testsensorsapi.juhaolian.cn/sa?project=default&token=schemaLimited-xTvWlzDD',
 'user': 'root'}
2020-06-13 13:58:13,038 1108 INFO start importing from mysql, sql=SELECT bill_no_return,sku_no,bill_no,sub_bill_no,bill_status_return,owner_code,owner_name,shop_code,shop_name,spu_code,spu_name,sku_price,return_count,return_real_total,return_total,return_time,created_time,real_return_count,created_user,updated_user,audit_time,order_area_code,order_area_name FROM cb_sc_sale_return_sku where return_time is not NULL ORDER BY return_time limit 2;
2020-06-13 13:58:13,038 186 DEBUG debug url: https://testsensorsapi.juhaolian.cn/debug?project=default&token=schemaLimited-xTvWlzDD
2020-06-13 13:58:13,136 189 DEBUG response: Sensors Analytics is ready to receive your data!
2020-06-13 13:58:13,136 1456 INFO running debug mode
2020-06-13 13:58:13,137 1479 INFO progress 0.00% {'total_write': 0, 'total_read': 0, 'error': 0, 'skip': 0, 'total': 2}
2020-06-13 13:58:13,341 1195 INFO end import from mysql.
2020-06-13 13:58:13,343 1505 INFO counter = {'total_write': 2, 'total_read': 2, 'error': 0, 'skip': 0, 'total': 2}.
2020-06-13 13:58:13,345 1507 INFO --debug ²ÎÊýÊ±²»»áÕæÕýµ¼ÈëÊý¾Ý
2020-06-13 13:58:43,816 1445 DEBUG args: {'bool_property_list': None,
 'case_sensitive': True,
 'db': 'sqyn_sc',
 'debug': True,
 'distinct_id_from': 'owner_code',
 'event_default': 'cb_sc_sale_return_sku',
 'event_from': None,
 'filename': None,
 'host': '10.18.226.58',
 'is_login': False,
 'output_file': None,
 'password': 'Hisense,123',
 'port': 3100,
 'project': None,
 'quit_on_error': False,
 'skip_cnt': 0,
 'sql': 'SELECT '
        'bill_no_return,sku_no,bill_no,sub_bill_no,bill_status_return,owner_code,owner_name,shop_code,shop_name,spu_code,spu_name,sku_price,return_count,return_real_total,return_total,return_time,created_time,real_return_count,created_user,updated_user,audit_time,order_area_code,order_area_name '
        'FROM cb_sc_sale_return_sku where return_time is not NULL ORDER BY '
        'return_time limit 2;',
 'subparser_name': 'mysql_event',
 'timestamp_default': None,
 'timestamp_format': '%Y-%m-%d %H:%M:%S',
 'timestamp_from': 'return_time',
 'url': 'https://testsensorsapi.juhaolian.cn/sa?project=default&token=schemaLimited-xTvWlzDD',
 'user': 'root'}
2020-06-13 13:58:44,155 1108 INFO start importing from mysql, sql=SELECT bill_no_return,sku_no,bill_no,sub_bill_no,bill_status_return,owner_code,owner_name,shop_code,shop_name,spu_code,spu_name,sku_price,return_count,return_real_total,return_total,return_time,created_time,real_return_count,created_user,updated_user,audit_time,order_area_code,order_area_name FROM cb_sc_sale_return_sku where return_time is not NULL ORDER BY return_time limit 2;
2020-06-13 13:58:44,156 186 DEBUG debug url: https://testsensorsapi.juhaolian.cn/debug?project=default&token=schemaLimited-xTvWlzDD
2020-06-13 13:58:44,242 189 DEBUG response: Sensors Analytics is ready to receive your data!
2020-06-13 13:58:44,242 1456 INFO running debug mode
2020-06-13 13:58:44,243 1479 INFO progress 0.00% {'total_write': 0, 'total_read': 0, 'error': 0, 'skip': 0, 'total': 2}
2020-06-13 13:58:44,450 1195 INFO end import from mysql.
2020-06-13 13:58:44,451 1505 INFO counter = {'total_write': 2, 'total_read': 2, 'error': 0, 'skip': 0, 'total': 2}.
2020-06-13 13:58:44,451 1507 INFO --debug ²ÎÊýÊ±²»»áÕæÕýµ¼ÈëÊý¾Ý
2020-06-13 13:59:05,910 1445 DEBUG args: {'bool_property_list': None,
 'case_sensitive': True,
 'db': 'sqyn_sc',
 'debug': True,
 'distinct_id_from': 'owner_code',
 'event_default': 'cb_sc_sale_return_sku',
 'event_from': None,
 'filename': None,
 'host': '10.18.226.58',
 'is_login': False,
 'output_file': None,
 'password': 'Hisense,123',
 'port': 3100,
 'project': None,
 'quit_on_error': False,
 'skip_cnt': 0,
 'sql': 'SELECT '
        'bill_no_return,sku_no,bill_no,sub_bill_no,bill_status_return,owner_code,owner_name,shop_code,shop_name,spu_code,spu_name,sku_price,return_count,return_real_total,return_total,return_time,created_time,real_return_count,created_user,updated_user,audit_time,order_area_code,order_area_name '
        'FROM cb_sc_sale_return_sku where return_time is not NULL ORDER BY '
        'return_time limit 2;',
 'subparser_name': 'mysql_event',
 'timestamp_default': None,
 'timestamp_format': '%Y-%m-%d %H:%M:%S',
 'timestamp_from': 'return_time',
 'url': 'https://testsensorsapi.juhaolian.cn/sa?project=default&token=schemaLimited-xTvWlzDD',
 'user': 'root'}
2020-06-13 13:59:06,266 1108 INFO start importing from mysql, sql=SELECT bill_no_return,sku_no,bill_no,sub_bill_no,bill_status_return,owner_code,owner_name,shop_code,shop_name,spu_code,spu_name,sku_price,return_count,return_real_total,return_total,return_time,created_time,real_return_count,created_user,updated_user,audit_time,order_area_code,order_area_name FROM cb_sc_sale_return_sku where return_time is not NULL ORDER BY return_time limit 2;
2020-06-13 13:59:06,267 186 DEBUG debug url: https://testsensorsapi.juhaolian.cn/debug?project=default&token=schemaLimited-xTvWlzDD
2020-06-13 13:59:06,348 189 DEBUG response: Sensors Analytics is ready to receive your data!
2020-06-13 13:59:06,348 1456 INFO running debug mode
2020-06-13 13:59:06,349 1479 INFO progress 0.00% {'total_write': 0, 'total_read': 0, 'error': 0, 'skip': 0, 'total': 2}
2020-06-13 13:59:06,564 1195 INFO end import from mysql.
2020-06-13 13:59:06,564 1505 INFO counter = {'total_write': 2, 'total_read': 2, 'error': 0, 'skip': 0, 'total': 2}.
2020-06-13 13:59:06,564 1507 INFO --debug ²ÎÊýÊ±²»»áÕæÕýµ¼ÈëÊý¾Ý
2020-06-13 14:38:20,166 1445 DEBUG args: {'bool_property_list': None,
 'case_sensitive': True,
 'db': 'sqyn_sc',
 'debug': True,
 'distinct_id_from': 'owner_code',
 'event_default': 'cb_sc_sale_return_sku',
 'event_from': None,
 'filename': None,
 'host': '10.18.226.58',
 'is_login': False,
 'output_file': None,
 'password': 'Hisense,123',
 'port': 3100,
 'project': None,
 'quit_on_error': False,
 'skip_cnt': 0,
 'sql': 'SELECT '
        'bill_no_return,sku_no,bill_no,sub_bill_no,bill_status_return,owner_code,owner_name,shop_code,shop_name,spu_code,spu_name,sku_price,return_count,return_real_total,return_total,return_time,created_time,real_return_count,created_user,updated_user,audit_time,order_area_code,order_area_name '
        'FROM cb_sc_sale_return_sku where return_time is not NULL ORDER BY '
        'return_time limit 2;',
 'subparser_name': 'mysql_event',
 'timestamp_default': None,
 'timestamp_format': '%Y-%m-%d %H:%M:%S',
 'timestamp_from': 'return_time',
 'url': 'https://testsensorsapi.juhaolian.cn/sa?project=default&token=schemaLimited-xTvWlzDD',
 'user': 'root'}
2020-06-13 14:38:20,475 1108 INFO start importing from mysql, sql=SELECT bill_no_return,sku_no,bill_no,sub_bill_no,bill_status_return,owner_code,owner_name,shop_code,shop_name,spu_code,spu_name,sku_price,return_count,return_real_total,return_total,return_time,created_time,real_return_count,created_user,updated_user,audit_time,order_area_code,order_area_name FROM cb_sc_sale_return_sku where return_time is not NULL ORDER BY return_time limit 2;
2020-06-13 14:38:20,477 186 DEBUG debug url: https://testsensorsapi.juhaolian.cn/debug?project=default&token=schemaLimited-xTvWlzDD
2020-06-13 14:38:20,589 189 DEBUG response: Sensors Analytics is ready to receive your data!
2020-06-13 14:38:20,589 1456 INFO running debug mode
2020-06-13 14:38:20,590 1479 INFO progress 0.00% {'total_write': 0, 'total_read': 0, 'error': 0, 'skip': 0, 'total': 2}
2020-06-13 14:38:20,828 1195 INFO end import from mysql.
2020-06-13 14:38:20,828 1505 INFO counter = {'total_write': 2, 'total_read': 2, 'error': 0, 'skip': 0, 'total': 2}.
2020-06-13 14:38:20,829 1507 INFO --debug ²ÎÊýÊ±²»»áÕæÕýµ¼ÈëÊý¾Ý
2020-06-15 11:35:25,925 1446 DEBUG args: {'bool_property_list': None,
 'case_sensitive': True,
 'db': 'sqyn_sc',
 'debug': True,
 'distinct_id_from': 'owner_code',
 'event_default': 'cb_sc_sale_orde',
 'event_from': None,
 'filename': None,
 'host': '10.18.226.58',
 'is_login': False,
 'output_file': None,
 'password': 'Hisense,123',
 'port': 3100,
 'project': None,
 'quit_on_error': False,
 'skip_cnt': 0,
 'sql': 'SELECT '
        'bill_no,bill_status,owner_code,owner_name,should_pay_total,discount_total,real_pay_total,spu_count,created_time,pay_click_time,paid_time,is_point_used,used_point,pay_type,cancelled_time,coupon_total,delivery_type,area_code,area_name,room_code,room_full_name,act_total '
        'FROM cb_sc_sale_order where paid_time is not NULL ORDER BY paid_time;',
 'subparser_name': 'mysql_event',
 'timestamp_default': None,
 'timestamp_format': '%Y-%m-%d %H:%M:%S',
 'timestamp_from': 'paid_time',
 'url': 'https://testsensorsapi.juhaolian.cn/sa?project=default&token=schemaLimited-xTvWlzDD',
 'user': 'root'}
2020-06-15 11:35:30,753 1109 INFO start importing from mysql, sql=SELECT bill_no,bill_status,owner_code,owner_name,should_pay_total,discount_total,real_pay_total,spu_count,created_time,pay_click_time,paid_time,is_point_used,used_point,pay_type,cancelled_time,coupon_total,delivery_type,area_code,area_name,room_code,room_full_name,act_total FROM cb_sc_sale_order where paid_time is not NULL ORDER BY paid_time;
2020-06-15 11:35:30,754 187 DEBUG debug url: https://testsensorsapi.juhaolian.cn/debug?project=default&token=schemaLimited-xTvWlzDD
2020-06-15 11:35:30,897 190 DEBUG response: Sensors Analytics is ready to receive your data!
2020-06-15 11:35:30,898 1457 INFO running debug mode
2020-06-15 11:35:30,898 1480 INFO progress 0.00% {'total_write': 0, 'total_read': 0, 'error': 0, 'skip': 0, 'total': 16698}
2020-06-15 18:27:23,299 1446 DEBUG args: {'bool_property_list': None,
 'case_sensitive': True,
 'db': 'sqyn_sc',
 'debug': True,
 'distinct_id_from': 'owner_code',
 'event_default': 'cb_sc_sale_orde',
 'event_from': None,
 'filename': None,
 'host': '10.18.226.58',
 'is_login': False,
 'output_file': None,
 'password': 'Hisense,123',
 'port': 3100,
 'project': None,
 'quit_on_error': False,
 'skip_cnt': 0,
 'sql': 'SELECT '
        'bill_no,bill_status,owner_code,owner_name,should_pay_total,discount_total,real_pay_total,spu_count,created_time,pay_click_time,paid_time,is_point_used,used_point,pay_type,cancelled_time,coupon_total,delivery_type,area_code,area_name,room_code,room_full_name,act_total '
        'FROM cb_sc_sale_order where paid_time is not NULL ORDER BY paid_time '
        'limit 5;',
 'subparser_name': 'mysql_event',
 'timestamp_default': None,
 'timestamp_format': '%Y-%m-%d %H:%M:%S',
 'timestamp_from': 'paid_time',
 'url': 'https://testsensorsapi.juhaolian.cn/sa?project=default&token=schemaLimited-xTvWlzDD',
 'user': 'root'}
2020-06-15 18:27:23,471 1109 INFO start importing from mysql, sql=SELECT bill_no,bill_status,owner_code,owner_name,should_pay_total,discount_total,real_pay_total,spu_count,created_time,pay_click_time,paid_time,is_point_used,used_point,pay_type,cancelled_time,coupon_total,delivery_type,area_code,area_name,room_code,room_full_name,act_total FROM cb_sc_sale_order where paid_time is not NULL ORDER BY paid_time limit 5;
2020-06-15 18:27:23,472 187 DEBUG debug url: https://testsensorsapi.juhaolian.cn/debug?project=default&token=schemaLimited-xTvWlzDD
2020-06-15 18:27:23,568 190 DEBUG response: Sensors Analytics is ready to receive your data!
2020-06-15 18:27:23,568 1457 INFO running debug mode
2020-06-15 18:27:23,568 1480 INFO progress 0.00% {'total_write': 0, 'total_read': 0, 'error': 0, 'skip': 0, 'total': 5}
2020-06-15 18:27:24,156 1196 INFO end import from mysql.
2020-06-15 18:27:24,157 1506 INFO counter = {'total_write': 5, 'total_read': 5, 'error': 0, 'skip': 0, 'total': 5}.
2020-06-15 18:27:24,158 1508 INFO --debug ²ÎÊýÊ±²»»áÕæÕýµ¼ÈëÊý¾Ý
2020-06-15 18:27:25,387 1446 DEBUG args: {'bool_property_list': None,
 'case_sensitive': True,
 'db': 'sqyn_sc',
 'debug': True,
 'distinct_id_from': 'owner_code',
 'event_default': 'cb_sc_sale_return_sku',
 'event_from': None,
 'filename': None,
 'host': '10.18.226.58',
 'is_login': False,
 'output_file': None,
 'password': 'Hisense,123',
 'port': 3100,
 'project': None,
 'quit_on_error': False,
 'skip_cnt': 0,
 'sql': 'SELECT '
        'bill_no_return,sku_no,bill_no,sub_bill_no,bill_status_return,owner_code,owner_name,shop_code,shop_name,spu_code,spu_name,sku_price,return_count,return_real_total,return_total,return_time,created_time,real_return_count,created_user,updated_user,audit_time,order_area_code,order_area_name '
        'FROM cb_sc_sale_return_sku where return_time is not NULL ORDER BY '
        'return_time limit 5;',
 'subparser_name': 'mysql_event',
 'timestamp_default': None,
 'timestamp_format': '%Y-%m-%d %H:%M:%S',
 'timestamp_from': 'return_time',
 'url': 'https://testsensorsapi.juhaolian.cn/sa?project=default&token=schemaLimited-xTvWlzDD',
 'user': 'root'}
2020-06-15 18:27:25,539 1109 INFO start importing from mysql, sql=SELECT bill_no_return,sku_no,bill_no,sub_bill_no,bill_status_return,owner_code,owner_name,shop_code,shop_name,spu_code,spu_name,sku_price,return_count,return_real_total,return_total,return_time,created_time,real_return_count,created_user,updated_user,audit_time,order_area_code,order_area_name FROM cb_sc_sale_return_sku where return_time is not NULL ORDER BY return_time limit 5;
2020-06-15 18:27:25,549 187 DEBUG debug url: https://testsensorsapi.juhaolian.cn/debug?project=default&token=schemaLimited-xTvWlzDD
2020-06-15 18:27:25,630 190 DEBUG response: Sensors Analytics is ready to receive your data!
2020-06-15 18:27:25,630 1457 INFO running debug mode
2020-06-15 18:27:25,639 1480 INFO progress 0.00% {'total_write': 0, 'total_read': 0, 'error': 0, 'skip': 0, 'total': 5}
2020-06-15 18:27:26,169 1196 INFO end import from mysql.
2020-06-15 18:27:26,169 1506 INFO counter = {'total_write': 5, 'total_read': 5, 'error': 0, 'skip': 0, 'total': 5}.
2020-06-15 18:27:26,175 1508 INFO --debug ²ÎÊýÊ±²»»áÕæÕýµ¼ÈëÊý¾Ý
2020-06-18 11:21:03,541 1446 DEBUG args: {'bool_property_list': None,
 'case_sensitive': True,
 'db': 'sqyn_sc',
 'debug': True,
 'distinct_id_from': 'owner_code',
 'event_default': 'cb_sc_sale_orde',
 'event_from': None,
 'filename': None,
 'host': '10.18.226.58',
 'is_login': False,
 'output_file': None,
 'password': 'Hisense,123',
 'port': 3100,
 'project': None,
 'quit_on_error': False,
 'skip_cnt': 0,
 'sql': 'SELECT '
        'bill_no,bill_status,owner_code,owner_name,should_pay_total,discount_total,real_pay_total,spu_count,created_time,pay_click_time,paid_time,is_point_used,used_point,pay_type,cancelled_time,coupon_total,delivery_type,area_code,area_name,room_code,room_full_name,act_total '
        "FROM cb_sc_sale_order WHERE DATE_FORMAT(paid_time, '%%Y-%%m-%%d') < "
        'DATE_SUB(CURDATE(), INTERVAL 1 DAY) ORDER BY paid_time;',
 'subparser_name': 'mysql_event',
 'timestamp_default': None,
 'timestamp_format': '%Y-%m-%d %H:%M:%S',
 'timestamp_from': 'paid_time',
 'url': 'https://testsensorsapi.juhaolian.cn/sa?project=default&token=schemaLimited-xTvWlzDD',
 'user': 'root'}
2020-06-18 11:21:08,612 1109 INFO start importing from mysql, sql=SELECT bill_no,bill_status,owner_code,owner_name,should_pay_total,discount_total,real_pay_total,spu_count,created_time,pay_click_time,paid_time,is_point_used,used_point,pay_type,cancelled_time,coupon_total,delivery_type,area_code,area_name,room_code,room_full_name,act_total FROM cb_sc_sale_order WHERE DATE_FORMAT(paid_time, '%%Y-%%m-%%d') < DATE_SUB(CURDATE(), INTERVAL 1 DAY) ORDER BY paid_time;
2020-06-18 11:21:08,613 187 DEBUG debug url: https://testsensorsapi.juhaolian.cn/debug?project=default&token=schemaLimited-xTvWlzDD
2020-06-18 11:21:08,767 190 DEBUG response: Sensors Analytics is ready to receive your data!
2020-06-18 11:21:08,767 1457 INFO running debug mode
2020-06-18 11:21:08,768 1480 INFO progress 0.00% {'total_write': 0, 'total_read': 0, 'error': 0, 'skip': 0, 'total': 16698}
2020-06-18 11:22:26,959 1446 DEBUG args: {'bool_property_list': None,
 'case_sensitive': True,
 'db': 'sqyn_sc',
 'debug': True,
 'distinct_id_from': 'owner_code',
 'event_default': 'cb_sc_sale_orde',
 'event_from': None,
 'filename': None,
 'host': '10.18.226.58',
 'is_login': False,
 'output_file': None,
 'password': 'Hisense,123',
 'port': 3100,
 'project': None,
 'quit_on_error': False,
 'skip_cnt': 0,
 'sql': 'SELECT '
        'bill_no,bill_status,owner_code,owner_name,should_pay_total,discount_total,real_pay_total,spu_count,created_time,pay_click_time,paid_time,is_point_used,used_point,pay_type,cancelled_time,coupon_total,delivery_type,area_code,area_name,room_code,room_full_name,act_total '
        "FROM cb_sc_sale_order WHERE DATE_FORMAT(paid_time, '%%Y-%%m-%%d') < "
        'DATE_SUB(CURDATE(), INTERVAL 1 DAY) ORDER BY paid_time;',
 'subparser_name': 'mysql_event',
 'timestamp_default': None,
 'timestamp_format': '%Y-%m-%d %H:%M:%S',
 'timestamp_from': 'paid_time',
 'url': 'https://testsensorsapi.juhaolian.cn/sa?project=default&token=schemaLimited-xTvWlzDD',
 'user': 'root'}
2020-06-18 11:22:34,735 1109 INFO start importing from mysql, sql=SELECT bill_no,bill_status,owner_code,owner_name,should_pay_total,discount_total,real_pay_total,spu_count,created_time,pay_click_time,paid_time,is_point_used,used_point,pay_type,cancelled_time,coupon_total,delivery_type,area_code,area_name,room_code,room_full_name,act_total FROM cb_sc_sale_order WHERE DATE_FORMAT(paid_time, '%%Y-%%m-%%d') < DATE_SUB(CURDATE(), INTERVAL 1 DAY) ORDER BY paid_time;
2020-06-18 11:22:34,741 187 DEBUG debug url: https://testsensorsapi.juhaolian.cn/debug?project=default&token=schemaLimited-xTvWlzDD
2020-06-18 11:22:34,842 190 DEBUG response: Sensors Analytics is ready to receive your data!
2020-06-18 11:22:34,842 1457 INFO running debug mode
2020-06-18 11:22:34,842 1480 INFO progress 0.00% {'total_write': 0, 'total_read': 0, 'error': 0, 'skip': 0, 'total': 16698}
2020-06-18 11:22:54,502 1492 WARNING failed to parse line 4
2020-06-18 11:22:54,520 1493 WARNING Traceback (most recent call last):
  File "D:\Program\Anaconda\lib\urllib\request.py", line 1317, in do_open
    encode_chunked=req.has_header('Transfer-encoding'))
  File "D:\Program\Anaconda\lib\http\client.py", line 1244, in request
    self._send_request(method, url, body, headers, encode_chunked)
  File "D:\Program\Anaconda\lib\http\client.py", line 1290, in _send_request
    self.endheaders(body, encode_chunked=encode_chunked)
  File "D:\Program\Anaconda\lib\http\client.py", line 1239, in endheaders
    self._send_output(message_body, encode_chunked=encode_chunked)
  File "D:\Program\Anaconda\lib\http\client.py", line 1026, in _send_output
    self.send(msg)
  File "D:\Program\Anaconda\lib\http\client.py", line 966, in send
    self.connect()
  File "D:\Program\Anaconda\lib\http\client.py", line 1406, in connect
    super().connect()
  File "D:\Program\Anaconda\lib\http\client.py", line 938, in connect
    (self.host,self.port), self.timeout, self.source_address)
  File "D:\Program\Anaconda\lib\socket.py", line 727, in create_connection
    raise err
  File "D:\Program\Anaconda\lib\socket.py", line 716, in create_connection
    sock.connect(sa)
ConnectionRefusedError: [WinError 10061] ÓÉÓÚÄ¿±ê¼ÆËã»ú»ý¼«¾Ü¾ø£¬ÎÞ·¨Á¬½Ó¡£

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "E:\Document\project\cloudbrain-assistant1-2\voice_assistant-1_2_2\format_importer_1_13_2/format_importer.py", line 1488, in main
    formatter.send(record)
  File "E:\Document\project\cloudbrain-assistant1-2\voice_assistant-1_2_2\format_importer_1_13_2/format_importer.py", line 470, in send_event
    self.sa.track(distinct_id, event, properties, is_login_id=self.args.is_login)
  File "E:\Document\project\cloudbrain-assistant1-2\voice_assistant-1_2_2\format_importer_1_13_2\sensorsanalytics\sdk.py", line 231, in track
    self._track_event('track', event_name, distinct_id, None, all_properties, is_login_id)
  File "E:\Document\project\cloudbrain-assistant1-2\voice_assistant-1_2_2\format_importer_1_13_2\sensorsanalytics\sdk.py", line 553, in _track_event
    self._consumer.send(self._json_dumps(data))
  File "E:\Document\project\cloudbrain-assistant1-2\voice_assistant-1_2_2\format_importer_1_13_2\sensorsanalytics\sdk.py", line 844, in send
    'gzip': 1
  File "E:\Document\project\cloudbrain-assistant1-2\voice_assistant-1_2_2\format_importer_1_13_2\sensorsanalytics\sdk.py", line 834, in _do_request
    response = urllib2.urlopen(request, timeout=self._request_timeout)
  File "D:\Program\Anaconda\lib\urllib\request.py", line 222, in urlopen
    return opener.open(url, data, timeout)
  File "D:\Program\Anaconda\lib\urllib\request.py", line 525, in open
    response = self._open(req, data)
  File "D:\Program\Anaconda\lib\urllib\request.py", line 543, in _open
    '_open', req)
  File "D:\Program\Anaconda\lib\urllib\request.py", line 503, in _call_chain
    result = func(*args)
  File "D:\Program\Anaconda\lib\urllib\request.py", line 1360, in https_open
    context=self._context, check_hostname=self._check_hostname)
  File "D:\Program\Anaconda\lib\urllib\request.py", line 1319, in do_open
    raise URLError(err)
urllib.error.URLError: <urlopen error [WinError 10061] ÓÉÓÚÄ¿±ê¼ÆËã»ú»ý¼«¾Ü¾ø£¬ÎÞ·¨Á¬½Ó¡£>

2020-06-18 11:22:54,529 1494 WARNING <urlopen error [WinError 10061] ÓÉÓÚÄ¿±ê¼ÆËã»ú»ý¼«¾Ü¾ø£¬ÎÞ·¨Á¬½Ó¡£>
2020-06-18 11:27:25,730 1446 DEBUG args: {'bool_property_list': None,
 'case_sensitive': True,
 'db': 'sqyn_sc',
 'debug': True,
 'distinct_id_from': 'owner_code',
 'event_default': 'cb_sc_sale_orde',
 'event_from': None,
 'filename': None,
 'host': '10.18.226.58',
 'is_login': False,
 'output_file': None,
 'password': 'Hisense,123',
 'port': 3100,
 'project': None,
 'quit_on_error': False,
 'skip_cnt': 0,
 'sql': 'SELECT '
        'bill_no,bill_status,owner_code,owner_name,should_pay_total,discount_total,real_pay_total,spu_count,created_time,pay_click_time,paid_time,is_point_used,used_point,pay_type,cancelled_time,coupon_total,delivery_type,area_code,area_name,room_code,room_full_name,act_total '
        "FROM cb_sc_sale_order WHERE DATE_FORMAT(paid_time, '%%Y-%%m-%%d') < "
        'DATE_SUB(CURDATE(), INTERVAL 1 DAY) ORDER BY paid_time limit 5;',
 'subparser_name': 'mysql_event',
 'timestamp_default': None,
 'timestamp_format': '%Y-%m-%d %H:%M:%S',
 'timestamp_from': 'paid_time',
 'url': 'https://testsensorsapi.juhaolian.cn/sa?project=default&token=schemaLimited-xTvWlzDD',
 'user': 'root'}
2020-06-18 11:27:25,865 1109 INFO start importing from mysql, sql=SELECT bill_no,bill_status,owner_code,owner_name,should_pay_total,discount_total,real_pay_total,spu_count,created_time,pay_click_time,paid_time,is_point_used,used_point,pay_type,cancelled_time,coupon_total,delivery_type,area_code,area_name,room_code,room_full_name,act_total FROM cb_sc_sale_order WHERE DATE_FORMAT(paid_time, '%%Y-%%m-%%d') < DATE_SUB(CURDATE(), INTERVAL 1 DAY) ORDER BY paid_time limit 5;
2020-06-18 11:27:25,867 187 DEBUG debug url: https://testsensorsapi.juhaolian.cn/debug?project=default&token=schemaLimited-xTvWlzDD
2020-06-18 11:27:25,969 190 DEBUG response: Sensors Analytics is ready to receive your data!
2020-06-18 11:27:25,969 1457 INFO running debug mode
2020-06-18 11:27:25,969 1480 INFO progress 0.00% {'total_write': 0, 'total_read': 0, 'error': 0, 'skip': 0, 'total': 5}
2020-06-18 11:27:26,444 1196 INFO end import from mysql.
2020-06-18 11:27:26,448 1506 INFO counter = {'total_write': 5, 'total_read': 5, 'error': 0, 'skip': 0, 'total': 5}.
2020-06-18 11:27:26,448 1508 INFO --debug ²ÎÊýÊ±²»»áÕæÕýµ¼ÈëÊý¾Ý
2020-06-18 11:27:27,493 1446 DEBUG args: {'bool_property_list': None,
 'case_sensitive': True,
 'db': 'sqyn_sc',
 'debug': True,
 'distinct_id_from': 'owner_code',
 'event_default': 'cb_sc_sale_return_sku',
 'event_from': None,
 'filename': None,
 'host': '10.18.226.58',
 'is_login': False,
 'output_file': None,
 'password': 'Hisense,123',
 'port': 3100,
 'project': None,
 'quit_on_error': False,
 'skip_cnt': 0,
 'sql': 'SELECT '
        'bill_no_return,sku_no,bill_no,sub_bill_no,bill_status_return,owner_code,owner_name,shop_code,shop_name,spu_code,spu_name,sku_price,return_count,return_real_total,return_total,return_time,created_time,real_return_count,created_user,updated_user,audit_time,order_area_code,order_area_name '
        'FROM cb_sc_sale_return_sku WHERE DATE_FORMAT(return_time, '
        "'%%Y-%%m-%%d') < DATE_SUB(CURDATE(), INTERVAL 1 DAY) ORDER BY "
        'return_time limit 5;',
 'subparser_name': 'mysql_event',
 'timestamp_default': None,
 'timestamp_format': '%Y-%m-%d %H:%M:%S',
 'timestamp_from': 'return_time',
 'url': 'https://testsensorsapi.juhaolian.cn/sa?project=default&token=schemaLimited-xTvWlzDD',
 'user': 'root'}
2020-06-18 11:27:27,615 1109 INFO start importing from mysql, sql=SELECT bill_no_return,sku_no,bill_no,sub_bill_no,bill_status_return,owner_code,owner_name,shop_code,shop_name,spu_code,spu_name,sku_price,return_count,return_real_total,return_total,return_time,created_time,real_return_count,created_user,updated_user,audit_time,order_area_code,order_area_name FROM cb_sc_sale_return_sku WHERE DATE_FORMAT(return_time, '%%Y-%%m-%%d') < DATE_SUB(CURDATE(), INTERVAL 1 DAY) ORDER BY return_time limit 5;
2020-06-18 11:27:27,618 187 DEBUG debug url: https://testsensorsapi.juhaolian.cn/debug?project=default&token=schemaLimited-xTvWlzDD
2020-06-18 11:27:27,709 190 DEBUG response: Sensors Analytics is ready to receive your data!
2020-06-18 11:27:27,709 1457 INFO running debug mode
2020-06-18 11:27:27,709 1480 INFO progress 0.00% {'total_write': 0, 'total_read': 0, 'error': 0, 'skip': 0, 'total': 5}
2020-06-18 11:27:28,297 1196 INFO end import from mysql.
2020-06-18 11:27:28,297 1506 INFO counter = {'total_write': 5, 'total_read': 5, 'error': 0, 'skip': 0, 'total': 5}.
2020-06-18 11:27:28,298 1508 INFO --debug ²ÎÊýÊ±²»»áÕæÕýµ¼ÈëÊý¾Ý
2020-06-23 11:02:28,934 1446 DEBUG args: {'bool_property_list': None,
 'case_sensitive': True,
 'db': 'sqyn_sc',
 'debug': False,
 'distinct_id_from': 'owner_code',
 'event_default': 'cb_sc_sale_orde',
 'event_from': None,
 'filename': None,
 'host': '192.168.3.7',
 'is_login': False,
 'output_file': None,
 'password': 'Jr32ff,DS3',
 'port': 3100,
 'project': None,
 'quit_on_error': False,
 'skip_cnt': 0,
 'sql': 'SELECT '
        'bill_no,bill_status,owner_code,owner_name,should_pay_total,discount_total,real_pay_total,spu_count,created_time,pay_click_time,paid_time,is_point_used,used_point,pay_type,cancelled_time,coupon_total,delivery_type,area_code,area_name,room_code,room_full_name,act_total '
        "FROM cb_sc_sale_order WHERE DATE_FORMAT(paid_time, '%Y-%m-%d') < "
        'DATE_SUB(CURDATE(), INTERVAL 1 DAY) ORDER BY paid_time;',
 'subparser_name': 'mysql_event',
 'timestamp_default': None,
 'timestamp_format': '%Y-%m-%d %H:%M:%S',
 'timestamp_from': 'paid_time',
 'url': 'https://testsensorsapi.juhaolian.cn/sa?project=default&token=schemaLimited-xTvWlzDD',
 'user': '99_test_sqynsc'}
2020-06-23 11:02:29,217 1109 INFO start importing from mysql, sql=SELECT bill_no,bill_status,owner_code,owner_name,should_pay_total,discount_total,real_pay_total,spu_count,created_time,pay_click_time,paid_time,is_point_used,used_point,pay_type,cancelled_time,coupon_total,delivery_type,area_code,area_name,room_code,room_full_name,act_total FROM cb_sc_sale_order WHERE DATE_FORMAT(paid_time, '%Y-%m-%d') < DATE_SUB(CURDATE(), INTERVAL 1 DAY) ORDER BY paid_time;
2020-06-23 11:02:29,218 187 DEBUG debug url: https://testsensorsapi.juhaolian.cn/debug?project=default&token=schemaLimited-xTvWlzDD
2020-06-23 11:02:29,270 190 DEBUG response: Sensors Analytics is ready to receive your data!
2020-06-23 11:02:29,270 1460 INFO sending msg to https://testsensorsapi.juhaolian.cn/sa?project=default&token=schemaLimited-xTvWlzDD directly
2020-06-23 11:02:29,662 1446 DEBUG args: {'bool_property_list': None,
 'case_sensitive': True,
 'db': 'sqyn_sc',
 'debug': False,
 'distinct_id_from': 'owner_code',
 'event_default': 'cb_sc_sale_return_sku',
 'event_from': None,
 'filename': None,
 'host': '192.168.3.7',
 'is_login': False,
 'output_file': None,
 'password': 'Jr32ff,DS3',
 'port': 3100,
 'project': None,
 'quit_on_error': False,
 'skip_cnt': 0,
 'sql': 'SELECT '
        'bill_no_return,sku_no,bill_no,sub_bill_no,bill_status_return,owner_code,owner_name,shop_code,shop_name,spu_code,spu_name,sku_price,return_count,return_real_total,return_total,return_time,created_time,real_return_count,created_user,updated_user,audit_time,order_area_code,order_area_name '
        "FROM cb_sc_sale_return_sku WHERE DATE_FORMAT(return_time, '%Y-%m-%d') "
        '< DATE_SUB(CURDATE(), INTERVAL 1 DAY) ORDER BY return_time;',
 'subparser_name': 'mysql_event',
 'timestamp_default': None,
 'timestamp_format': '%Y-%m-%d %H:%M:%S',
 'timestamp_from': 'return_time',
 'url': 'https://testsensorsapi.juhaolian.cn/sa?project=default&token=schemaLimited-xTvWlzDD',
 'user': '99_test_sqynsc'}
2020-06-23 11:02:29,770 1109 INFO start importing from mysql, sql=SELECT bill_no_return,sku_no,bill_no,sub_bill_no,bill_status_return,owner_code,owner_name,shop_code,shop_name,spu_code,spu_name,sku_price,return_count,return_real_total,return_total,return_time,created_time,real_return_count,created_user,updated_user,audit_time,order_area_code,order_area_name FROM cb_sc_sale_return_sku WHERE DATE_FORMAT(return_time, '%Y-%m-%d') < DATE_SUB(CURDATE(), INTERVAL 1 DAY) ORDER BY return_time;
2020-06-23 11:02:29,770 187 DEBUG debug url: https://testsensorsapi.juhaolian.cn/debug?project=default&token=schemaLimited-xTvWlzDD
2020-06-23 11:02:29,819 190 DEBUG response: Sensors Analytics is ready to receive your data!
2020-06-23 11:02:29,819 1460 INFO sending msg to https://testsensorsapi.juhaolian.cn/sa?project=default&token=schemaLimited-xTvWlzDD directly
2020-06-23 11:02:29,820 1480 INFO progress 0.00% {'total_write': 0, 'total_read': 0, 'error': 0, 'skip': 0, 'total': 949}
2020-06-23 11:02:30,244 1196 INFO end import from mysql.
2020-06-23 11:02:30,244 1506 INFO counter = {'total_write': 949, 'total_read': 949, 'error': 0, 'skip': 0, 'total': 949}.
2020-06-23 11:02:30,244 1510 INFO æ°æ®å·²åéå°ç¥ç­åæï¼è¯·æ¥çåç¹ç®¡çï¼ç¡®è®¤æ°æ®æ¯å¦æ ¡éªéè¿
2020-06-23 15:08:58,268 1446 DEBUG args: {'bool_property_list': None,
 'case_sensitive': True,
 'db': 'sqyn_sc',
 'debug': False,
 'distinct_id_from': 'owner_code',
 'event_default': 'cb_sc_sale_orde',
 'event_from': None,
 'filename': None,
 'host': '192.168.3.7',
 'is_login': False,
 'output_file': None,
 'password': 'Jr32ff,DS3',
 'port': 3100,
 'project': None,
 'quit_on_error': False,
 'skip_cnt': 0,
 'sql': 'SELECT '
        'bill_no,bill_status,owner_code,owner_name,should_pay_total,discount_total,real_pay_total,spu_count,created_time,pay_click_time,paid_time,is_point_used,used_point,pay_type,cancelled_time,coupon_total,delivery_type,area_code,area_name,room_code,room_full_name,act_total '
        "FROM cb_sc_sale_order WHERE DATE_FORMAT(paid_time, '%Y-%m-%d') < "
        'DATE_SUB(CURDATE(), INTERVAL 1 DAY) ORDER BY paid_time;',
 'subparser_name': 'mysql_event',
 'timestamp_default': None,
 'timestamp_format': '%Y-%m-%d %H:%M:%S',
 'timestamp_from': 'paid_time',
 'url': 'https://testsensorsapi.juhaolian.cn/sa?project=default&token=schemaLimited-xTvWlzDD',
 'user': '99_test_sqynsc'}
2020-06-23 15:08:59,449 1109 INFO start importing from mysql, sql=SELECT bill_no,bill_status,owner_code,owner_name,should_pay_total,discount_total,real_pay_total,spu_count,created_time,pay_click_time,paid_time,is_point_used,used_point,pay_type,cancelled_time,coupon_total,delivery_type,area_code,area_name,room_code,room_full_name,act_total FROM cb_sc_sale_order WHERE DATE_FORMAT(paid_time, '%Y-%m-%d') < DATE_SUB(CURDATE(), INTERVAL 1 DAY) ORDER BY paid_time;
2020-06-23 15:08:59,450 187 DEBUG debug url: https://testsensorsapi.juhaolian.cn/debug?project=default&token=schemaLimited-xTvWlzDD
2020-06-23 15:08:59,513 190 DEBUG response: Sensors Analytics is ready to receive your data!
2020-06-23 15:08:59,514 1460 INFO sending msg to https://testsensorsapi.juhaolian.cn/sa?project=default&token=schemaLimited-xTvWlzDD directly
2020-06-23 15:08:59,514 1480 INFO progress 0.00% {'total_write': 0, 'total_read': 0, 'error': 0, 'skip': 0, 'total': 21755}
2020-06-23 15:09:03,524 1480 INFO progress 45.97% {'total_write': 10000, 'total_read': 10000, 'error': 0, 'skip': 0, 'total': 21755}
2020-06-23 15:09:07,307 1480 INFO progress 91.93% {'total_write': 20000, 'total_read': 20000, 'error': 0, 'skip': 0, 'total': 21755}
2020-06-23 15:09:08,069 1196 INFO end import from mysql.
2020-06-23 15:09:08,069 1506 INFO counter = {'total_write': 21755, 'total_read': 21755, 'error': 0, 'skip': 0, 'total': 21755}.
2020-06-23 15:09:08,069 1510 INFO æ°æ®å·²åéå°ç¥ç­åæï¼è¯·æ¥çåç¹ç®¡çï¼ç¡®è®¤æ°æ®æ¯å¦æ ¡éªéè¿
2020-06-23 15:09:08,437 1446 DEBUG args: {'bool_property_list': None,
 'case_sensitive': True,
 'db': 'sqyn_sc',
 'debug': False,
 'distinct_id_from': 'owner_code',
 'event_default': 'cb_sc_sale_return_sku',
 'event_from': None,
 'filename': None,
 'host': '192.168.3.7',
 'is_login': False,
 'output_file': None,
 'password': 'Jr32ff,DS3',
 'port': 3100,
 'project': None,
 'quit_on_error': False,
 'skip_cnt': 0,
 'sql': 'SELECT '
        'bill_no_return,sku_no,bill_no,sub_bill_no,bill_status_return,owner_code,owner_name,shop_code,shop_name,spu_code,spu_name,sku_price,return_count,return_real_total,return_total,return_time,created_time,real_return_count,created_user,updated_user,audit_time,order_area_code,order_area_name '
        "FROM cb_sc_sale_return_sku WHERE DATE_FORMAT(return_time, '%Y-%m-%d') "
        '< DATE_SUB(CURDATE(), INTERVAL 1 DAY) ORDER BY return_time;',
 'subparser_name': 'mysql_event',
 'timestamp_default': None,
 'timestamp_format': '%Y-%m-%d %H:%M:%S',
 'timestamp_from': 'return_time',
 'url': 'https://testsensorsapi.juhaolian.cn/sa?project=default&token=schemaLimited-xTvWlzDD',
 'user': '99_test_sqynsc'}
2020-06-23 15:09:08,526 1109 INFO start importing from mysql, sql=SELECT bill_no_return,sku_no,bill_no,sub_bill_no,bill_status_return,owner_code,owner_name,shop_code,shop_name,spu_code,spu_name,sku_price,return_count,return_real_total,return_total,return_time,created_time,real_return_count,created_user,updated_user,audit_time,order_area_code,order_area_name FROM cb_sc_sale_return_sku WHERE DATE_FORMAT(return_time, '%Y-%m-%d') < DATE_SUB(CURDATE(), INTERVAL 1 DAY) ORDER BY return_time;
2020-06-23 15:09:08,526 187 DEBUG debug url: https://testsensorsapi.juhaolian.cn/debug?project=default&token=schemaLimited-xTvWlzDD
2020-06-23 15:09:08,539 190 DEBUG response: Sensors Analytics is ready to receive your data!
2020-06-23 15:09:08,539 1460 INFO sending msg to https://testsensorsapi.juhaolian.cn/sa?project=default&token=schemaLimited-xTvWlzDD directly
2020-06-23 15:09:08,540 1480 INFO progress 0.00% {'total_write': 0, 'total_read': 0, 'error': 0, 'skip': 0, 'total': 949}
2020-06-23 15:09:08,945 1196 INFO end import from mysql.
2020-06-23 15:09:08,945 1506 INFO counter = {'total_write': 949, 'total_read': 949, 'error': 0, 'skip': 0, 'total': 949}.
2020-06-23 15:09:08,945 1510 INFO æ°æ®å·²åéå°ç¥ç­åæï¼è¯·æ¥çåç¹ç®¡çï¼ç¡®è®¤æ°æ®æ¯å¦æ ¡éªéè¿
2020-06-23 15:13:50,588 1446 DEBUG args: {'bool_property_list': None,
 'case_sensitive': True,
 'db': 'sqyn_sc',
 'debug': False,
 'distinct_id_from': 'owner_code',
 'event_default': 'cb_sc_sale_orde',
 'event_from': None,
 'filename': None,
 'host': '192.168.3.7',
 'is_login': False,
 'output_file': None,
 'password': 'Jr32ff,DS3',
 'port': 3100,
 'project': None,
 'quit_on_error': False,
 'skip_cnt': 0,
 'sql': 'SELECT '
        'bill_no,bill_status,owner_code,owner_name,should_pay_total,discount_total,real_pay_total,spu_count,created_time,pay_click_time,paid_time,is_point_used,used_point,pay_type,cancelled_time,coupon_total,delivery_type,area_code,area_name,room_code,room_full_name,act_total '
        'FROM cb_sc_sale_order WHERE DATE_FORMAT(paid_time, '
        "'%Y-%m-%d')=DATE_SUB(CURDATE(),INTERVAL 1 DAY) ORDER BY paid_time;",
 'subparser_name': 'mysql_event',
 'timestamp_default': None,
 'timestamp_format': '%Y-%m-%d %H:%M:%S',
 'timestamp_from': 'paid_time',
 'url': 'https://testsensorsapi.juhaolian.cn/sa?project=default&token=schemaLimited-xTvWlzDD',
 'user': '99_test_sqynsc'}
2020-06-23 15:13:50,642 1109 INFO start importing from mysql, sql=SELECT bill_no,bill_status,owner_code,owner_name,should_pay_total,discount_total,real_pay_total,spu_count,created_time,pay_click_time,paid_time,is_point_used,used_point,pay_type,cancelled_time,coupon_total,delivery_type,area_code,area_name,room_code,room_full_name,act_total FROM cb_sc_sale_order WHERE DATE_FORMAT(paid_time, '%Y-%m-%d')=DATE_SUB(CURDATE(),INTERVAL 1 DAY) ORDER BY paid_time;
2020-06-23 15:13:50,643 187 DEBUG debug url: https://testsensorsapi.juhaolian.cn/debug?project=default&token=schemaLimited-xTvWlzDD
2020-06-23 15:13:50,656 190 DEBUG response: Sensors Analytics is ready to receive your data!
2020-06-23 15:13:50,656 1460 INFO sending msg to https://testsensorsapi.juhaolian.cn/sa?project=default&token=schemaLimited-xTvWlzDD directly
2020-06-23 15:13:50,657 1480 INFO progress 0.00% {'total_write': 0, 'total_read': 0, 'error': 0, 'skip': 0, 'total': 10}
2020-06-23 15:13:50,671 1196 INFO end import from mysql.
2020-06-23 15:13:50,671 1506 INFO counter = {'total_write': 10, 'total_read': 10, 'error': 0, 'skip': 0, 'total': 10}.
2020-06-23 15:13:50,671 1510 INFO æ°æ®å·²åéå°ç¥ç­åæï¼è¯·æ¥çåç¹ç®¡çï¼ç¡®è®¤æ°æ®æ¯å¦æ ¡éªéè¿
2020-06-23 15:13:50,998 1446 DEBUG args: {'bool_property_list': None,
 'case_sensitive': True,
 'db': 'sqyn_sc',
 'debug': False,
 'distinct_id_from': 'owner_code',
 'event_default': 'cb_sc_sale_return_sku',
 'event_from': None,
 'filename': None,
 'host': '192.168.3.7',
 'is_login': False,
 'output_file': None,
 'password': 'Jr32ff,DS3',
 'port': 3100,
 'project': None,
 'quit_on_error': False,
 'skip_cnt': 0,
 'sql': 'SELECT '
        'bill_no_return,sku_no,bill_no,sub_bill_no,bill_status_return,owner_code,owner_name,shop_code,shop_name,spu_code,spu_name,sku_price,return_count,return_real_total,return_total,return_time,created_time,real_return_count,created_user,updated_user,audit_time,order_area_code,order_area_name '
        'FROM cb_sc_sale_return_sku WHERE DATE_FORMAT(return_time, '
        "'%Y-%m-%d')=DATE_SUB(CURDATE(),INTERVAL 1 DAY) ORDER BY return_time;",
 'subparser_name': 'mysql_event',
 'timestamp_default': None,
 'timestamp_format': '%Y-%m-%d %H:%M:%S',
 'timestamp_from': 'return_time',
 'url': 'https://testsensorsapi.juhaolian.cn/sa?project=default&token=schemaLimited-xTvWlzDD',
 'user': '99_test_sqynsc'}
2020-06-23 15:13:51,036 1109 INFO start importing from mysql, sql=SELECT bill_no_return,sku_no,bill_no,sub_bill_no,bill_status_return,owner_code,owner_name,shop_code,shop_name,spu_code,spu_name,sku_price,return_count,return_real_total,return_total,return_time,created_time,real_return_count,created_user,updated_user,audit_time,order_area_code,order_area_name FROM cb_sc_sale_return_sku WHERE DATE_FORMAT(return_time, '%Y-%m-%d')=DATE_SUB(CURDATE(),INTERVAL 1 DAY) ORDER BY return_time;
2020-06-23 15:13:51,037 187 DEBUG debug url: https://testsensorsapi.juhaolian.cn/debug?project=default&token=schemaLimited-xTvWlzDD
2020-06-23 15:13:51,049 190 DEBUG response: Sensors Analytics is ready to receive your data!
2020-06-23 15:13:51,050 1460 INFO sending msg to https://testsensorsapi.juhaolian.cn/sa?project=default&token=schemaLimited-xTvWlzDD directly
2020-06-23 15:13:51,417 1446 DEBUG args: {'bool_property_list': None,
 'case_sensitive': True,
 'db': 'sqyn_sc',
 'debug': False,
 'distinct_id_from': 'distinct_id',
 'event_default': 'cb_sc_area_data_set',
 'event_from': None,
 'filename': None,
 'host': '192.168.3.7',
 'is_login': False,
 'output_file': None,
 'password': 'Jr32ff,DS3',
 'port': 3100,
 'project': None,
 'quit_on_error': False,
 'skip_cnt': 0,
 'sql': 'SELECT distinct_id,area_code,owner_cnt,area_name,sc_show_time FROM '
        'cb_sc_area_data_set WHERE DATE_FORMAT(sc_show_time, '
        "'%Y-%m-%d')=DATE_SUB(CURDATE(),INTERVAL 1 DAY);",
 'subparser_name': 'mysql_event',
 'timestamp_default': None,
 'timestamp_format': '%Y-%m-%d %H:%M:%S',
 'timestamp_from': 'sc_show_time',
 'url': 'https://testsensorsapi.juhaolian.cn/sa?project=default&token=schemaLimited-xTvWlzDD',
 'user': '99_test_sqynsc'}
2020-06-23 15:13:51,452 1109 INFO start importing from mysql, sql=SELECT distinct_id,area_code,owner_cnt,area_name,sc_show_time FROM cb_sc_area_data_set WHERE DATE_FORMAT(sc_show_time, '%Y-%m-%d')=DATE_SUB(CURDATE(),INTERVAL 1 DAY);
2020-06-23 15:13:51,453 187 DEBUG debug url: https://testsensorsapi.juhaolian.cn/debug?project=default&token=schemaLimited-xTvWlzDD
2020-06-23 15:13:51,467 190 DEBUG response: Sensors Analytics is ready to receive your data!
2020-06-23 15:13:51,467 1460 INFO sending msg to https://testsensorsapi.juhaolian.cn/sa?project=default&token=schemaLimited-xTvWlzDD directly
2020-06-23 15:13:51,467 1480 INFO progress 0.00% {'total_write': 0, 'total_read': 0, 'error': 0, 'skip': 0, 'total': 47}
2020-06-23 15:13:51,480 1196 INFO end import from mysql.
2020-06-23 15:13:51,480 1506 INFO counter = {'total_write': 47, 'total_read': 47, 'error': 0, 'skip': 0, 'total': 47}.
2020-06-23 15:13:51,480 1510 INFO æ°æ®å·²åéå°ç¥ç­åæï¼è¯·æ¥çåç¹ç®¡çï¼ç¡®è®¤æ°æ®æ¯å¦æ ¡éªéè¿
2020-06-23 15:13:51,815 1446 DEBUG args: {'bool_property_list': None,
 'case_sensitive': True,
 'db': 'sqyn_sc',
 'debug': False,
 'distinct_id_from': 'distinct_id',
 'event_default': 'cb_sc_goods_area_count',
 'event_from': None,
 'filename': None,
 'host': '192.168.3.7',
 'is_login': False,
 'output_file': None,
 'password': 'Jr32ff,DS3',
 'port': 3100,
 'project': None,
 'quit_on_error': False,
 'skip_cnt': 0,
 'sql': 'SELECT distinct_id,area_code,sku_cnt,area_name,sc_show_time FROM '
        'cb_sc_goods_area_count WHERE DATE_FORMAT(sc_show_time, '
        "'%Y-%m-%d')=DATE_SUB(CURDATE(),INTERVAL 1 DAY);",
 'subparser_name': 'mysql_event',
 'timestamp_default': None,
 'timestamp_format': '%Y-%m-%d %H:%M:%S',
 'timestamp_from': 'sc_show_time',
 'url': 'https://testsensorsapi.juhaolian.cn/sa?project=default&token=schemaLimited-xTvWlzDD',
 'user': '99_test_sqynsc'}
2020-06-23 15:13:51,848 1109 INFO start importing from mysql, sql=SELECT distinct_id,area_code,sku_cnt,area_name,sc_show_time FROM cb_sc_goods_area_count WHERE DATE_FORMAT(sc_show_time, '%Y-%m-%d')=DATE_SUB(CURDATE(),INTERVAL 1 DAY);
2020-06-23 15:13:51,849 187 DEBUG debug url: https://testsensorsapi.juhaolian.cn/debug?project=default&token=schemaLimited-xTvWlzDD
2020-06-23 15:13:51,860 190 DEBUG response: Sensors Analytics is ready to receive your data!
2020-06-23 15:13:51,860 1460 INFO sending msg to https://testsensorsapi.juhaolian.cn/sa?project=default&token=schemaLimited-xTvWlzDD directly
2020-06-23 15:13:51,860 1480 INFO progress 0.00% {'total_write': 0, 'total_read': 0, 'error': 0, 'skip': 0, 'total': 95}
2020-06-23 15:13:51,905 1196 INFO end import from mysql.
2020-06-23 15:13:51,905 1506 INFO counter = {'total_write': 95, 'total_read': 95, 'error': 0, 'skip': 0, 'total': 95}.
2020-06-23 15:13:51,905 1510 INFO æ°æ®å·²åéå°ç¥ç­åæï¼è¯·æ¥çåç¹ç®¡çï¼ç¡®è®¤æ°æ®æ¯å¦æ ¡éªéè¿
2020-06-23 15:13:52,266 1446 DEBUG args: {'bool_property_list': None,
 'case_sensitive': True,
 'db': 'sqyn_sc',
 'debug': False,
 'distinct_id_from': 'distinct_id',
 'event_default': 'cb_sc_owner_binding_area_count',
 'event_from': None,
 'filename': None,
 'host': '192.168.3.7',
 'is_login': False,
 'output_file': None,
 'password': 'Jr32ff,DS3',
 'port': 3100,
 'project': None,
 'quit_on_error': False,
 'skip_cnt': 0,
 'sql': 'SELECT distinct_id,area_code,owner_binding_cnt,area_name,sc_show_time '
        'FROM cb_sc_owner_binding_area_count WHERE DATE_FORMAT(sc_show_time, '
        "'%Y-%m-%d')=DATE_SUB(CURDATE(),INTERVAL 1 DAY);",
 'subparser_name': 'mysql_event',
 'timestamp_default': None,
 'timestamp_format': '%Y-%m-%d %H:%M:%S',
 'timestamp_from': 'sc_show_time',
 'url': 'https://testsensorsapi.juhaolian.cn/sa?project=default&token=schemaLimited-xTvWlzDD',
 'user': '99_test_sqynsc'}
2020-06-23 15:13:52,303 1109 INFO start importing from mysql, sql=SELECT distinct_id,area_code,owner_binding_cnt,area_name,sc_show_time FROM cb_sc_owner_binding_area_count WHERE DATE_FORMAT(sc_show_time, '%Y-%m-%d')=DATE_SUB(CURDATE(),INTERVAL 1 DAY);
2020-06-23 15:13:52,304 187 DEBUG debug url: https://testsensorsapi.juhaolian.cn/debug?project=default&token=schemaLimited-xTvWlzDD
2020-06-23 15:13:52,316 190 DEBUG response: Sensors Analytics is ready to receive your data!
2020-06-23 15:13:52,316 1460 INFO sending msg to https://testsensorsapi.juhaolian.cn/sa?project=default&token=schemaLimited-xTvWlzDD directly
2020-06-23 15:13:52,316 1480 INFO progress 0.00% {'total_write': 0, 'total_read': 0, 'error': 0, 'skip': 0, 'total': 79}
2020-06-23 15:13:52,341 1196 INFO end import from mysql.
2020-06-23 15:13:52,341 1506 INFO counter = {'total_write': 79, 'total_read': 79, 'error': 0, 'skip': 0, 'total': 79}.
2020-06-23 15:13:52,341 1510 INFO æ°æ®å·²åéå°ç¥ç­åæï¼è¯·æ¥çåç¹ç®¡çï¼ç¡®è®¤æ°æ®æ¯å¦æ ¡éªéè¿
