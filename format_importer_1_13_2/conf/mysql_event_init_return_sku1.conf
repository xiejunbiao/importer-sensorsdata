#########
# mysql_event参数文件
#
# 请先阅读format importer使用文档之后再填写此配置！
# https://www.sensorsdata.cn/manual/format_importer.html
#########

#########
# 以下是公共参数，说明参考https://www.sensorsdata.cn/manual/format_importer.html#42-%E5%85%AC%E5%85%B1%E5%8F%82%E6%95%B0
########

# 下面两个参数选一个必填
# 发送数据的 url, 获取方式参考https://www.sensorsdata.cn/manual/format_importer.html#21-%E8%8E%B7%E5%8F%96%E6%95%B0%E6%8D%AE%E6%8E%A5%E6%94%B6%E5%9C%B0%E5%9D%80, 注意这个参数和--output_file不能同时使用
url: https://testsensorsapi.juhaolian.cn/sa?project=default&token=schemaLimited-xTvWlzDD

# 输出的文件名，输出每行是一个符合格式的json。注意这个参数和--url不可同时使用
# output_file: ./sa.log

# 可选参数, 指定的project名，默认是default
# project: default

# 可选参数，第一次运行请忽略，如果运行失败，需要跳过成功的那集行，这个就是指定跳过几行的。
# skip_cnt: 10

# 可选参数，如果指定了就是使用debug模式，不会导入数据，只在stdout显示数据，参见https://www.sensorsdata.cn/manual/debug_mode.html
debug

# 可选参数，如果选中，则出现一条错误日志就会退出
# quit_on_error

# 必填参数，从哪个字段作为 distinct_id，如果指定，则每条数据算作对应字段的用户的行为。
distinct_id_from: owner_code

# 可选参数, distinct_id是否是login id，默认不是.
# is_login

# 下面两个参数选一个必填
# 哪个字段作为 event 名，如果指定，则每条数据的事件名为对应字段的值。
# event_from: action
# 默认的 event 名，如果指定，则将所有数据都算作这个 event 的。
event_default: cb_sc_sale_return_sku

# 可选参数 哪个字段作为 time, 如果指定，则每条数据对应的时间为对应字段的值。
timestamp_from:


# 可选参数 默认的 timestamp, 如果指定，则将所有数据都算作这个时间的事件。
# timestamp_default: 2010-04-03 00:00:00

# 可选参数 和 timestamp_from 一起使用，如果指定，并 timestamp_from 对应的字段是个字符串，可以通过这种方式指定时间格式。默认是%Y-%m-%d %H:%M:%S。
# timestamp_format: %Y-%m-%d %H:%M:%S


#########
# 以下是导入mysql的其他参数，说明参考https://www.sensorsdata.cn/manual/format_importer.html#45-%E5%AF%BC%E5%85%A5-mysql-%E6%95%B0%E6%8D%AE%E7%9A%84%E5%85%B6%E4%BB%96%E5%8F%82%E6%95%B0
########

# 必填参数，mysql 的 username
user: root

# 必填参数，mysql 的 password
password: Hisense,123

# 必填参数，mysql 的地址
host: 10.18.226.58

# 必填参数，mysql 的端口号
port: 3100

# 必填参数，mysql 对应的 db 名
db: sqyn_sc

# 下面两个参数选一个必填
# 查询语句，建议加 order by 等方式保证多次查询结果顺序一致。注意务必写在一行，如果不能写在一行建议用filename参数传递sql文件
# sql: select user_id, action, time, item_id, item_name from events order by time;
# where return_time is not NULL
#sql: SELECT bill_no_return,sku_no,bill_no,sub_bill_no,bill_status_return,owner_code,owner_name,shop_code,shop_name,spu_code,spu_name,sku_price,return_count,return_real_total,return_total,return_time,created_time,real_return_count,created_user,updated_user,audit_time,order_area_code,order_area_name FROM cb_sc_sale_return_sku where return_time is not NULL ORDER BY return_time;

# 没有where return_time is not NULL条件 并没有行数限制
#sql: SELECT bill_no_return,sku_no,bill_no,sub_bill_no,bill_status_return,owner_code,owner_name,shop_code,shop_name,spu_code,spu_name,sku_price,return_count,return_real_total,return_total,return_time,created_time,real_return_count,created_user,updated_user,audit_time,order_area_code,order_area_name FROM cb_sc_sale_return_sku ORDER BY return_time;

# 存在行数限制，并且存在here return_time is not NULL条件
# sql: SELECT bill_no_return,sku_no,bill_no,sub_bill_no,bill_status_return,owner_code,owner_name,shop_code,shop_name,spu_code,spu_name,sku_price,return_count,return_real_total,return_total,return_time,created_time,real_return_count,created_user,updated_user,audit_time,order_area_code,order_area_name FROM cb_sc_sale_return_sku where return_time is not NULL ORDER BY return_time;
sql: SELECT bill_no_return,sku_no,bill_no,sub_bill_no,bill_status_return,owner_code,owner_name,shop_code,shop_name,spu_code,spu_name,sku_price,return_count,return_real_total,return_total,return_time,created_time,real_return_count,created_user,updated_user,audit_time,order_area_code,order_area_name FROM cb_sc_sale_return_sku WHERE DATE_FORMAT(return_time, '%%Y-%%m-%%d') < DATE_SUB(CURDATE(), INTERVAL 1 DAY) ORDER BY return_time limit 5;
# 查询语句所在的文件路径，建议加 order by 等方式保证多次查询结果顺序一致。
# filename: ./test.sql
# 可选参数，逗号分割的bool类型属性列表，会将对应的属性值为1的转化为true，0转化为false
# bool_property_list: isTopSales

# 可选参数, true/false,是否是大小写敏感，注意如果大小写不敏感会全部转化为大写，默认为true
# case_sensitive: true
